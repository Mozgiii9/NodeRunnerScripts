#!/bin/bash

# –û–ø—Ä–µ–¥–µ–ª–µ–Ω–∏–µ —Ü–≤–µ—Ç–æ–≤ –¥–ª—è –±–æ–ª–µ–µ –∏–Ω—Ñ–æ—Ä–º–∞—Ç–∏–≤–Ω–æ–≥–æ –≤—ã–≤–æ–¥–∞
RED='\033[0;31m'
GREEN='\033[0;32m'
YELLOW='\033[0;33m'
BLUE='\033[0;34m'
PURPLE='\033[0;35m'
CYAN='\033[0;36m'
WHITE='\033[0;37m'
ORANGE='\033[0;38;5;208m'
NC='\033[0m' # No Color
BOLD='\033[1m'

# –°–æ–∑–¥–∞–µ–º –¥–∏—Ä–µ–∫—Ç–æ—Ä–∏—é –¥–ª—è –ª–æ–≥–æ–≤
mkdir -p "$HOME/t3rn"

# –û–ø—Ä–µ–¥–µ–ª—è–µ–º –ø—É—Ç–∏ –∫ —Ñ–∞–π–ª–∞–º –ª–æ–≥–æ–≤
SETUP_LOG="$HOME/t3rn/setup.log"
NODE_LOG="$HOME/t3rn/node.log"

# –ò–Ω–∏—Ü–∏–∞–ª–∏–∑–∏—Ä—É–µ–º –ª–æ–≥-—Ñ–∞–π–ª —É—Å—Ç–∞–Ω–æ–≤–∫–∏, –µ—Å–ª–∏ –æ–Ω –Ω–µ —Å—É—â–µ—Å—Ç–≤—É–µ—Ç
if [ ! -f "$SETUP_LOG" ]; then
    touch "$SETUP_LOG"
    echo "$(date '+%Y-%m-%d %H:%M:%S') [INFO] –ò–Ω–∏—Ü–∏–∞–ª–∏–∑–∞—Ü–∏—è –ª–æ–≥-—Ñ–∞–π–ª–∞ —É—Å—Ç–∞–Ω–æ–≤–∫–∏" >> "$SETUP_LOG"
fi

# –ò–Ω–∏—Ü–∏–∞–ª–∏–∑–∏—Ä—É–µ–º –ª–æ–≥-—Ñ–∞–π–ª –Ω–æ–¥—ã, –µ—Å–ª–∏ –æ–Ω –Ω–µ —Å—É—â–µ—Å—Ç–≤—É–µ—Ç
if [ ! -f "$NODE_LOG" ]; then
    touch "$NODE_LOG"
    echo "$(date '+%Y-%m-%d %H:%M:%S') [INFO] –ò–Ω–∏—Ü–∏–∞–ª–∏–∑–∞—Ü–∏—è –ª–æ–≥-—Ñ–∞–π–ª–∞ –Ω–æ–¥—ã" >> "$NODE_LOG"
fi

# –°–æ–∑–¥–∞–µ–º —Ñ—É–Ω–∫—Ü–∏—é –¥–ª—è –ª–æ–≥–∏—Ä–æ–≤–∞–Ω–∏—è –≤ —Ñ–∞–π–ª –±–µ–∑ –≤—ã–≤–æ–¥–∞ –Ω–∞ —ç–∫—Ä–∞–Ω
log_to_file() {
    local message="$1"
    echo "$(date '+%Y-%m-%d %H:%M:%S') $message" >> "$SETUP_LOG"
}

# –§—É–Ω–∫—Ü–∏—è –¥–ª—è –æ—Ç–æ–±—Ä–∞–∂–µ–Ω–∏—è —É—Å–ø–µ—à–Ω—ã—Ö —Å–æ–æ–±—â–µ–Ω–∏–π
success_message() {
    echo -e "${GREEN}[‚úÖ] $1${NC}"
    log_to_file "[SUCCESS] $1"
}

# –§—É–Ω–∫—Ü–∏—è –¥–ª—è –æ—Ç–æ–±—Ä–∞–∂–µ–Ω–∏—è –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏–æ–Ω–Ω—ã—Ö —Å–æ–æ–±—â–µ–Ω–∏–π
info_message() {
    echo -e "${CYAN}[‚ÑπÔ∏è] $1${NC}"
    log_to_file "[INFO] $1"
}

# –§—É–Ω–∫—Ü–∏—è –¥–ª—è –æ—Ç–æ–±—Ä–∞–∂–µ–Ω–∏—è –æ—à–∏–±–æ–∫
error_message() {
    echo -e "${RED}[‚ùå] $1${NC}"
    log_to_file "[ERROR] $1"
}

# –§—É–Ω–∫—Ü–∏—è –¥–ª—è –æ—Ç–æ–±—Ä–∞–∂–µ–Ω–∏—è –ø—Ä–µ–¥—É–ø—Ä–µ–∂–¥–µ–Ω–∏–π
warning_message() {
    echo -e "${YELLOW}[‚ö†Ô∏è] $1${NC}"
    log_to_file "[WARNING] $1"
}

# –û—á–∏—Å—Ç–∫–∞ —ç–∫—Ä–∞–Ω–∞
clear

# –§—É–Ω–∫—Ü–∏—è –¥–ª—è –æ—Ç–æ–±—Ä–∞–∂–µ–Ω–∏—è –ª–æ–∫–∞–ª—å–Ω–æ–≥–æ ASCII –ª–æ–≥–æ—Ç–∏–ø–∞
display_logo() {
    echo -e "${CYAN}"
    echo -e "    ‚ñà‚ñà‚ñà‚ïó   ‚ñà‚ñà‚ïó ‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ïó ‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ïó ‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ïó‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ïó ‚ñà‚ñà‚ïó   ‚ñà‚ñà‚ïó‚ñà‚ñà‚ñà‚ïó   ‚ñà‚ñà‚ïó‚ñà‚ñà‚ñà‚ïó   ‚ñà‚ñà‚ïó‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ïó‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ïó  "
    echo -e "    ‚ñà‚ñà‚ñà‚ñà‚ïó  ‚ñà‚ñà‚ïë‚ñà‚ñà‚ïî‚ïê‚ïê‚ïê‚ñà‚ñà‚ïó‚ñà‚ñà‚ïî‚ïê‚ïê‚ñà‚ñà‚ïó‚ñà‚ñà‚ïî‚ïê‚ïê‚ïê‚ïê‚ïù‚ñà‚ñà‚ïî‚ïê‚ïê‚ñà‚ñà‚ïó‚ñà‚ñà‚ïë   ‚ñà‚ñà‚ïë‚ñà‚ñà‚ñà‚ñà‚ïó  ‚ñà‚ñà‚ïë‚ñà‚ñà‚ñà‚ñà‚ïó  ‚ñà‚ñà‚ïë‚ñà‚ñà‚ïî‚ïê‚ïê‚ïê‚ïê‚ïù‚ñà‚ñà‚ïî‚ïê‚ïê‚ñà‚ñà‚ïó "
    echo -e "    ‚ñà‚ñà‚ïî‚ñà‚ñà‚ïó ‚ñà‚ñà‚ïë‚ñà‚ñà‚ïë   ‚ñà‚ñà‚ïë‚ñà‚ñà‚ïë  ‚ñà‚ñà‚ïë‚ñà‚ñà‚ñà‚ñà‚ñà‚ïó  ‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ïî‚ïù‚ñà‚ñà‚ïë   ‚ñà‚ñà‚ïë‚ñà‚ñà‚ïî‚ñà‚ñà‚ïó ‚ñà‚ñà‚ïë‚ñà‚ñà‚ïî‚ñà‚ñà‚ïó ‚ñà‚ñà‚ïë‚ñà‚ñà‚ñà‚ñà‚ñà‚ïó  ‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ïî‚ïù "
    echo -e "    ‚ñà‚ñà‚ïë‚ïö‚ñà‚ñà‚ïó‚ñà‚ñà‚ïë‚ñà‚ñà‚ïë   ‚ñà‚ñà‚ïë‚ñà‚ñà‚ïë  ‚ñà‚ñà‚ïë‚ñà‚ñà‚ïî‚ïê‚ïê‚ïù  ‚ñà‚ñà‚ïî‚ïê‚ïê‚ñà‚ñà‚ïó‚ñà‚ñà‚ïë   ‚ñà‚ñà‚ïë‚ñà‚ñà‚ïë‚ïö‚ñà‚ñà‚ïó‚ñà‚ñà‚ïë‚ñà‚ñà‚ïë‚ïö‚ñà‚ñà‚ïó‚ñà‚ñà‚ïë‚ñà‚ñà‚ïî‚ïê‚ïê‚ïù  ‚ñà‚ñà‚ïî‚ïê‚ïê‚ñà‚ñà‚ïó "
    echo -e "    ‚ñà‚ñà‚ïë ‚ïö‚ñà‚ñà‚ñà‚ñà‚ïë‚ïö‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ïî‚ïù‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ïî‚ïù‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ïó‚ñà‚ñà‚ïë  ‚ñà‚ñà‚ïë‚ïö‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ïî‚ïù‚ñà‚ñà‚ïë ‚ïö‚ñà‚ñà‚ñà‚ñà‚ïë‚ñà‚ñà‚ïë ‚ïö‚ñà‚ñà‚ñà‚ñà‚ïë‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ïó‚ñà‚ñà‚ïë  ‚ñà‚ñà‚ïë "
    echo -e "    ‚ïö‚ïê‚ïù  ‚ïö‚ïê‚ïê‚ïê‚ïù ‚ïö‚ïê‚ïê‚ïê‚ïê‚ïê‚ïù ‚ïö‚ïê‚ïê‚ïê‚ïê‚ïê‚ïù ‚ïö‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïù‚ïö‚ïê‚ïù  ‚ïö‚ïê‚ïù ‚ïö‚ïê‚ïê‚ïê‚ïê‚ïê‚ïù ‚ïö‚ïê‚ïù  ‚ïö‚ïê‚ïê‚ïê‚ïù‚ïö‚ïê‚ïù  ‚ïö‚ïê‚ïê‚ïê‚ïù‚ïö‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïù‚ïö‚ïê‚ïù  ‚ïö‚ïê‚ïù "
    echo -e "${NC}"
    echo -e "${BOLD}${BLUE}‚ïî‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïó${NC}"
    echo -e "${BOLD}${BLUE}‚ïë             T3RN NODE MANAGER             ‚ïë${NC}"
    echo -e "${BOLD}${BLUE}‚ïö‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïù${NC}"
    echo -e ""
}

# –§—É–Ω–∫—Ü–∏—è –¥–ª—è –æ—Ç–æ–±—Ä–∞–∂–µ–Ω–∏—è –º–µ–Ω—é
print_menu() {
    echo -e "${BOLD}${ORANGE}‚ïî‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïó${NC}"
    echo -e "${BOLD}${ORANGE}‚ïë             üåü –ú–ï–ù–Æ T3RN üåü              ‚ïë${NC}"
    echo -e "${BOLD}${ORANGE}‚ïö‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïù${NC}"
    echo -e "${BOLD}${WHITE}1.${NC} ${BLUE}–£—Å—Ç–∞–Ω–æ–≤–∫–∞ –Ω–æ–¥—ã${NC}"
    echo -e "${BOLD}${WHITE}2.${NC} ${BLUE}–£—Å—Ç–∞–Ω–æ–≤–∫–∞ –∫–æ–Ω–∫—Ä–µ—Ç–Ω–æ–π –≤–µ—Ä—Å–∏–∏${NC}"
    echo -e "${BOLD}${WHITE}3.${NC} ${BLUE}–ü—Ä–æ–≤–µ—Ä–∫–∞ –ª–æ–≥–æ–≤${NC}"
    echo -e "${BOLD}${WHITE}4.${NC} ${BLUE}–£–ø—Ä–∞–≤–ª–µ–Ω–∏–µ RPC${NC}"
    echo -e "${BOLD}${WHITE}5.${NC} ${BLUE}–£–ø—Ä–∞–≤–ª–µ–Ω–∏–µ –≥–∞–∑–æ–º${NC}"
    echo -e "${BOLD}${WHITE}6.${NC} ${BLUE}–û–±–Ω–æ–≤–ª–µ–Ω–∏–µ –Ω–æ–¥—ã${NC}"
    echo -e "${BOLD}${WHITE}7.${NC} ${BLUE}–£–¥–∞–ª–µ–Ω–∏–µ –Ω–æ–¥—ã${NC}"
    echo -e "${BOLD}${WHITE}8.${NC} ${BLUE}–í—ã—Ö–æ–¥${NC}"
    echo -e "${PURPLE}‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê${NC}"
    echo -e "${GREEN}–í–≤–µ–¥–∏—Ç–µ –Ω–æ–º–µ—Ä –æ–ø—Ü–∏–∏:${NC}"
}

# Log file for debugging
LOG_FILE="$HOME/t3rn/setup.log"
mkdir -p "$(dirname "$LOG_FILE")" 2>/dev/null
# –û—Ç–∫–ª—é—á–∞–µ–º –≥–ª–æ–±–∞–ª—å–Ω–æ–µ –ø–µ—Ä–µ–Ω–∞–ø—Ä–∞–≤–ª–µ–Ω–∏–µ
# exec > >(tee -a "$LOG_FILE") 2>&1

# RPC —ç–Ω–¥–ø–æ–∏–Ω—Ç—ã –ø–æ —É–º–æ–ª—á–∞–Ω–∏—é - –æ–ø—Ä–µ–¥–µ–ª—è–µ–º –≥–ª–æ–±–∞–ª—å–Ω–æ
DEFAULT_RPC_ENDPOINTS_JSON='{
  "l2rn": ["https://b2n.rpc.caldera.xyz/http"],
  "arbt": ["https://arbitrum-sepolia.drpc.org"],
  "bast": ["https://base-sepolia-rpc.publicnode.com"],
  "blst": ["https://sepolia.blast.io"],
  "opst": ["https://sepolia.optimism.io"],
  "unit": ["https://unichain-sepolia.drpc.org"]
}'

# –ò–∑–≤–ª–µ—á–µ–Ω–∏–µ —ç–Ω–¥–ø–æ–∏–Ω—Ç–æ–≤ –ø–æ —É–º–æ–ª—á–∞–Ω–∏—é –∏–∑ JSON
DEFAULT_RPC_ENDPOINTS_ARBT=$(echo "$DEFAULT_RPC_ENDPOINTS_JSON" | jq -r '.arbt[0]')
DEFAULT_RPC_ENDPOINTS_BSSP=$(echo "$DEFAULT_RPC_ENDPOINTS_JSON" | jq -r '.bast[0]')
DEFAULT_RPC_ENDPOINTS_BLSS=$(echo "$DEFAULT_RPC_ENDPOINTS_JSON" | jq -r '.blst[0]')
DEFAULT_RPC_ENDPOINTS_OPSP=$(echo "$DEFAULT_RPC_ENDPOINTS_JSON" | jq -r '.opst[0]')
DEFAULT_RPC_ENDPOINTS_UNIT=$(echo "$DEFAULT_RPC_ENDPOINTS_JSON" | jq -r '.unit[0]')
DEFAULT_RPC_ENDPOINTS_L2RN=$(echo "$DEFAULT_RPC_ENDPOINTS_JSON" | jq -r '.l2rn[0]')

echo -e "\n${BOLD}${WHITE}‚ïî‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïó${NC}"
echo -e "${BOLD}${WHITE}‚ïë           üöÄ T3RN NODE SETUP           ‚ïë${NC}"
echo -e "${BOLD}${WHITE}‚ïö‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïù${NC}\n"
sleep 2

# –§—É–Ω–∫—Ü–∏—è –¥–ª—è –æ—Ç–æ–±—Ä–∞–∂–µ–Ω–∏—è –∏–Ω—Å—Ç—Ä—É–∫—Ü–∏–π –ø–æ –∏—Å–ø–æ–ª—å–∑–æ–≤–∞–Ω–∏—é
usage() {
    echo -e "${GREEN}–ò—Å–ø–æ–ª—å–∑–æ–≤–∞–Ω–∏–µ: $0 [--verbose] [--dry-run]${NC}"
    echo -e "${GREEN}  --verbose: –í–∫–ª—é—á–∏—Ç—å –ø–æ–¥—Ä–æ–±–Ω–æ–µ –ª–æ–≥–∏—Ä–æ–≤–∞–Ω–∏–µ –¥–ª—è –æ—Ç–ª–∞–¥–∫–∏.${NC}"
    echo -e "${GREEN}  --dry-run: –ò–º–∏—Ç–∏—Ä–æ–≤–∞—Ç—å –≤—ã–ø–æ–ª–Ω–µ–Ω–∏–µ —Å–∫—Ä–∏–ø—Ç–∞ –±–µ–∑ –≤–Ω–µ—Å–µ–Ω–∏—è –∏–∑–º–µ–Ω–µ–Ω–∏–π.${NC}"
    exit 0
}

# –§—É–Ω–∫—Ü–∏—è –¥–ª—è –ø—Ä–æ–≤–µ—Ä–∫–∏ –∏ –∑–∞–≤–µ—Ä—à–µ–Ω–∏—è —Ä–∞–±–æ—Ç–∞—é—â–µ–≥–æ –ø—Ä–æ—Ü–µ—Å—Å–∞ executor
kill_running_executor() {
    local pid
    pid=$(pgrep -f "./executor")

    if [ -n "$pid" ]; then
        if $DRY_RUN; then
            echo -e "${GREEN}[Dry-run] –ó–∞–≤–µ—Ä—à–∏–ª –±—ã —Ä–∞–±–æ—Ç–∞—é—â–∏–π –ø—Ä–æ—Ü–µ—Å—Å executor (PID: $pid)${NC}"
        else
            echo -e "${ORANGE}‚öôÔ∏è –ù–∞–π–¥–µ–Ω –∑–∞–ø—É—â–µ–Ω–Ω—ã–π –ø—Ä–æ—Ü–µ—Å—Å executor. –ó–∞–≤–µ—Ä—à–µ–Ω–∏–µ –ø—Ä–æ—Ü–µ—Å—Å–∞...${NC}"
            kill "$pid"
            sleep 2
            echo -e "${GREEN}‚úÖ –ü—Ä–æ—Ü–µ—Å—Å executor —É—Å–ø–µ—à–Ω–æ –∑–∞–≤–µ—Ä—à–µ–Ω.${NC}"
        fi
    else
        echo -e "${BLUE}‚ÑπÔ∏è –ó–∞–ø—É—â–µ–Ω–Ω—ã—Ö –ø—Ä–æ—Ü–µ—Å—Å–æ–≤ executor –Ω–µ –Ω–∞–π–¥–µ–Ω–æ.${NC}"
    fi
}

# –§—É–Ω–∫—Ü–∏—è –¥–ª—è —É—Å—Ç–∞–Ω–æ–≤–∫–∏ jq, –µ—Å–ª–∏ –æ–Ω –æ—Ç—Å—É—Ç—Å—Ç–≤—É–µ—Ç
install_jq_if_needed() {
    if ! command -v jq &>/dev/null; then
        echo -e "${ORANGE}üì¶ jq —Ç—Ä–µ–±—É–µ—Ç—Å—è –¥–ª—è –æ–±—Ä–∞–±–æ—Ç–∫–∏ JSON. –£—Å—Ç–∞–Ω–æ–≤–∫–∞ jq...${NC}"
        
        # Detect OS and install jq
        if [[ "$OSTYPE" == "linux-gnu"* ]]; then
            sudo apt-get update && sudo apt-get install -y jq
        elif [[ "$OSTYPE" == "darwin"* ]]; then
            brew install jq  # macOS
        elif [[ "$OSTYPE" == "alpine"* ]]; then
            apk add jq      # Alpine Linux
        else
            echo -e "${RED}‚ùå –ù–µ —É–¥–∞–ª–æ—Å—å —É—Å—Ç–∞–Ω–æ–≤–∏—Ç—å jq. –ü–æ–∂–∞–ª—É–π—Å—Ç–∞, —É—Å—Ç–∞–Ω–æ–≤–∏—Ç–µ –µ–≥–æ –≤—Ä—É—á–Ω—É—é –∏ –ø–æ–ø—Ä–æ–±—É–π—Ç–µ —Å–Ω–æ–≤–∞.${NC}"
            echo -e "${ORANGE}–£—Å—Ç–∞–Ω–æ–≤–∏—Ç–µ jq —á–µ—Ä–µ–∑ –º–µ–Ω–µ–¥–∂–µ—Ä –ø–∞–∫–µ—Ç–æ–≤ –≤–∞—à–µ–π —Å–∏—Å—Ç–µ–º—ã.${NC}"
            exit 1
        fi

        # Verify installation
        if command -v jq &>/dev/null; then
            echo -e "${GREEN}‚úÖ jq —É—Å–ø–µ—à–Ω–æ —É—Å—Ç–∞–Ω–æ–≤–ª–µ–Ω.${NC}"
        else
            echo -e "${RED}‚ùå –ù–µ —É–¥–∞–ª–æ—Å—å —É—Å—Ç–∞–Ω–æ–≤–∏—Ç—å jq. –ü–æ–∂–∞–ª—É–π—Å—Ç–∞, —É—Å—Ç–∞–Ω–æ–≤–∏—Ç–µ –µ–≥–æ –≤—Ä—É—á–Ω—É—é –∏ –ø–æ–ø—Ä–æ–±—É–π—Ç–µ —Å–Ω–æ–≤–∞.${NC}"
            exit 1
        fi
    fi
}

# –†–∞–∑–±–æ—Ä –∞—Ä–≥—É–º–µ–Ω—Ç–æ–≤ –∫–æ–º–∞–Ω–¥–Ω–æ–π —Å—Ç—Ä–æ–∫–∏
VERBOSE=false
DRY_RUN=false
for arg in "$@"; do
    case "$arg" in
        --verbose)
            VERBOSE=true
            ;;
        --dry-run)
            DRY_RUN=true
            ;;
        --help)
            usage
            ;;
        *)
            echo -e "${RED}–ù–µ–∏–∑–≤–µ—Å—Ç–Ω—ã–π –∞—Ä–≥—É–º–µ–Ω—Ç: $arg${NC}"
            usage
            ;;
    esac
done

# –£—Å—Ç–∞–Ω–æ–≤–∫–∞ jq
install_jq_if_needed

# –í–∫–ª—é—á–µ–Ω–∏–µ –ø–æ–¥—Ä–æ–±–Ω–æ–≥–æ —Ä–µ–∂–∏–º–∞, –µ—Å–ª–∏ –∑–∞–ø—Ä–æ—à–µ–Ω–æ
if $VERBOSE; then
    set -x
fi

# –°–æ–æ–±—â–µ–Ω–∏–µ –æ —Ä–µ–∂–∏–º–µ dry-run
if $DRY_RUN; then
    echo -e "${ORANGE}–†–µ–∂–∏–º dry-run –≤–∫–ª—é—á–µ–Ω. –ò–∑–º–µ–Ω–µ–Ω–∏—è –Ω–µ –±—É–¥—É—Ç –≤–Ω–µ—Å–µ–Ω—ã.${NC}"
	sleep 1
fi

# –§—É–Ω–∫—Ü–∏—è –¥–ª—è –∑–∞–ø—Ä–æ—Å–∞ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å—Å–∫–æ–≥–æ –≤–≤–æ–¥–∞
ask_for_input() {
    local prompt="$1"
    local input

    read -p "$prompt: " input
    echo "$input"
}

# –§—É–Ω–∫—Ü–∏—è –¥–ª—è –ø—Ä–æ–≤–µ—Ä–∫–∏ –∑–Ω–∞—á–µ–Ω–∏—è –≥–∞–∑–∞
validate_gas_value() {
    local gas_value="$1"
    
    # Check if the input is an integer
    if [[ ! "$gas_value" =~ ^[0-9]+$ ]]; then
        echo -e "${RED}‚õΩ –í–≤–µ–¥–∏—Ç–µ –∑–Ω–∞—á–µ–Ω–∏–µ –≥–∞–∑–∞ (–¥–æ–ª–∂–Ω–æ –±—ã—Ç—å —Ü–µ–ª—ã–º —á–∏—Å–ª–æ–º –æ—Ç 100 –¥–æ 20000)${NC}"
        return 1
    fi

    # Check if the gas value is within the allowed range
    if (( gas_value < 100 || gas_value > 20000 )); then
        echo -e "${RED}‚ùå –û—à–∏–±–∫–∞: –ó–Ω–∞—á–µ–Ω–∏–µ –≥–∞–∑–∞ –¥–æ–ª–∂–Ω–æ –±—ã—Ç—å –æ—Ç 100 –¥–æ 20000.${NC}"
        return 1
    fi

    return 0
}

parse_rpc_input() {
    local input="$1"
    local -a endpoints
    IFS=',' read -ra endpoints <<< "$input"
    printf '['
    for ((i=0; i<${#endpoints[@]}; i++)); do
        endpoint=$(echo "${endpoints[$i]}" | xargs)  # Trim whitespace
        printf '"%s"' "$endpoint"
        [[ $i -ne $((${#endpoints[@]}-1)) ]] && printf ','
    done
    printf ']'
}

# –£—Å—Ç–∞–Ω–∞–≤–ª–∏–≤–∞–µ–º —Ä—É—Å—Å–∫—É—é –ª–æ–∫–∞–ª–∏–∑–∞—Ü–∏—é
LANG_CODE="ru"
MSG_VERSION_CHOICE="üß™ –í—ã–±–µ—Ä–∏—Ç–µ –≤–µ—Ä—Å–∏—é –¥–ª—è —É—Å—Ç–∞–Ω–æ–≤–∫–∏:"
MSG_LATEST_OPTION="1) üöÄ –ü–æ—Å–ª–µ–¥–Ω—è—è –≤–µ—Ä—Å–∏—è"
MSG_SPECIFIC_OPTION="2) üìå –ö–æ–Ω–∫—Ä–µ—Ç–Ω–∞—è –≤–µ—Ä—Å–∏—è"
MSG_ENTER_VERSION="üìù –í–≤–µ–¥–∏—Ç–µ –Ω–æ–º–µ—Ä –≤–µ—Ä—Å–∏–∏, –∫–æ—Ç–æ—Ä—É—é –≤—ã —Ö–æ—Ç–∏—Ç–µ —É—Å—Ç–∞–Ω–æ–≤–∏—Ç—å (–Ω–∞–ø—Ä–∏–º–µ—Ä, v0.51.0):"
MSG_INVALID_VERSION_CHOICE="‚ö†Ô∏è –ù–µ–≤–µ—Ä–Ω—ã–π –≤—ã–±–æ—Ä. –ü–æ–∂–∞–ª—É–π—Å—Ç–∞, –≤–≤–µ–¥–∏—Ç–µ 1 –∏–ª–∏ 2"
MSG_INVALID_VERSION_FORMAT="‚ö†Ô∏è –ù–µ–≤–µ—Ä–Ω—ã–π —Ñ–æ—Ä–º–∞—Ç –≤–µ—Ä—Å–∏–∏. –î–æ–ª–∂–Ω–æ –±—ã—Ç—å –∫–∞–∫ v0.51.0"
MSG_CLEANUP="üßπ –û—á–∏—Å—Ç–∫–∞ –ø—Ä–µ–¥—ã–¥—É—â–∏—Ö —É—Å—Ç–∞–Ω–æ–≤–æ–∫..."
MSG_DOWNLOAD="üì• –ó–∞–≥—Ä—É–∑–∫–∞ –ø–æ—Å–ª–µ–¥–Ω–µ–≥–æ —Ä–µ–ª–∏–∑–∞..."
MSG_EXTRACT="üì¶ –†–∞—Å–ø–∞–∫–æ–≤–∫–∞ –∞—Ä—Ö–∏–≤–∞..."
MSG_INVALID_INPUT="‚ö†Ô∏è –ù–µ–≤–µ—Ä–Ω—ã–π –≤–≤–æ–¥. –ü–æ–∂–∞–ª—É–π—Å—Ç–∞, –≤–≤–µ–¥–∏—Ç–µ 'api' –∏–ª–∏ 'rpc'."
MSG_PRIVATE_KEY="üîë –í–≤–µ–¥–∏—Ç–µ –≤–∞—à –ø—Ä–∏–≤–∞—Ç–Ω—ã–π –∫–ª—é—á –∫–æ—à–µ–ª—å–∫–∞"
MSG_GAS_VALUE="‚õΩ –í–≤–µ–¥–∏—Ç–µ –∑–Ω–∞—á–µ–Ω–∏–µ –≥–∞–∑–∞ (–¥–æ–ª–∂–Ω–æ –±—ã—Ç—å —Ü–µ–ª—ã–º —á–∏—Å–ª–æ–º –æ—Ç 100 –¥–æ 20000)"
MSG_INVALID_GAS="‚ùå –û—à–∏–±–∫–∞: –ó–Ω–∞—á–µ–Ω–∏–µ –≥–∞–∑–∞ –¥–æ–ª–∂–Ω–æ –±—ã—Ç—å –æ—Ç 100 –¥–æ 20000."
MSG_NODE_TYPE="üñ•Ô∏è –í—ã —Ö–æ—Ç–∏—Ç–µ –∑–∞–ø—É—Å—Ç–∏—Ç—å API-—É–∑–µ–ª –∏–ª–∏ RPC-—É–∑–µ–ª? (api/rpc)"
MSG_RPC_ENDPOINTS="üîå –•–æ—Ç–∏—Ç–µ –¥–æ–±–∞–≤–∏—Ç—å –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å—Å–∫–∏–µ RPC-—Ç–æ—á–∫–∏? (y/n)"
MSG_THANKS="üí´ –£—Å—Ç–∞–Ω–æ–≤–∫–∞ –Ω–æ–¥—ã T3RN —É—Å–ø–µ—à–Ω–æ –∑–∞–≤–µ—Ä—à–µ–Ω–∞!"
MSG_L1RN_RPC="üìã –î–æ—Å—Ç—É–ø–Ω—ã–µ L1RN RPC endpoints:"
MSG_SELECT_L1RN="üî¢ –í–≤–µ–¥–∏—Ç–µ –Ω–æ–º–µ—Ä–∞ L1RN RPC endpoints –¥–ª—è –≤–∫–ª—é—á–µ–Ω–∏—è (—á–µ—Ä–µ–∑ –∑–∞–ø—è—Ç—É—é, –Ω–∞–ø—Ä–∏–º–µ—Ä, 1,2):"
MSG_INVALID_SELECTION="‚ö†Ô∏è –ù–µ–≤–µ—Ä–Ω—ã–π –≤—ã–±–æ—Ä: %s. –ü—Ä–æ–ø—É—Å–∫–∞–µ–º."
MSG_OUT_OF_RANGE="‚ö†Ô∏è –ò–Ω–¥–µ–∫—Å %s –≤–Ω–µ –¥–∏–∞–ø–∞–∑–æ–Ω–∞. –ü—Ä–æ–ø—É—Å–∫–∞–µ–º."
MSG_NO_SELECTION="‚ö†Ô∏è –ù–µ—Ç –¥–æ–ø—É—Å—Ç–∏–º—ã—Ö –≤—ã–±–æ—Ä–æ–≤. –ü–æ–∂–∞–ª—É–π—Å—Ç–∞, –≤—ã–±–µ—Ä–∏—Ç–µ —Ö–æ—Ç—è –±—ã –æ–¥–∏–Ω endpoint."
MSG_ALCHEMY_API_KEY="üîë –í–≤–µ–¥–∏—Ç–µ –≤–∞—à Alchemy API –∫–ª—é—á:"
MSG_CREATE_DIR="üìÅ –°–æ–∑–¥–∞–Ω–∏–µ –∏ –ø–µ—Ä–µ—Ö–æ–¥ –≤ –¥–∏—Ä–µ–∫—Ç–æ—Ä–∏—é t3rn..."
MSG_DOWNLOAD_COMPLETE="‚úÖ –ó–∞–≥—Ä—É–∑–∫–∞ –∑–∞–≤–µ—Ä—à–µ–Ω–∞."
MSG_NAVIGATE_BINARY="üîç –ü–µ—Ä–µ—Ö–æ–¥ –∫ —Ä–∞—Å–ø–æ–ª–æ–∂–µ–Ω–∏—é –±–∏–Ω–∞—Ä–Ω–æ–≥–æ —Ñ–∞–π–ª–∞ executor..."
MSG_COLLECTED_INPUTS="üìä –°–æ–±—Ä–∞–Ω–Ω—ã–µ –¥–∞–Ω–Ω—ã–µ –∏ –Ω–∞—Å—Ç—Ä–æ–π–∫–∏:"
MSG_NODE_TYPE_LABEL="üè∑Ô∏è –¢–∏–ø —É–∑–ª–∞:"
MSG_ALCHEMY_API_KEY_LABEL="üîë –ö–ª—é—á Alchemy API:"
MSG_GAS_VALUE_LABEL="‚õΩ –ó–Ω–∞—á–µ–Ω–∏–µ –≥–∞–∑–∞:"
MSG_RPC_ENDPOINTS_LABEL="üåê –ê–∫—Ç–∏–≤–Ω—ã–µ —Å–µ—Ç–∏ –∏ RPC-—Ç–æ—á–∫–∏:"
MSG_WALLET_PRIVATE_KEY_LABEL="üîê –ü—Ä–∏–≤–∞—Ç–Ω—ã–π –∫–ª—é—á –∫–æ—à–µ–ª—å–∫–∞:"
MSG_FAILED_CREATE_DIR="‚ùå –ù–µ —É–¥–∞–ª–æ—Å—å —Å–æ–∑–¥–∞—Ç—å –∏–ª–∏ –ø–µ—Ä–µ–π—Ç–∏ –≤ –¥–∏—Ä–µ–∫—Ç–æ—Ä–∏—é t3rn. –í—ã—Ö–æ–¥."
MSG_FAILED_FETCH_TAG="‚ùå –ù–µ —É–¥–∞–ª–æ—Å—å –ø–æ–ª—É—á–∏—Ç—å –ø–æ—Å–ª–µ–¥–Ω–∏–π —Ç–µ–≥ —Ä–µ–ª–∏–∑–∞. –ü—Ä–æ–≤–µ—Ä—å—Ç–µ –ø–æ–¥–∫–ª—é—á–µ–Ω–∏–µ –∫ –∏–Ω—Ç–µ—Ä–Ω–µ—Ç—É –∏ –ø–æ–ø—Ä–æ–±—É–π—Ç–µ —Å–Ω–æ–≤–∞."
MSG_FAILED_DOWNLOAD="‚ùå –ù–µ —É–¥–∞–ª–æ—Å—å –∑–∞–≥—Ä—É–∑–∏—Ç—å –ø–æ—Å–ª–µ–¥–Ω–∏–π —Ä–µ–ª–∏–∑. –ü—Ä–æ–≤–µ—Ä—å—Ç–µ URL –∏ –ø–æ–ø—Ä–æ–±—É–π—Ç–µ —Å–Ω–æ–≤–∞."
MSG_FAILED_EXTRACT="‚ùå –ù–µ —É–¥–∞–ª–æ—Å—å –∏–∑–≤–ª–µ—á—å –∞—Ä—Ö–∏–≤. –ü—Ä–æ–≤–µ—Ä—å—Ç–µ —Ñ–∞–π–ª –∏ –ø–æ–ø—Ä–æ–±—É–π—Ç–µ —Å–Ω–æ–≤–∞."
MSG_FAILED_NAVIGATE="‚ùå –ù–µ —É–¥–∞–ª–æ—Å—å –ø–µ—Ä–µ–π—Ç–∏ –∫ —Ä–∞—Å–ø–æ–ª–æ–∂–µ–Ω–∏—é –±–∏–Ω–∞—Ä–Ω–æ–≥–æ —Ñ–∞–π–ª–∞ executor. –í—ã—Ö–æ–¥."
MSG_DELETE_T3RN_DIR="üóëÔ∏è –£–¥–∞–ª–µ–Ω–∏–µ —Å—É—â–µ—Å—Ç–≤—É—é—â–µ–π –¥–∏—Ä–µ–∫—Ç–æ—Ä–∏–∏ t3rn..."
MSG_DELETE_EXECUTOR_DIR="üóëÔ∏è –£–¥–∞–ª–µ–Ω–∏–µ —Å—É—â–µ—Å—Ç–≤—É—é—â–µ–π –¥–∏—Ä–µ–∫—Ç–æ—Ä–∏–∏ executor..."
MSG_DELETE_TAR_GZ="üóëÔ∏è –£–¥–∞–ª–µ–Ω–∏–µ —Ä–∞–Ω–µ–µ –∑–∞–≥—Ä—É–∂–µ–Ω–Ω—ã—Ö tar.gz —Ñ–∞–π–ª–æ–≤..."
MSG_EXTRACTION_COMPLETE="‚úÖ –ê—Ä—Ö–∏–≤ —É—Å–ø–µ—à–Ω–æ –∏–∑–≤–ª–µ—á–µ–Ω."
MSG_RUNNING_NODE="‚ñ∂Ô∏è –ó–∞–ø—É—Å–∫ —É–∑–ª–∞..."
MSG_DRY_RUN_DELETE="üîç [Dry-run] –°—É—â–µ—Å—Ç–≤—É—é—â–∏–µ –¥–∏—Ä–µ–∫—Ç–æ—Ä–∏–∏ t3rn –∏ executor –±—É–¥—É—Ç —É–¥–∞–ª–µ–Ω—ã."
MSG_DRY_RUN_CREATE_DIR="üîç [Dry-run] –ë—É–¥–µ—Ç —Å–æ–∑–¥–∞–Ω–∞ –∏ –æ—Ç–∫—Ä—ã—Ç–∞ –¥–∏—Ä–µ–∫—Ç–æ—Ä–∏—è t3rn."
MSG_DRY_RUN_NAVIGATE="üîç [Dry-run] –ë—É–¥–µ—Ç –≤—ã–ø–æ–ª–Ω–µ–Ω –ø–µ—Ä–µ—Ö–æ–¥ –∫ —Ä–∞—Å–ø–æ–ª–æ–∂–µ–Ω–∏—é –±–∏–Ω–∞—Ä–Ω–æ–≥–æ —Ñ–∞–π–ª–∞ executor."
MSG_DRY_RUN_RUN_NODE="üîç [Dry-run] –£–∑–µ–ª –±—É–¥–µ—Ç –∑–∞–ø—É—â–µ–Ω."
MSG_ENTER_CUSTOM_RPC="üîå –í–≤–µ–¥–∏—Ç–µ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å—Å–∫–∏–µ RPC-—Ç–æ—á–∫–∏:"
MSG_ARBT_RPC="üîå Arbitrum Sepolia RPC-—Ç–æ—á–∫–∏ (–ø–æ —É–º–æ–ª—á–∞–Ω–∏—é: $DEFAULT_RPC_ENDPOINTS_ARBT)"
MSG_BSSP_RPC="üîå Base Sepolia RPC-—Ç–æ—á–∫–∏ (–ø–æ —É–º–æ–ª—á–∞–Ω–∏—é: $DEFAULT_RPC_ENDPOINTS_BSSP)"
MSG_BLSS_RPC="üîå Blast Sepolia RPC-—Ç–æ—á–∫–∏ (–ø–æ —É–º–æ–ª—á–∞–Ω–∏—é: $DEFAULT_RPC_ENDPOINTS_BLSS)"
MSG_OPSP_RPC="üîå Optimism Sepolia RPC-—Ç–æ—á–∫–∏ (–ø–æ —É–º–æ–ª—á–∞–Ω–∏—é: $DEFAULT_RPC_ENDPOINTS_OPSP)"
MSG_AVAILABLE_NETWORKS="üåç –î–æ—Å—Ç—É–ø–Ω—ã–µ —Å–µ—Ç–∏:"
MSG_ARBT_DESC="üî∑ ARBT = arbitrum-sepolia"
MSG_BSSP_DESC="üî∑ BAST = base-sepolia"
MSG_OPSP_DESC="üî∑ OPST = optimism-sepolia"
MSG_BLSS_DESC="üî∑ BLST = blast-sepolia"
MSG_L2RN_ALWAYS_ENABLED="‚úÖ L2RN –≤—Å–µ–≥–¥–∞ –≤–∫–ª—é—á–µ–Ω."
MSG_ENTER_NETWORKS="üåê –í–≤–µ–¥–∏—Ç–µ —Å–µ—Ç–∏, –∫–æ—Ç–æ—Ä—ã–µ —Ö–æ—Ç–∏—Ç–µ –∞–∫—Ç–∏–≤–∏—Ä–æ–≤–∞—Ç—å (—á–µ—Ä–µ–∑ –∑–∞–ø—è—Ç—É—é, –Ω–∞–ø—Ä–∏–º–µ—Ä: ARBT,BAST,OPST,BLST –∏–ª–∏ –Ω–∞–∂–º–∏—Ç–µ Enter/–≤–≤–µ–¥–∏—Ç–µ 'all' –¥–ª—è –≤—Å–µ—Ö):"
MSG_INVALID_NETWORK="‚ö†Ô∏è –ù–µ–≤–µ—Ä–Ω–∞—è —Å–µ—Ç—å: %s. –ü–æ–∂–∞–ª—É–π—Å—Ç–∞, –≤–≤–µ–¥–∏—Ç–µ –∫–æ—Ä—Ä–µ–∫—Ç–Ω—ã–µ —Å–µ—Ç–∏."
MSG_KILLING_EXECUTOR="‚öôÔ∏è –ù–∞–π–¥–µ–Ω –∑–∞–ø—É—â–µ–Ω–Ω—ã–π –ø—Ä–æ—Ü–µ—Å—Å executor. –ó–∞–≤–µ—Ä—à–µ–Ω–∏–µ –ø—Ä–æ—Ü–µ—Å—Å–∞..."
MSG_EXECUTOR_KILLED="‚úÖ –ü—Ä–æ—Ü–µ—Å—Å executor —É—Å–ø–µ—à–Ω–æ –∑–∞–≤–µ—Ä—à–µ–Ω."
MSG_NO_EXECUTOR_RUNNING="‚ÑπÔ∏è –ó–∞–ø—É—â–µ–Ω–Ω—ã—Ö –ø—Ä–æ—Ü–µ—Å—Å–æ–≤ executor –Ω–µ –Ω–∞–π–¥–µ–Ω–æ."
MSG_CHECKING_EXECUTOR="üîç === –ü—Ä–æ–≤–µ—Ä–∫–∞ –∑–∞–ø—É—â–µ–Ω–Ω—ã—Ö –ø—Ä–æ—Ü–µ—Å—Å–æ–≤ executor ==="
MSG_KILLING_EXECUTOR="‚öôÔ∏è –û–±–Ω–∞—Ä—É–∂–µ–Ω –∑–∞–ø—É—â–µ–Ω–Ω—ã–π –ø—Ä–æ—Ü–µ—Å—Å executor. –û—Å—Ç–∞–Ω–∞–≤–ª–∏–≤–∞–µ–º –¥–ª—è –ø—Ä–µ–¥–æ—Ç–≤—Ä–∞—â–µ–Ω–∏—è –∫–æ–Ω—Ñ–ª–∏–∫—Ç–æ–≤..."
MSG_EXECUTOR_KILLED="‚úÖ –°—Ç–∞—Ä—ã–π –ø—Ä–æ—Ü–µ—Å—Å executor —É—Å–ø–µ—à–Ω–æ –æ—Å—Ç–∞–Ω–æ–≤–ª–µ–Ω."
MSG_NO_EXECUTOR_RUNNING="‚úÖ –ó–∞–ø—É—â–µ–Ω–Ω—ã—Ö –ø—Ä–æ—Ü–µ—Å—Å–æ–≤ executor –Ω–µ –æ–±–Ω–∞—Ä—É–∂–µ–Ω–æ - –º–æ–∂–Ω–æ –ø—Ä–æ–¥–æ–ª–∂–∞—Ç—å."
			MSG_WARNING="‚ö†Ô∏è –ü–†–ï–î–£–ü–†–ï–ñ–î–ï–ù–ò–ï: –ï–°–õ–ò –í–´ –î–ï–õ–ò–¢–ï–°–¨ –°–ö–†–ò–ù–®–û–¢–ê–ú–ò –≠–¢–û–ì–û –°–ö–†–ò–ü–¢–ê –ò–ó-–ó–ê –û–®–ò–ë–ö–ò, –£–ë–ï–î–ò–¢–ï–°–¨, –ß–¢–û –í–ê–®–ò –ü–†–ò–í–ê–¢–ù–´–ï –ö–õ–Æ–ß–ò –ò –ö–õ–Æ–ß ALCHEMY API –ù–ï –í–ò–î–ù–´! –í –ü–†–û–¢–ò–í–ù–û–ú –°–õ–£–ß–ê–ï –í–´ –ú–û–ñ–ï–¢–ï –ü–û–¢–ï–†–Ø–¢–¨ –í–°–ï –°–í–û–ò –ê–ö–¢–ò–í–´ –í –ö–û–®–ï–õ–¨–ö–ï –ò–õ–ò –†–ê–°–ö–†–´–¢–¨ –î–û–°–¢–£–ü –ö API! ‚ö†Ô∏è"
MSG_JQ_REQUIRED="üì¶ jq —Ç—Ä–µ–±—É–µ—Ç—Å—è –¥–ª—è –æ–±—Ä–∞–±–æ—Ç–∫–∏ JSON. –£—Å—Ç–∞–Ω–æ–≤–∫–∞ jq..."
MSG_JQ_INSTALL_FAILED="‚ùå –ù–µ —É–¥–∞–ª–æ—Å—å —É—Å—Ç–∞–Ω–æ–≤–∏—Ç—å jq. –ü–æ–∂–∞–ª—É–π—Å—Ç–∞, —É—Å—Ç–∞–Ω–æ–≤–∏—Ç–µ –µ–≥–æ –≤—Ä—É—á–Ω—É—é –∏ –ø–æ–ø—Ä–æ–±—É–π—Ç–µ —Å–Ω–æ–≤–∞."
MSG_JQ_INSTALL_SUCCESS="‚úÖ jq —É—Å–ø–µ—à–Ω–æ —É—Å—Ç–∞–Ω–æ–≤–ª–µ–Ω."
MSG_NODE_TYPE_OPTIONS="üîÑ –í—ã–±–µ—Ä–∏—Ç–µ —Ç–∏–ø —É–∑–ª–∞:"
MSG_API_MODE="1Ô∏è‚É£ API –£–∑–µ–ª - –ü—Ä—è–º–∞—è –æ—Ç–ø—Ä–∞–≤–∫–∞ —Ç—Ä–∞–Ω–∑–∞–∫—Ü–∏–π —á–µ—Ä–µ–∑ API"
MSG_ALCHEMY_MODE="2Ô∏è‚É£ Alchemy RPC - –ò—Å–ø–æ–ª—å–∑–æ–≤–∞–Ω–∏–µ RPC endpoints –æ—Ç Alchemy (—Ç—Ä–µ–±—É–µ—Ç—Å—è API-–∫–ª—é—á)"
MSG_CUSTOM_MODE="3Ô∏è‚É£ –ö–∞—Å—Ç–æ–º–Ω—ã–π RPC - –ò—Å–ø–æ–ª—å–∑–æ–≤–∞–Ω–∏–µ –ø—É–±–ª–∏—á–Ω—ã—Ö/–ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å—Å–∫–∏—Ö RPC endpoints (Alchemy –Ω–µ —Ç—Ä–µ–±—É–µ—Ç—Å—è)"
MSG_API_MODE_DESC="üöÄ –†–µ–∂–∏–º API: –ü—Ä—è–º–∞—è –æ—Ç–ø—Ä–∞–≤–∫–∞ —Ç—Ä–∞–Ω–∑–∞–∫—Ü–∏–π –≤–∫–ª—é—á–µ–Ω–∞"
MSG_ALCHEMY_MODE_DESC="üîå –†–µ–∂–∏–º Alchemy: –ò—Å–ø–æ–ª—å–∑—É—é—Ç—Å—è RPC endpoints –æ—Ç Alchemy"
MSG_CUSTOM_MODE_DESC="üõ†Ô∏è –†–µ–∂–∏–º –∫–∞—Å—Ç–æ–º–Ω–æ–≥–æ RPC: –ò—Å–ø–æ–ª—å–∑—É—é—Ç—Å—è –ø—É–±–ª–∏—á–Ω—ã–µ/–ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å—Å–∫–∏–µ endpoints"
MSG_SELECT_NODE_TYPE="üî¢ –í–≤–µ–¥–∏—Ç–µ –≤–∞—à –≤—ã–±–æ—Ä (1/2/3): "
MSG_INVALID_NODE_TYPE="‚ö†Ô∏è –ù–µ–≤–µ—Ä–Ω—ã–π –≤—ã–±–æ—Ä —Ç–∏–ø–∞ —É–∑–ª–∞. –ü–æ–∂–∞–ª—É–π—Å—Ç–∞, –≤–≤–µ–¥–∏—Ç–µ 1, 2 –∏–ª–∏ 3."

# –§—É–Ω–∫—Ü–∏—è –¥–ª—è —É–ø—Ä–∞–≤–ª–µ–Ω–∏—è RPC
manage_rpc() {
    local return_to_main=false
    
    while [ "$return_to_main" = false ]; do
        clear
        echo -e "\n${BOLD}${BLUE}üîå –£–ø—Ä–∞–≤–ª–µ–Ω–∏–µ RPC –¥–ª—è –Ω–æ–¥—ã T3RN...${NC}\n"
        
        # –ü—Ä–æ–≤–µ—Ä–∫–∞ –Ω–∞–ª–∏—á–∏—è —É—Å—Ç–∞–Ω–æ–≤–ª–µ–Ω–Ω–æ–π –Ω–æ–¥—ã
        if [ ! -f "$HOME/t3rn/executor/executor/bin/executor" ]; then
            error_message "–ù–æ–¥–∞ –Ω–µ —É—Å—Ç–∞–Ω–æ–≤–ª–µ–Ω–∞. –°–Ω–∞—á–∞–ª–∞ –≤—ã–ø–æ–ª–Ω–∏—Ç–µ —É—Å—Ç–∞–Ω–æ–≤–∫—É."
            return 1
        fi
        
        # –ü–æ–¥–º–µ–Ω—é –¥–ª—è —Ä–∞–±–æ—Ç—ã —Å RPC
        echo -e "${BOLD}${BLUE}–í—ã–±–µ—Ä–∏—Ç–µ –¥–µ–π—Å—Ç–≤–∏–µ:${NC}\n"
        echo -e "${WHITE}[${CYAN}1${WHITE}] ${GREEN}‚ûú ${WHITE}üìä –ü—Ä–æ—Å–º–æ—Ç—Ä —Ç–µ–∫—É—â–∏—Ö RPC endpoints${NC}"
        echo -e "${WHITE}[${CYAN}2${WHITE}] ${GREEN}‚ûú ${WHITE}‚úèÔ∏è –ò–∑–º–µ–Ω–µ–Ω–∏–µ –æ–¥–Ω–æ–≥–æ RPC endpoint${NC}"
        echo -e "${WHITE}[${CYAN}3${WHITE}] ${GREEN}‚ûú ${WHITE}üìù –ò–∑–º–µ–Ω–µ–Ω–∏–µ –≤—Å–µ—Ö RPC endpoints${NC}"
        echo -e "${WHITE}[${CYAN}4${WHITE}] ${GREEN}‚ûú ${WHITE}üîÑ –°–±—Ä–æ—Å–∏—Ç—å RPC –Ω–∞ –∑–Ω–∞—á–µ–Ω–∏—è –ø–æ —É–º–æ–ª—á–∞–Ω–∏—é${NC}"
        echo -e "${WHITE}[${CYAN}5${WHITE}] ${GREEN}‚ûú ${WHITE}üîô –í–µ—Ä–Ω—É—Ç—å—Å—è –≤ –≥–ª–∞–≤–Ω–æ–µ –º–µ–Ω—é${NC}\n"
        
        read -p "$(echo -e "${GREEN}–í–≤–µ–¥–∏—Ç–µ –Ω–æ–º–µ—Ä –¥–µ–π—Å—Ç–≤–∏—è [1-5]:${NC} ")" rpc_choice
        
        # –ü–µ—Ä–µ–º–µ–Ω–Ω–∞—è –¥–ª—è —Ö—Ä–∞–Ω–µ–Ω–∏—è RPC –∫–æ–Ω—Ñ–∏–≥—É—Ä–∞—Ü–∏–∏
        RPC_CONFIG_FILE="$HOME/t3rn/rpc_config.json"
        
        # –§—É–Ω–∫—Ü–∏—è –¥–ª—è –æ—Ç–æ–±—Ä–∞–∂–µ–Ω–∏—è RPC –≤ —Ñ–æ—Ä–º–∞—Ç–µ —Ç–∞–±–ª–∏—Ü—ã
        display_rpc_table() {
            local rpc_json="$1"
            
            # –û–ø—Ä–µ–¥–µ–ª—è–µ–º —Å–µ—Ç–∏ –∏ –∏—Ö –æ–ø–∏—Å–∞–Ω–∏—è
            local networks=("l2rn" "arbt" "bast" "blst" "opst" "unit")
            local network_names=("L2RN" "Arbitrum Sepolia" "Base Sepolia" "Blast Sepolia" "Optimism Sepolia" "Unichain Sepolia")
            
            # –£—Å—Ç–∞–Ω–∞–≤–ª–∏–≤–∞–µ–º —Ñ–∏–∫—Å–∏—Ä–æ–≤–∞–Ω–Ω—É—é —à–∏—Ä–∏–Ω—É –∫–æ–ª–æ–Ω–æ–∫
            local col1_width=15  # –ö–æ–¥ —Å–µ—Ç–∏
            local col2_width=25  # –ù–∞–∑–≤–∞–Ω–∏–µ —Å–µ—Ç–∏
            local col3_width=70  # RPC Endpoint
            
            # –í—ã–≤–æ–¥–∏–º –∑–∞–≥–æ–ª–æ–≤–æ–∫
            echo -e "\n${CYAN}üìä –¢–µ–∫—É—â–∏–µ RPC endpoints:${NC}"
            
            # –í–µ—Ä—Ö–Ω—è—è –≥—Ä–∞–Ω–∏—Ü–∞ —Ç–∞–±–ª–∏—Ü—ã
            echo -e "${BOLD}${BLUE}‚îå‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚î¨‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚î¨‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îê${NC}"
            
            # –ó–∞–≥–æ–ª–æ–≤–∫–∏ –∫–æ–ª–æ–Ω–æ–∫
            echo -e "${BOLD}${BLUE}‚îÇ${WHITE} –ö–æ–¥ —Å–µ—Ç–∏      ${BLUE}‚îÇ${WHITE} –ù–∞–∑–≤–∞–Ω–∏–µ —Å–µ—Ç–∏           ${BLUE}‚îÇ${WHITE} RPC Endpoint                                                   ${BLUE}‚îÇ${NC}"
            
            # –†–∞–∑–¥–µ–ª–∏—Ç–µ–ª—å –ø–æ—Å–ª–µ –∑–∞–≥–æ–ª–æ–≤–∫–æ–≤
            echo -e "${BOLD}${BLUE}‚îú‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îº‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îº‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚î§${NC}"
            
            # –í—ã–≤–æ–¥ —Å—Ç—Ä–æ–∫ —Å –¥–∞–Ω–Ω—ã–º–∏
            for i in "${!networks[@]}"; do
                local network="${networks[$i]}"
                local network_name="${network_names[$i]}"
                
                # –ü–æ–ª—É—á–∞–µ–º —Ç–µ–∫—É—â–∏–π RPC –¥–ª—è –æ—Ç–æ–±—Ä–∞–∂–µ–Ω–∏—è
                local current_rpc=$(echo "$rpc_json" | jq -r ".$network // [] | join(\", \")")
                
                # –ï—Å–ª–∏ RPC —Å–ª–∏—à–∫–æ–º –¥–ª–∏–Ω–Ω—ã–π, –æ–±—Ä–µ–∑–∞–µ–º –µ–≥–æ –¥–ª—è –æ—Ç–æ–±—Ä–∞–∂–µ–Ω–∏—è
                local display_rpc="$current_rpc"
                if [ ${#display_rpc} -gt $((col3_width-5)) ]; then
                    display_rpc="${display_rpc:0:$((col3_width-8))}..."
                fi
                
                # –§–æ—Ä–º–∞—Ç–∏—Ä—É–µ–º –≤—ã–≤–æ–¥ —Å—Ç—Ä–æ–∫–∏ –¥–∞–Ω–Ω—ã—Ö
                echo -e "${BOLD}${BLUE}‚îÇ${CYAN} $(printf "%-13s" "$network")${BLUE}‚îÇ${WHITE} $(printf "%-23s" "$network_name")${BLUE}‚îÇ${YELLOW} $(printf "%-68s" "$display_rpc")${BLUE}‚îÇ${NC}"
            done
            
            # –í—ã–≤–æ–¥–∏–º –Ω–∏–∂–Ω—é—é –≥—Ä–∞–Ω–∏—Ü—É —Ç–∞–±–ª–∏—Ü—ã
            echo -e "${BOLD}${BLUE}‚îî‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚î¥‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚î¥‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îò${NC}"
        }
        
        case $rpc_choice in
            1)
                echo -e "\n${BOLD}${BLUE}üìä –¢–µ–∫—É—â–∏–µ RPC endpoints:${NC}"
                
                # –ï—Å–ª–∏ —Ñ–∞–π–ª –∫–æ–Ω—Ñ–∏–≥—É—Ä–∞—Ü–∏–∏ —Å—É—â–µ—Å—Ç–≤—É–µ—Ç, –ø–æ–∫–∞–∑—ã–≤–∞–µ–º –µ–≥–æ —Å–æ–¥–µ—Ä–∂–∏–º–æ–µ
                if [ -f "$RPC_CONFIG_FILE" ]; then
                    local RPC_ENDPOINTS_JSON=$(cat "$RPC_CONFIG_FILE")
                    display_rpc_table "$RPC_ENDPOINTS_JSON"
                else
                    echo -e "${YELLOW}‚ö†Ô∏è –ö–æ–Ω—Ñ–∏–≥—É—Ä–∞—Ü–∏–æ–Ω–Ω—ã–π —Ñ–∞–π–ª RPC –Ω–µ –Ω–∞–π–¥–µ–Ω. –û—Ç–æ–±—Ä–∞–∂–∞–µ–º —Å—Ç–∞–Ω–¥–∞—Ä—Ç–Ω—ã–µ —ç–Ω–¥–ø–æ–∏–Ω—Ç—ã:${NC}"
                    display_rpc_table "$DEFAULT_RPC_ENDPOINTS_JSON"
                fi
                
                # –û–∂–∏–¥–∞–µ–º –Ω–∞–∂–∞—Ç–∏—è Enter –ø–µ—Ä–µ–¥ –≤–æ–∑–≤—Ä–∞—Ç–æ–º –≤ –º–µ–Ω—é RPC
                echo -e "\n${ORANGE}–ù–∞–∂–º–∏—Ç–µ Enter, —á—Ç–æ–±—ã –≤–µ—Ä–Ω—É—Ç—å—Å—è –≤ –º–µ–Ω—é RPC...${NC}"
                read -s
                ;;
            2)
                echo -e "\n${BOLD}${BLUE}‚úèÔ∏è –ò–∑–º–µ–Ω–µ–Ω–∏–µ –æ–¥–Ω–æ–≥–æ RPC endpoint${NC}\n"
                
                # –ó–∞–≥—Ä—É–∂–∞–µ–º —Ç–µ–∫—É—â–∏–µ –Ω–∞—Å—Ç—Ä–æ–π–∫–∏ –∏–ª–∏ –∏—Å–ø–æ–ª—å–∑—É–µ–º –¥–µ—Ñ–æ–ª—Ç–Ω—ã–µ
                if [ -f "$RPC_CONFIG_FILE" ]; then
                    RPC_ENDPOINTS_JSON=$(cat "$RPC_CONFIG_FILE")
                else
                    RPC_ENDPOINTS_JSON="$DEFAULT_RPC_ENDPOINTS_JSON"
                fi
                
                # –û—Ç–æ–±—Ä–∞–∂–∞–µ–º —Ç–µ–∫—É—â—É—é –∫–æ–Ω—Ñ–∏–≥—É—Ä–∞—Ü–∏—é
                display_rpc_table "$RPC_ENDPOINTS_JSON"
                
                # –ó–∞–ø—Ä–∞—à–∏–≤–∞–µ–º —É –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è, –∫–∞–∫—É—é —Å–µ—Ç—å –∏–∑–º–µ–Ω–∏—Ç—å
                echo -e "\n${CYAN}–í–≤–µ–¥–∏—Ç–µ –∫–æ–¥ —Å–µ—Ç–∏ –¥–ª—è –∏–∑–º–µ–Ω–µ–Ω–∏—è RPC (l2rn, arbt, bast, blst, opst, unit):${NC}"
                read -p "‚ûú " network_code
                
                # –ü—Ä–æ–≤–µ—Ä—è–µ–º, —Å—É—â–µ—Å—Ç–≤—É–µ—Ç –ª–∏ —Ç–∞–∫–∞—è —Å–µ—Ç—å
                if ! echo "$RPC_ENDPOINTS_JSON" | jq -e ".$network_code" > /dev/null 2>&1; then
                    error_message "–°–µ—Ç—å —Å –∫–æ–¥–æ–º '$network_code' –Ω–µ –Ω–∞–π–¥–µ–Ω–∞"
                    sleep 2
                    continue
                fi
                
                # –ü–æ–ª—É—á–∞–µ–º –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏—é –æ –≤—ã–±—Ä–∞–Ω–Ω–æ–π —Å–µ—Ç–∏ –∏ —Ç–µ–∫—É—â–µ–º RPC
                current_rpc=$(echo "$RPC_ENDPOINTS_JSON" | jq -r ".$network_code | join(\", \")")
                
                # –ü–æ–ª—É—á–∞–µ–º –æ–ø–∏—Å–∞–Ω–∏–µ —Å–µ—Ç–∏
                network_descriptions=("L2RN" "Arbitrum Sepolia" "Base Sepolia" "Blast Sepolia" "Optimism Sepolia" "Unichain Sepolia")
                network_codes=("l2rn" "arbt" "bast" "blst" "opst" "unit")
                
                network_desc=""
                for i in "${!network_codes[@]}"; do
                    if [ "${network_codes[$i]}" = "$network_code" ]; then
                        network_desc="${network_descriptions[$i]}"
            break
                    fi
                done
                
                # –û—Ç–æ–±—Ä–∞–∂–∞–µ–º —Ç–µ–∫—É—â–∏–µ –Ω–∞—Å—Ç—Ä–æ–π–∫–∏ –¥–ª—è –≤—ã–±—Ä–∞–Ω–Ω–æ–π —Å–µ—Ç–∏
                echo -e "\n${CYAN}–¢–µ–∫—É—â–∏–π RPC –¥–ª—è ${BOLD}${WHITE}$network_desc ($network_code)${NC}${CYAN}:${NC}\n${YELLOW}$current_rpc${NC}"
                
                # –ó–∞–ø—Ä–∞—à–∏–≤–∞–µ–º –Ω–æ–≤–æ–µ –∑–Ω–∞—á–µ–Ω–∏–µ RPC
                echo -e "\n${GREEN}–í–≤–µ–¥–∏—Ç–µ –Ω–æ–≤—ã–π RPC endpoint${NC} ${YELLOW}(–∏–ª–∏ –æ—Å—Ç–∞–≤—å—Ç–µ –ø—É—Å—Ç—ã–º –¥–ª—è –æ—Ç–º–µ–Ω—ã)${NC}:"
                read -p "‚ûú " new_rpc
                
                if [ -n "$new_rpc" ]; then
                    # –û–±–Ω–æ–≤–ª—è–µ–º JSON —Å –Ω–æ–≤—ã–º RPC
                    RPC_ENDPOINTS_JSON=$(echo "$RPC_ENDPOINTS_JSON" | jq --arg network "$network_code" --arg endpoint "$new_rpc" \
                        '.[$network] = [$endpoint]')
                    
                    # –°–æ—Ö—Ä–∞–Ω—è–µ–º –æ–±–Ω–æ–≤–ª–µ–Ω–Ω—ã–π JSON
                    echo "$RPC_ENDPOINTS_JSON" > "$RPC_CONFIG_FILE"
                    
                    success_message "RPC –¥–ª—è $network_desc ($network_code) –æ–±–Ω–æ–≤–ª–µ–Ω –Ω–∞: $new_rpc"
                    
                    # –ü–æ–∫–∞–∑—ã–≤–∞–µ–º –æ–±–Ω–æ–≤–ª–µ–Ω–Ω—É—é —Ç–∞–±–ª–∏—Ü—É
                    echo -e "\n${CYAN}–û–±–Ω–æ–≤–ª–µ–Ω–Ω–∞—è –∫–æ–Ω—Ñ–∏–≥—É—Ä–∞—Ü–∏—è RPC:${NC}"
                    display_rpc_table "$RPC_ENDPOINTS_JSON"
                    
                    # –°–ø—Ä–∞—à–∏–≤–∞–µ–º –æ –ø–µ—Ä–µ–∑–∞–ø—É—Å–∫–µ –Ω–æ–¥—ã
                    echo -e "\n${YELLOW}‚ö†Ô∏è –î–ª—è –ø—Ä–∏–º–µ–Ω–µ–Ω–∏—è –∏–∑–º–µ–Ω–µ–Ω–∏–π –Ω—É–∂–Ω–æ –ø–µ—Ä–µ–∑–∞–ø—É—Å—Ç–∏—Ç—å –Ω–æ–¥—É.${NC}"
                    echo -e "${GREEN}–•–æ—Ç–∏—Ç–µ –ø–µ—Ä–µ–∑–∞–ø—É—Å—Ç–∏—Ç—å –Ω–æ–¥—É —Å–µ–π—á–∞—Å? (y/n)${NC}"
                    read -p "‚ûú " restart_node
                    
                    if [[ "$restart_node" =~ ^[Yy]$ ]]; then
                        kill_running_executor
                        success_message "–ù–æ–¥–∞ –æ—Å—Ç–∞–Ω–æ–≤–ª–µ–Ω–∞. –ü–æ–¥–≥–æ—Ç–æ–≤–∫–∞ –∫ –∑–∞–ø—É—Å–∫—É —Å –Ω–æ–≤—ã–º–∏ RPC..."
                        
                        # –ü—Ä–æ–≤–µ—Ä—è–µ–º –¥–æ—Å—Ç—É–ø–Ω–æ—Å—Ç—å –ø–æ—Ä—Ç–∞ 9090
                        check_and_free_port
                        if [ $? -ne 0 ]; then
                            echo -e "\n${ORANGE}–ù–∞–∂–º–∏—Ç–µ Enter, —á—Ç–æ–±—ã –≤–µ—Ä–Ω—É—Ç—å—Å—è –≤ –º–µ–Ω—é RPC...${NC}"
                            read -s
                            continue
                        fi
                        
                        # –≠–∫—Å–ø–æ—Ä—Ç–∏—Ä—É–µ–º –ø–µ—Ä–µ–º–µ–Ω–Ω—É—é –æ–∫—Ä—É–∂–µ–Ω–∏—è –¥–ª—è executor
                        export RPC_ENDPOINTS=$(echo "$RPC_ENDPOINTS_JSON" | jq -c .)
                        
                        # –ó–∞–ø—É—Å–∫–∞–µ–º –Ω–æ–¥—É —Å –Ω–æ–≤—ã–º–∏ –Ω–∞—Å—Ç—Ä–æ–π–∫–∞–º–∏
                        cd "$HOME/t3rn/executor/executor/bin"
                        ./executor > "$HOME/t3rn/node.log" 2>&1 &
                        local NODE_PID=$!
                        
                        # –ü—Ä–æ–≤–µ—Ä—è–µ–º, –∑–∞–ø—É—Å—Ç–∏–ª–∞—Å—å –ª–∏ –Ω–æ–¥–∞ —É—Å–ø–µ—à–Ω–æ
                        sleep 3
                        if ps -p $NODE_PID > /dev/null; then
                            success_message "–ù–æ–¥–∞ –ø–µ—Ä–µ–∑–∞–ø—É—â–µ–Ω–∞ —Å –Ω–æ–≤—ã–º–∏ RPC –Ω–∞—Å—Ç—Ä–æ–π–∫–∞–º–∏ (PID: $NODE_PID)"
                        else
                            error_message "–í–æ–∑–Ω–∏–∫–ª–∞ –æ—à–∏–±–∫–∞ –ø—Ä–∏ –∑–∞–ø—É—Å–∫–µ –Ω–æ–¥—ã. –ü—Ä–æ–≤–µ—Ä—å—Ç–µ –ª–æ–≥–∏ –¥–ª—è –¥–æ–ø–æ–ª–Ω–∏—Ç–µ–ª—å–Ω–æ–π –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏–∏."
                        fi
                    fi
                else
                    info_message "–û–ø–µ—Ä–∞—Ü–∏—è –æ—Ç–º–µ–Ω–µ–Ω–∞, RPC –Ω–µ –∏–∑–º–µ–Ω–µ–Ω"
                fi
                
                # –û–∂–∏–¥–∞–µ–º –Ω–∞–∂–∞—Ç–∏—è Enter –ø–µ—Ä–µ–¥ –≤–æ–∑–≤—Ä–∞—Ç–æ–º –≤ –º–µ–Ω—é RPC
                echo -e "\n${ORANGE}–ù–∞–∂–º–∏—Ç–µ Enter, —á—Ç–æ–±—ã –≤–µ—Ä–Ω—É—Ç—å—Å—è –≤ –º–µ–Ω—é RPC...${NC}"
                read -s
                ;;
            3)
                echo -e "\n${BOLD}${BLUE}üìù –ò–∑–º–µ–Ω–µ–Ω–∏–µ –≤—Å–µ—Ö RPC endpoints${NC}\n"
                
                # –ó–∞–≥—Ä—É–∂–∞–µ–º —Ç–µ–∫—É—â–∏–µ –Ω–∞—Å—Ç—Ä–æ–π–∫–∏ –∏–ª–∏ –∏—Å–ø–æ–ª—å–∑—É–µ–º –¥–µ—Ñ–æ–ª—Ç–Ω—ã–µ
                if [ -f "$RPC_CONFIG_FILE" ]; then
                    RPC_ENDPOINTS_JSON=$(cat "$RPC_CONFIG_FILE")
                else
                    RPC_ENDPOINTS_JSON="$DEFAULT_RPC_ENDPOINTS_JSON"
                fi
                
                # –û—Ç–æ–±—Ä–∞–∂–∞–µ–º —Ç–µ–∫—É—â—É—é –∫–æ–Ω—Ñ–∏–≥—É—Ä–∞—Ü–∏—é
                display_rpc_table "$RPC_ENDPOINTS_JSON"
                
                # –ü–æ–ª—É—á–∞–µ–º –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏—é –æ –¥–æ—Å—Ç—É–ø–Ω—ã—Ö —Å–µ—Ç—è—Ö
                networks=(l2rn arbt bast blst opst unit)
                network_names=("L2RN" "Arbitrum Sepolia" "Base Sepolia" "Blast Sepolia" "Optimism Sepolia" "Unichain Sepolia")
                
                # –û–±–Ω–æ–≤–ª—è–µ–º RPC –¥–ª—è –∫–∞–∂–¥–æ–π —Å–µ—Ç–∏
                for i in "${!networks[@]}"; do
                    network="${networks[$i]}"
                    network_name="${network_names[$i]}"
                    
                    # –ü–æ–ª—É—á–∞–µ–º —Ç–µ–∫—É—â–∏–π RPC –¥–ª—è –æ—Ç–æ–±—Ä–∞–∂–µ–Ω–∏—è
                    current_rpc=$(echo "$RPC_ENDPOINTS_JSON" | jq -r ".$network | join(\", \")")
                    
                    echo -e "\n${CYAN}–¢–µ–∫—É—â–∏–π RPC –¥–ª—è ${BOLD}${WHITE}$network_name ($network)${NC}${CYAN}:${NC} ${YELLOW}$current_rpc${NC}"
                    echo -e "${GREEN}–í–≤–µ–¥–∏—Ç–µ –Ω–æ–≤—ã–π RPC${NC} ${YELLOW}(–∏–ª–∏ –æ—Å—Ç–∞–≤—å—Ç–µ –ø—É—Å—Ç—ã–º –¥–ª—è —Å–æ—Ö—Ä–∞–Ω–µ–Ω–∏—è —Ç–µ–∫—É—â–µ–≥–æ)${NC}:"
                    read -p "‚ûú " new_endpoint
                    
                    if [ -n "$new_endpoint" ]; then
                        # –û–±–Ω–æ–≤–ª—è–µ–º JSON —Å –Ω–æ–≤—ã–º RPC
                        RPC_ENDPOINTS_JSON=$(echo "$RPC_ENDPOINTS_JSON" | jq --arg network "$network" --arg endpoint "$new_endpoint" \
                            '.[$network] = [$endpoint]')
                        success_message "RPC –¥–ª—è $network_name –æ–±–Ω–æ–≤–ª–µ–Ω"
                    else
                        info_message "RPC –¥–ª—è $network_name –æ—Å—Ç–∞–≤–ª–µ–Ω –±–µ–∑ –∏–∑–º–µ–Ω–µ–Ω–∏–π"
                    fi
                done
                
                # –°–æ—Ö—Ä–∞–Ω—è–µ–º –æ–±–Ω–æ–≤–ª–µ–Ω–Ω—ã–π JSON
                echo "$RPC_ENDPOINTS_JSON" > "$RPC_CONFIG_FILE"
                success_message "–ö–æ–Ω—Ñ–∏–≥—É—Ä–∞—Ü–∏—è RPC —Å–æ—Ö—Ä–∞–Ω–µ–Ω–∞"
                
                # –ü–æ–∫–∞–∑—ã–≤–∞–µ–º –æ–±–Ω–æ–≤–ª–µ–Ω–Ω—É—é —Ç–∞–±–ª–∏—Ü—É
                echo -e "\n${CYAN}–û–±–Ω–æ–≤–ª–µ–Ω–Ω–∞—è –∫–æ–Ω—Ñ–∏–≥—É—Ä–∞—Ü–∏—è RPC:${NC}"
                display_rpc_table "$RPC_ENDPOINTS_JSON"
                
                # –°–ø—Ä–∞—à–∏–≤–∞–µ–º –æ –ø–µ—Ä–µ–∑–∞–ø—É—Å–∫–µ –Ω–æ–¥—ã
                echo -e "\n${YELLOW}‚ö†Ô∏è –î–ª—è –ø—Ä–∏–º–µ–Ω–µ–Ω–∏—è –∏–∑–º–µ–Ω–µ–Ω–∏–π –Ω—É–∂–Ω–æ –ø–µ—Ä–µ–∑–∞–ø—É—Å—Ç–∏—Ç—å –Ω–æ–¥—É.${NC}"
                echo -e "${GREEN}–•–æ—Ç–∏—Ç–µ –ø–µ—Ä–µ–∑–∞–ø—É—Å—Ç–∏—Ç—å –Ω–æ–¥—É —Å–µ–π—á–∞—Å? (y/n)${NC}"
                read -p "‚ûú " restart_node
                
                if [[ "$restart_node" =~ ^[Yy]$ ]]; then
                    kill_running_executor
                    success_message "–ù–æ–¥–∞ –æ—Å—Ç–∞–Ω–æ–≤–ª–µ–Ω–∞. –ü–æ–¥–≥–æ—Ç–æ–≤–∫–∞ –∫ –∑–∞–ø—É—Å–∫—É —Å –Ω–æ–≤—ã–º–∏ RPC..."
                    
                    # –ü—Ä–æ–≤–µ—Ä—è–µ–º –¥–æ—Å—Ç—É–ø–Ω–æ—Å—Ç—å –ø–æ—Ä—Ç–∞ 9090
                    check_and_free_port
                    if [ $? -ne 0 ]; then
                        echo -e "\n${ORANGE}–ù–∞–∂–º–∏—Ç–µ Enter, —á—Ç–æ–±—ã –≤–µ—Ä–Ω—É—Ç—å—Å—è –≤ –º–µ–Ω—é RPC...${NC}"
                        read -s
                        continue
                    fi
                    
                    # –≠–∫—Å–ø–æ—Ä—Ç–∏—Ä—É–µ–º –ø–µ—Ä–µ–º–µ–Ω–Ω—É—é –æ–∫—Ä—É–∂–µ–Ω–∏—è –¥–ª—è executor
                    export RPC_ENDPOINTS=$(echo "$RPC_ENDPOINTS_JSON" | jq -c .)
                    
                    # –ó–∞–ø—É—Å–∫–∞–µ–º –Ω–æ–¥—É —Å –Ω–æ–≤—ã–º–∏ –Ω–∞—Å—Ç—Ä–æ–π–∫–∞–º–∏
                    cd "$HOME/t3rn/executor/executor/bin"
                    ./executor > "$HOME/t3rn/node.log" 2>&1 &
                    local NODE_PID=$!
                    
                    # –ü—Ä–æ–≤–µ—Ä—è–µ–º, –∑–∞–ø—É—Å—Ç–∏–ª–∞—Å—å –ª–∏ –Ω–æ–¥–∞ —É—Å–ø–µ—à–Ω–æ
                    sleep 3
                    if ps -p $NODE_PID > /dev/null; then
                        success_message "–ù–æ–¥–∞ –ø–µ—Ä–µ–∑–∞–ø—É—â–µ–Ω–∞ —Å –Ω–æ–≤—ã–º–∏ RPC –Ω–∞—Å—Ç—Ä–æ–π–∫–∞–º–∏ (PID: $NODE_PID)"
                    else
                        error_message "–í–æ–∑–Ω–∏–∫–ª–∞ –æ—à–∏–±–∫–∞ –ø—Ä–∏ –∑–∞–ø—É—Å–∫–µ –Ω–æ–¥—ã. –ü—Ä–æ–≤–µ—Ä—å—Ç–µ –ª–æ–≥–∏ –¥–ª—è –¥–æ–ø–æ–ª–Ω–∏—Ç–µ–ª—å–Ω–æ–π –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏–∏."
                    fi
                fi
                
                # –û–∂–∏–¥–∞–µ–º –Ω–∞–∂–∞—Ç–∏—è Enter –ø–µ—Ä–µ–¥ –≤–æ–∑–≤—Ä–∞—Ç–æ–º –≤ –º–µ–Ω—é RPC
                echo -e "\n${ORANGE}–ù–∞–∂–º–∏—Ç–µ Enter, —á—Ç–æ–±—ã –≤–µ—Ä–Ω—É—Ç—å—Å—è –≤ –º–µ–Ω—é RPC...${NC}"
                read -s
                ;;
            4)
                echo -e "\n${BOLD}${BLUE}üîÑ –°–±—Ä–æ—Å RPC –Ω–∞ –∑–Ω–∞—á–µ–Ω–∏—è –ø–æ —É–º–æ–ª—á–∞–Ω–∏—é${NC}\n"
                
                # –ü–æ–∫–∞–∑—ã–≤–∞–µ–º —Ç–µ–∫—É—â–∏–µ –Ω–∞—Å—Ç—Ä–æ–π–∫–∏
                if [ -f "$RPC_CONFIG_FILE" ]; then
                    echo -e "${CYAN}–¢–µ–∫—É—â–∏–µ –Ω–∞—Å—Ç—Ä–æ–π–∫–∏ RPC:${NC}"
                    display_rpc_table "$(cat "$RPC_CONFIG_FILE")"
                fi
                
                echo -e "\n${CYAN}–ù–∞—Å—Ç—Ä–æ–π–∫–∏ RPC –ø–æ —É–º–æ–ª—á–∞–Ω–∏—é:${NC}"
                display_rpc_table "$DEFAULT_RPC_ENDPOINTS_JSON"
                
                echo -e "\n${YELLOW}‚ö†Ô∏è –í—ã —É–≤–µ—Ä–µ–Ω—ã, —á—Ç–æ —Ö–æ—Ç–∏—Ç–µ —Å–±—Ä–æ—Å–∏—Ç—å –≤—Å–µ RPC –Ω–∞—Å—Ç—Ä–æ–π–∫–∏ –Ω–∞ –∑–Ω–∞—á–µ–Ω–∏—è –ø–æ —É–º–æ–ª—á–∞–Ω–∏—é? (y/n)${NC}"
                read -p "‚ûú " confirm_reset
                
                if [[ "$confirm_reset" =~ ^[Yy]$ ]]; then
                    echo "$DEFAULT_RPC_ENDPOINTS_JSON" > "$RPC_CONFIG_FILE"
                    success_message "RPC –Ω–∞—Å—Ç—Ä–æ–π–∫–∏ —Å–±—Ä–æ—à–µ–Ω—ã –Ω–∞ –∑–Ω–∞—á–µ–Ω–∏—è –ø–æ —É–º–æ–ª—á–∞–Ω–∏—é"
                    
                    # –°–ø—Ä–∞—à–∏–≤–∞–µ–º –æ –ø–µ—Ä–µ–∑–∞–ø—É—Å–∫–µ –Ω–æ–¥—ã
                    echo -e "${YELLOW}‚ö†Ô∏è –î–ª—è –ø—Ä–∏–º–µ–Ω–µ–Ω–∏—è –∏–∑–º–µ–Ω–µ–Ω–∏–π –Ω—É–∂–Ω–æ –ø–µ—Ä–µ–∑–∞–ø—É—Å—Ç–∏—Ç—å –Ω–æ–¥—É.${NC}"
                    echo -e "${GREEN}–•–æ—Ç–∏—Ç–µ –ø–µ—Ä–µ–∑–∞–ø—É—Å—Ç–∏—Ç—å –Ω–æ–¥—É —Å–µ–π—á–∞—Å? (y/n)${NC}"
                    read -p "‚ûú " restart_node
                    
                    if [[ "$restart_node" =~ ^[Yy]$ ]]; then
                        kill_running_executor
                        success_message "–ù–æ–¥–∞ –æ—Å—Ç–∞–Ω–æ–≤–ª–µ–Ω–∞. –ü–æ–¥–≥–æ—Ç–æ–≤–∫–∞ –∫ –∑–∞–ø—É—Å–∫—É —Å –¥–µ—Ñ–æ–ª—Ç–Ω—ã–º–∏ RPC..."
                        
                        # –ü—Ä–æ–≤–µ—Ä—è–µ–º –¥–æ—Å—Ç—É–ø–Ω–æ—Å—Ç—å –ø–æ—Ä—Ç–∞ 9090
                        check_and_free_port
                        if [ $? -ne 0 ]; then
                            echo -e "\n${ORANGE}–ù–∞–∂–º–∏—Ç–µ Enter, —á—Ç–æ–±—ã –≤–µ—Ä–Ω—É—Ç—å—Å—è –≤ –º–µ–Ω—é RPC...${NC}"
                            read -s
                            continue
                        fi
                        
                        # –≠–∫—Å–ø–æ—Ä—Ç–∏—Ä—É–µ–º –ø–µ—Ä–µ–º–µ–Ω–Ω—É—é –æ–∫—Ä—É–∂–µ–Ω–∏—è –¥–ª—è executor
                        export RPC_ENDPOINTS=$(echo "$DEFAULT_RPC_ENDPOINTS_JSON" | jq -c .)
                        
                        # –ó–∞–ø—É—Å–∫–∞–µ–º –Ω–æ–¥—É —Å –Ω–æ–≤—ã–º–∏ –Ω–∞—Å—Ç—Ä–æ–π–∫–∞–º–∏
                        cd "$HOME/t3rn/executor/executor/bin"
                        ./executor > "$HOME/t3rn/node.log" 2>&1 &
                        local NODE_PID=$!
                        
                        # –ü—Ä–æ–≤–µ—Ä—è–µ–º, –∑–∞–ø—É—Å—Ç–∏–ª–∞—Å—å –ª–∏ –Ω–æ–¥–∞ —É—Å–ø–µ—à–Ω–æ
                        sleep 3
                        if ps -p $NODE_PID > /dev/null; then
                            success_message "–ù–æ–¥–∞ –ø–µ—Ä–µ–∑–∞–ø—É—â–µ–Ω–∞ —Å –¥–µ—Ñ–æ–ª—Ç–Ω—ã–º–∏ RPC –Ω–∞—Å—Ç—Ä–æ–π–∫–∞–º–∏ (PID: $NODE_PID)"
                        else
                            error_message "–í–æ–∑–Ω–∏–∫–ª–∞ –æ—à–∏–±–∫–∞ –ø—Ä–∏ –∑–∞–ø—É—Å–∫–µ –Ω–æ–¥—ã. –ü—Ä–æ–≤–µ—Ä—å—Ç–µ –ª–æ–≥–∏ –¥–ª—è –¥–æ–ø–æ–ª–Ω–∏—Ç–µ–ª—å–Ω–æ–π –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏–∏."
                        fi
                    fi
                else
                    info_message "–°–±—Ä–æ—Å –Ω–∞—Å—Ç—Ä–æ–µ–∫ –æ—Ç–º–µ–Ω–µ–Ω"
                fi
                
                # –û–∂–∏–¥–∞–µ–º –Ω–∞–∂–∞—Ç–∏—è Enter –ø–µ—Ä–µ–¥ –≤–æ–∑–≤—Ä–∞—Ç–æ–º –≤ –º–µ–Ω—é RPC
                echo -e "\n${ORANGE}–ù–∞–∂–º–∏—Ç–µ Enter, —á—Ç–æ–±—ã –≤–µ—Ä–Ω—É—Ç—å—Å—è –≤ –º–µ–Ω—é RPC...${NC}"
                read -s
                ;;
            5)
                info_message "–í–æ–∑–≤—Ä–∞—â–∞–µ–º—Å—è –≤ –≥–ª–∞–≤–Ω–æ–µ –º–µ–Ω—é"
                return_to_main=true
                ;;
            *)
                error_message "–ù–µ–≤–µ—Ä–Ω—ã–π –≤—ã–±–æ—Ä. –ü–æ–∂–∞–ª—É–π—Å—Ç–∞, –≤–≤–µ–¥–∏—Ç–µ –Ω–æ–º–µ—Ä –æ—Ç 1 –¥–æ 5."
                sleep 2
            ;;
    esac
done

    return 0
}

# –§—É–Ω–∫—Ü–∏—è –¥–ª—è —É—Å—Ç–∞–Ω–æ–≤–∫–∏ –∫–æ–Ω–∫—Ä–µ—Ç–Ω–æ–π –≤–µ—Ä—Å–∏–∏ –Ω–æ–¥—ã
install_specific_version() {
    echo -e "\n${BOLD}${BLUE}‚èÆÔ∏è –£—Å—Ç–∞–Ω–æ–≤–∫–∞ –∫–æ–Ω–∫—Ä–µ—Ç–Ω–æ–π –≤–µ—Ä—Å–∏–∏ –Ω–æ–¥—ã T3RN...${NC}\n"
    
    # –ü–æ–ª—É—á–∞–µ–º —Å–ø–∏—Å–æ–∫ –¥–æ—Å—Ç—É–ø–Ω—ã—Ö –≤–µ—Ä—Å–∏–π —Å GitHub API
    echo -e "${WHITE}[${CYAN}1/4${WHITE}] ${GREEN}‚ûú ${WHITE}üîç –ü–æ–ª—É—á–µ–Ω–∏–µ —Å–ø–∏—Å–∫–∞ –¥–æ—Å—Ç—É–ø–Ω—ã—Ö –≤–µ—Ä—Å–∏–π...${NC}"
    RELEASES=$(curl -s https://api.github.com/repos/t3rn/executor-release/releases)
    
    if [ -z "$RELEASES" ] || [ "$RELEASES" = "[]" ]; then
        error_message "–ù–µ —É–¥–∞–ª–æ—Å—å –ø–æ–ª—É—á–∏—Ç—å —Å–ø–∏—Å–æ–∫ —Ä–µ–ª–∏–∑–æ–≤. –ü—Ä–æ–≤–µ—Ä—å—Ç–µ –ø–æ–¥–∫–ª—é—á–µ–Ω–∏–µ –∫ –∏–Ω—Ç–µ—Ä–Ω–µ—Ç—É."
        return 1
    fi
    
    # –í—ã–≤–æ–¥–∏–º —Å–ø–∏—Å–æ–∫ –¥–æ—Å—Ç—É–ø–Ω—ã—Ö –≤–µ—Ä—Å–∏–π (–ø–æ—Å–ª–µ–¥–Ω–∏–µ 10)
    echo -e "\n${CYAN}–î–æ—Å—Ç—É–ø–Ω—ã–µ –≤–µ—Ä—Å–∏–∏ –Ω–æ–¥—ã T3RN:${NC}\n"
    
    # –ò—Å–ø–æ–ª—å–∑—É–µ–º jq –¥–ª—è –∏–∑–≤–ª–µ—á–µ–Ω–∏—è –∏–º–µ–Ω —Ç–µ–≥–æ–≤ (–≤–µ—Ä—Å–∏–π) –∏ –¥–∞—Ç —Ä–µ–ª–∏–∑–æ–≤
    TAGS=()
    echo "$RELEASES" | jq -r '.[] | "\(.tag_name) - \(.published_at | fromdateiso8601 | strftime("%d-%m-%Y"))"' | head -10 | nl -w2 -s') '
    
    # –°–æ—Ö—Ä–∞–Ω—è–µ–º —Ç–µ–≥–∏ –≤ –º–∞—Å—Å–∏–≤ –¥–ª—è –ø–æ—Å–ª–µ–¥—É—é—â–µ–≥–æ –≤—ã–±–æ—Ä–∞
    mapfile -t TAGS < <(echo "$RELEASES" | jq -r '.[].tag_name' | head -10)
    
    # –ó–∞–ø—Ä–∞—à–∏–≤–∞–µ–º —É –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è –≤—ã–±–æ—Ä –≤–µ—Ä—Å–∏–∏
    echo -e "\n${GREEN}–í–≤–µ–¥–∏—Ç–µ –Ω–æ–º–µ—Ä –≤–µ—Ä—Å–∏–∏ –¥–ª—è —É—Å—Ç–∞–Ω–æ–≤–∫–∏ (1-${#TAGS[@]}):${NC}"
    read -p "‚ûú " version_choice
    
    # –ü—Ä–æ–≤–µ—Ä–∫–∞ –∫–æ—Ä—Ä–µ–∫—Ç–Ω–æ—Å—Ç–∏ –≤–≤–æ–¥–∞
    if ! [[ "$version_choice" =~ ^[0-9]+$ ]] || [ "$version_choice" -lt 1 ] || [ "$version_choice" -gt "${#TAGS[@]}" ]; then
        error_message "–ù–µ–≤–µ—Ä–Ω—ã–π –≤—ã–±–æ—Ä. –ü–æ–∂–∞–ª—É–π—Å—Ç–∞, –≤–≤–µ–¥–∏—Ç–µ –Ω–æ–º–µ—Ä –æ—Ç 1 –¥–æ ${#TAGS[@]}."
        return 1
    fi
    
    # –í—ã–±—Ä–∞–Ω–Ω–∞—è –≤–µ—Ä—Å–∏—è
    SELECTED_TAG="${TAGS[$version_choice-1]}"
    success_message "–í—ã–±—Ä–∞–Ω–∞ –≤–µ—Ä—Å–∏—è: $SELECTED_TAG"
    
    echo -e "${WHITE}[${CYAN}2/4${WHITE}] ${GREEN}‚ûú ${WHITE}üõë –û—Å—Ç–∞–Ω–æ–≤–∫–∞ —Ä–∞–±–æ—Ç–∞—é—â–∏—Ö —ç–∫–∑–µ–º–ø–ª—è—Ä–æ–≤...${NC}"
    kill_running_executor
    success_message "–ü–æ–¥–≥–æ—Ç–æ–≤–∫–∞ –∫ —É—Å—Ç–∞–Ω–æ–≤–∫–µ –∑–∞–≤–µ—Ä—à–µ–Ω–∞"
    
    echo -e "${WHITE}[${CYAN}3/4${WHITE}] ${GREEN}‚ûú ${WHITE}üßπ –û—á–∏—Å—Ç–∫–∞ –ø—Ä–µ–¥—ã–¥—É—â–µ–π —É—Å—Ç–∞–Ω–æ–≤–∫–∏...${NC}"
    if [ -d "$HOME/t3rn" ]; then
        # –°–æ—Ö—Ä–∞–Ω—è–µ–º —Ñ–∞–π–ª—ã –ª–æ–≥–æ–≤, –µ—Å–ª–∏ –æ–Ω–∏ —Å—É—â–µ—Å—Ç–≤—É—é—Ç
        if [ -f "$HOME/t3rn/setup.log" ]; then
            cp "$HOME/t3rn/setup.log" "/tmp/t3rn_setup.log.backup"
        fi
        if [ -f "$HOME/t3rn/node.log" ]; then
            cp "$HOME/t3rn/node.log" "/tmp/t3rn_node.log.backup"
        fi
        # –°–æ—Ö—Ä–∞–Ω—è–µ–º –∫–æ–Ω—Ñ–∏–≥—É—Ä–∞—Ü–∏–æ–Ω–Ω—ã–π —Ñ–∞–π–ª –≥–∞–∑–∞, –µ—Å–ª–∏ –æ–Ω —Å—É—â–µ—Å—Ç–≤—É–µ—Ç
        if [ -f "$HOME/t3rn/gas_config.txt" ]; then
            cp "$HOME/t3rn/gas_config.txt" "/tmp/t3rn_gas_config.backup"
        fi
        # –°–æ—Ö—Ä–∞–Ω—è–µ–º –∫–æ–Ω—Ñ–∏–≥—É—Ä–∞—Ü–∏–æ–Ω–Ω—ã–π —Ñ–∞–π–ª RPC, –µ—Å–ª–∏ –æ–Ω —Å—É—â–µ—Å—Ç–≤—É–µ—Ç
        if [ -f "$HOME/t3rn/rpc_config.json" ]; then
            cp "$HOME/t3rn/rpc_config.json" "/tmp/t3rn_rpc_config.backup"
        fi
        
        rm -rf "$HOME/t3rn"
        
        # –°–æ–∑–¥–∞–µ–º –¥–∏—Ä–µ–∫—Ç–æ—Ä–∏—é –∑–∞–Ω–æ–≤–æ –∏ –≤–æ—Å—Å—Ç–∞–Ω–∞–≤–ª–∏–≤–∞–µ–º –ª–æ–≥–∏ –∏ –∫–æ–Ω—Ñ–∏–≥—É—Ä–∞—Ü–∏—é
        mkdir -p "$HOME/t3rn"
        if [ -f "/tmp/t3rn_setup.log.backup" ]; then
            cp "/tmp/t3rn_setup.log.backup" "$HOME/t3rn/setup.log"
        fi
        if [ -f "/tmp/t3rn_node.log.backup" ]; then
            cp "/tmp/t3rn_node.log.backup" "$HOME/t3rn/node.log"
        fi
        if [ -f "/tmp/t3rn_gas_config.backup" ]; then
            cp "/tmp/t3rn_gas_config.backup" "$HOME/t3rn/gas_config.txt"
        fi
        if [ -f "/tmp/t3rn_rpc_config.backup" ]; then
            cp "/tmp/t3rn_rpc_config.backup" "$HOME/t3rn/rpc_config.json"
        fi
    else
        mkdir -p "$HOME/t3rn"
    fi
    
    if [ -d "$HOME/executor" ]; then
        rm -rf "$HOME/executor"
    fi
    
    if ls executor-linux-*.tar.gz 1> /dev/null 2>&1; then
        rm -f executor-linux-*.tar.gz
    fi
    success_message "–ü—Ä–µ–¥—ã–¥—É—â–∞—è —É—Å—Ç–∞–Ω–æ–≤–∫–∞ –æ—á–∏—â–µ–Ω–∞"
    
    echo -e "${WHITE}[${CYAN}4/4${WHITE}] ${GREEN}‚ûú ${WHITE}üì• –£—Å—Ç–∞–Ω–æ–≤–∫–∞ –≤–µ—Ä—Å–∏–∏ $SELECTED_TAG...${NC}"
    
    # –°–æ–∑–¥–∞–µ–º –¥–∏—Ä–µ–∫—Ç–æ—Ä–∏—é –∏ –∑–∞–≥—Ä—É–∂–∞–µ–º –≤—ã–±—Ä–∞–Ω–Ω—É—é –≤–µ—Ä—Å–∏—é
    cd "$HOME/t3rn"
    
    DOWNLOAD_URL="https://github.com/t3rn/executor-release/releases/download/$SELECTED_TAG/executor-linux-$SELECTED_TAG.tar.gz"
    wget --progress=bar:force:noscroll "$DOWNLOAD_URL" -O "executor-linux-$SELECTED_TAG.tar.gz"
    
if [ $? -ne 0 ]; then
        error_message "–ù–µ —É–¥–∞–ª–æ—Å—å –∑–∞–≥—Ä—É–∑–∏—Ç—å –≤—ã–±—Ä–∞–Ω–Ω—É—é –≤–µ—Ä—Å–∏—é. –ü—Ä–æ–≤–µ—Ä—å—Ç–µ URL –∏ –ø–æ–ø—Ä–æ–±—É–π—Ç–µ —Å–Ω–æ–≤–∞."
        return 1
    fi
    
    # –†–∞—Å–ø–∞–∫–æ–≤—ã–≤–∞–µ–º –∞—Ä—Ö–∏–≤
    tar -xvzf "executor-linux-$SELECTED_TAG.tar.gz"
if [ $? -ne 0 ]; then
        error_message "–ù–µ —É–¥–∞–ª–æ—Å—å –∏–∑–≤–ª–µ—á—å –∞—Ä—Ö–∏–≤. –ü—Ä–æ–≤–µ—Ä—å—Ç–µ —Ñ–∞–π–ª –∏ –ø–æ–ø—Ä–æ–±—É–π—Ç–µ —Å–Ω–æ–≤–∞."
        return 1
    fi
    
    # –ü–æ–¥–≥–æ—Ç–∞–≤–ª–∏–≤–∞–µ–º –∏—Å–ø–æ–ª–Ω—è–µ–º—ã–π —Ñ–∞–π–ª
    mkdir -p executor/executor/bin
    cd executor/executor/bin || {
        error_message "–ù–µ —É–¥–∞–ª–æ—Å—å –ø–µ—Ä–µ–π—Ç–∏ –∫ —Ä–∞—Å–ø–æ–ª–æ–∂–µ–Ω–∏—é –±–∏–Ω–∞—Ä–Ω–æ–≥–æ —Ñ–∞–π–ª–∞ executor."
        return 1
    }
    chmod +x executor
    
    # –ù–∞—Å—Ç—Ä–æ–π–∫–∞ –Ω–æ–¥—ã
    echo -e "\n${CYAN}–¢–µ–ø–µ—Ä—å –Ω—É–∂–Ω–æ –Ω–∞—Å—Ç—Ä–æ–∏—Ç—å –Ω–æ–¥—É.${NC}"
    configure_node
    
    # –ó–∞–ø—É—Å–∫ –Ω–æ–¥—ã (–∞–≤—Ç–æ–º–∞—Ç–∏—á–µ—Å–∫–∏)
    echo -e "\n${GREEN}üöÄ –ó–∞–ø—É—Å–∫ –Ω–æ–¥—ã –≤–µ—Ä—Å–∏–∏ $SELECTED_TAG...${NC}"
    
    # –ü—Ä–æ–≤–µ—Ä—è–µ–º –¥–æ—Å—Ç—É–ø–Ω–æ—Å—Ç—å –ø–æ—Ä—Ç–∞ 9090 –ø–µ—Ä–µ–¥ –∑–∞–ø—É—Å–∫–æ–º
    check_and_free_port
    if [ $? -ne 0 ]; then
        return 1
    fi
    
    # –°–æ–∑–¥–∞–µ–º —Ñ–∞–π–ª –¥–ª—è –ª–æ–≥–æ–≤ –Ω–æ–¥—ã, –µ—Å–ª–∏ –æ–Ω –Ω–µ —Å—É—â–µ—Å—Ç–≤—É–µ—Ç
    NODE_LOG="$HOME/t3rn/node.log"
    touch "$NODE_LOG"
    
    # –ó–∞–ø—É—Å–∫ –Ω–æ–¥—ã –≤ —Ñ–æ–Ω–æ–≤–æ–º —Ä–µ–∂–∏–º–µ —Å –ø–µ—Ä–µ–Ω–∞–ø—Ä–∞–≤–ª–µ–Ω–∏–µ–º –≤—ã–≤–æ–¥–∞ –≤ –ª–æ–≥-—Ñ–∞–π–ª
    ./executor > "$NODE_LOG" 2>&1 &
    local NODE_PID=$!
    
    # –ü—Ä–æ–≤–µ—Ä—è–µ–º, –∑–∞–ø—É—Å—Ç–∏–ª–∞—Å—å –ª–∏ –Ω–æ–¥–∞ —É—Å–ø–µ—à–Ω–æ
    sleep 3
    if ps -p $NODE_PID > /dev/null; then
        success_message "–ù–æ–¥–∞ –≤–µ—Ä—Å–∏–∏ $SELECTED_TAG –∑–∞–ø—É—â–µ–Ω–∞ (PID: $NODE_PID)"
        success_message "–õ–æ–≥–∏ —Ä–∞–±–æ—Ç—ã –Ω–æ–¥—ã —Å–æ—Ö—Ä–∞–Ω—è—é—Ç—Å—è –≤: $NODE_LOG"
    else
        error_message "–í–æ–∑–Ω–∏–∫–ª–∞ –æ—à–∏–±–∫–∞ –ø—Ä–∏ –∑–∞–ø—É—Å–∫–µ –Ω–æ–¥—ã. –ü—Ä–æ–≤–µ—Ä—å—Ç–µ –ª–æ–≥–∏ –¥–ª—è –¥–æ–ø–æ–ª–Ω–∏—Ç–µ–ª—å–Ω–æ–π –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏–∏."
        return 1
    fi
    
    echo -e "\n${PURPLE}‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê${NC}"
    echo -e "${GREEN}‚ú® –ù–æ–¥–∞ T3RN –≤–µ—Ä—Å–∏–∏ $SELECTED_TAG —É—Å–ø–µ—à–Ω–æ —É—Å—Ç–∞–Ω–æ–≤–ª–µ–Ω–∞ –∏ –∑–∞–ø—É—â–µ–Ω–∞!${NC}"
    echo -e "${PURPLE}‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê${NC}\n"
}

# –§—É–Ω–∫—Ü–∏—è –¥–ª—è –Ω–∞—Å—Ç—Ä–æ–π–∫–∏ –Ω–æ–¥—ã (–∏—Å–ø–æ–ª—å–∑—É–µ—Ç—Å—è –ø—Ä–∏ —É—Å—Ç–∞–Ω–æ–≤–∫–µ)
configure_node() {
    # –õ–æ–∫–∞–ª—å–Ω–∞—è –ø–µ—Ä–µ–º–µ–Ω–Ω–∞—è –¥–ª—è —Ö—Ä–∞–Ω–µ–Ω–∏—è –ø—É—Ç–∏ –∫ —Ñ–∞–π–ª—É –∫–æ–Ω—Ñ–∏–≥—É—Ä–∞—Ü–∏–∏ –≥–∞–∑–∞
    local gas_config_file="$HOME/t3rn/gas_config.txt"
    
    # –í—ã–±–æ—Ä —Ç–∏–ø–∞ —É–∑–ª–∞
    info_message "–í—ã–±–µ—Ä–∏—Ç–µ —Ç–∏–ø —É–∑–ª–∞:"
    echo -e " ${ORANGE}1) API –£–∑–µ–ª - –ü—Ä—è–º–∞—è –æ—Ç–ø—Ä–∞–≤–∫–∞ —Ç—Ä–∞–Ω–∑–∞–∫—Ü–∏–π —á–µ—Ä–µ–∑ API${NC}"
    echo -e " ${ORANGE}2) Alchemy RPC - –ò—Å–ø–æ–ª—å–∑–æ–≤–∞–Ω–∏–µ RPC endpoints –æ—Ç Alchemy${NC}"
    echo -e " ${ORANGE}3) –ö–∞—Å—Ç–æ–º–Ω—ã–π RPC - –ò—Å–ø–æ–ª—å–∑–æ–≤–∞–Ω–∏–µ –ø—É–±–ª–∏—á–Ω—ã—Ö/–ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å—Å–∫–∏—Ö RPC endpoints${NC}"
    
    read -p "$(echo -e "${GREEN}–í–≤–µ–¥–∏—Ç–µ –≤–∞—à –≤—ã–±–æ—Ä (1/2/3): ${NC}")" NODE_TYPE_CHOICE
    
    case $NODE_TYPE_CHOICE in
        1)
            NODE_TYPE="api"
            success_message "–í—ã–±—Ä–∞–Ω API —É–∑–µ–ª"
            export EXECUTOR_PROCESS_PENDING_ORDERS_FROM_API=true
            export EXECUTOR_PROCESS_ORDERS_API_ENABLED=true
            ;;
        2)
            NODE_TYPE="alchemy-rpc"
            success_message "–í—ã–±—Ä–∞–Ω Alchemy RPC —É–∑–µ–ª"
            export EXECUTOR_PROCESS_PENDING_ORDERS_FROM_API=false
            export EXECUTOR_PROCESS_ORDERS_API_ENABLED=false
            ;;
        3)
            NODE_TYPE="custom-rpc"
            success_message "–í—ã–±—Ä–∞–Ω –∫–∞—Å—Ç–æ–º–Ω—ã–π RPC —É–∑–µ–ª"
            export EXECUTOR_PROCESS_PENDING_ORDERS_FROM_API=false
            export EXECUTOR_PROCESS_ORDERS_API_ENABLED=false
            ;;
        *)
            error_message "–ù–µ–≤–µ—Ä–Ω—ã–π –≤—ã–±–æ—Ä —Ç–∏–ø–∞ —É–∑–ª–∞. –í—ã–±—Ä–∞–Ω API —É–∑–µ–ª –ø–æ —É–º–æ–ª—á–∞–Ω–∏—é."
            NODE_TYPE="api"
            export EXECUTOR_PROCESS_PENDING_ORDERS_FROM_API=true
            export EXECUTOR_PROCESS_ORDERS_API_ENABLED=true
            ;;
    esac
    
    # –ó–∞–ø—Ä–æ—Å –ø—Ä–∏–≤–∞—Ç–Ω–æ–≥–æ –∫–ª—é—á–∞ –∫–æ—à–µ–ª—å–∫–∞
    info_message "–í–≤–µ–¥–∏—Ç–µ –≤–∞—à –ø—Ä–∏–≤–∞—Ç–Ω—ã–π –∫–ª—é—á –∫–æ—à–µ–ª—å–∫–∞:"
    read -p "‚ûú " WALLET_PRIVATE_KEY
    success_message "–ü—Ä–∏–≤–∞—Ç–Ω—ã–π –∫–ª—é—á —Å–æ—Ö—Ä–∞–Ω–µ–Ω"
    
    # –ó–∞–ø—Ä–æ—Å Alchemy API –∫–ª—é—á–∞, –µ—Å–ª–∏ –≤—ã–±—Ä–∞–Ω Alchemy RPC —É–∑–µ–ª
    if [[ "$NODE_TYPE" == "alchemy-rpc" ]]; then
        info_message "–í–≤–µ–¥–∏—Ç–µ –≤–∞—à Alchemy API –∫–ª—é—á:"
        read -p "‚ûú " ALCHEMY_API_KEY
        success_message "Alchemy API –∫–ª—é—á —Å–æ—Ö—Ä–∞–Ω–µ–Ω"
    fi
    
    # –ó–∞–ø—Ä–æ—Å –∑–Ω–∞—á–µ–Ω–∏—è –≥–∞–∑–∞
    info_message "–í–≤–µ–¥–∏—Ç–µ –∑–Ω–∞—á–µ–Ω–∏–µ –≥–∞–∑–∞ (–¥–æ–ª–∂–Ω–æ –±—ã—Ç—å —Ü–µ–ª—ã–º —á–∏—Å–ª–æ–º –æ—Ç 100 –¥–æ 20000):"
    while true; do
        read -p "‚ûú " GAS_VALUE
        if [[ "$GAS_VALUE" =~ ^[0-9]+$ ]] && (( GAS_VALUE >= 100 && GAS_VALUE <= 20000 )); then
            # –°–æ—Ö—Ä–∞–Ω—è–µ–º –∑–Ω–∞—á–µ–Ω–∏–µ –≥–∞–∑–∞ –≤ —Ñ–∞–π–ª –∫–æ–Ω—Ñ–∏–≥—É—Ä–∞—Ü–∏–∏ –¥–ª—è –±—É–¥—É—â–µ–≥–æ –∏—Å–ø–æ–ª—å–∑–æ–≤–∞–Ω–∏—è
            echo "$GAS_VALUE" > "$gas_config_file"
            success_message "–ó–Ω–∞—á–µ–Ω–∏–µ –≥–∞–∑–∞ —É—Å—Ç–∞–Ω–æ–≤–ª–µ–Ω–æ: $GAS_VALUE"
            break
        else
            error_message "–û—à–∏–±–∫–∞: –ó–Ω–∞—á–µ–Ω–∏–µ –≥–∞–∑–∞ –¥–æ–ª–∂–Ω–æ –±—ã—Ç—å –æ—Ç 100 –¥–æ 20000."
        fi
    done
    
    # –ù–∞—Å—Ç—Ä–æ–π–∫–∞ –æ–∫—Ä—É–∂–µ–Ω–∏—è —É–∑–ª–∞
    export ENVIRONMENT=testnet
    export LOG_LEVEL=debug
    export LOG_PRETTY=false
    export EXECUTOR_PROCESS_BIDS_ENABLED=true
    export EXECUTOR_PROCESS_ORDERS_ENABLED=true
    export EXECUTOR_PROCESS_CLAIMS_ENABLED=true
    export PRIVATE_KEY_LOCAL=$WALLET_PRIVATE_KEY
    export EXECUTOR_MAX_L3_GAS_PRICE=$GAS_VALUE
    
    # –í—ã–±–æ—Ä —Å–µ—Ç–µ–π –¥–ª—è –∞–∫—Ç–∏–≤–∞—Ü–∏–∏
    info_message "–î–æ—Å—Ç—É–ø–Ω—ã–µ —Å–µ—Ç–∏:"
    echo -e "${ORANGE}üî∑ ARBT = arbitrum-sepolia${NC}"
    echo -e "${ORANGE}üî∑ BAST = base-sepolia${NC}"
    echo -e "${ORANGE}üî∑ BLST = blast-sepolia${NC}"
    echo -e "${ORANGE}üî∑ OPST = optimism-sepolia${NC}"
    echo -e "${ORANGE}üî∑ UNIT = unichain-sepolia${NC}"
    echo -e "${RED}‚úÖ L2RN –≤—Å–µ–≥–¥–∞ –≤–∫–ª—é—á–µ–Ω.${NC}"
    
    ENABLED_NETWORKS="l2rn"  # l2rn –≤—Å–µ–≥–¥–∞ –≤–∫–ª—é—á–µ–Ω
    read -p "$(echo -e "${GREEN}–í–≤–µ–¥–∏—Ç–µ —Å–µ—Ç–∏ –¥–ª—è –∞–∫—Ç–∏–≤–∞—Ü–∏–∏ —á–µ—Ä–µ–∑ –∑–∞–ø—è—Ç—É—é \n[ARBT, BAST, BLST, OPST, UNIT] –∏–ª–∏ 'all' –¥–ª—è –≤—Å–µ—Ö: ${NC}")" USER_NETWORKS
    
    if [[ -z "$USER_NETWORKS" || "$USER_NETWORKS" =~ ^[Aa][Ll][Ll]$ ]]; then
        ENABLED_NETWORKS="$ENABLED_NETWORKS,arbitrum-sepolia,base-sepolia,blast-sepolia,optimism-sepolia,unichain-sepolia"
        success_message "–í—ã–±—Ä–∞–Ω—ã –≤—Å–µ —Å–µ—Ç–∏"
    else
        IFS=',' read -r -a networks <<< "$USER_NETWORKS"
        for network in "${networks[@]}"; do
            case "$network" in
                ARBT)
                    ENABLED_NETWORKS="$ENABLED_NETWORKS,arbitrum-sepolia"
                    ;;
                BAST)
                    ENABLED_NETWORKS="$ENABLED_NETWORKS,base-sepolia"
                    ;;
                BLST)
                    ENABLED_NETWORKS="$ENABLED_NETWORKS,blast-sepolia"
                    ;;
                OPST)
                    ENABLED_NETWORKS="$ENABLED_NETWORKS,optimism-sepolia"
                    ;;
                UNIT)
                    ENABLED_NETWORKS="$ENABLED_NETWORKS,unichain-sepolia"
                    ;;
                *)
                    warning_message "–ù–µ–≤–µ—Ä–Ω–∞—è —Å–µ—Ç—å: $network. –ü—Ä–æ–ø—É—Å–∫–∞–µ–º."
            ;;
    esac
done
    fi
    export ENABLED_NETWORKS
    success_message "–ù–∞—Å—Ç—Ä–æ–π–∫–∞ —Å–µ—Ç–µ–π –∑–∞–≤–µ—Ä—à–µ–Ω–∞"
    
    # –ù–∞—Å—Ç—Ä–æ–π–∫–∞ RPC —ç–Ω–¥–ø–æ–∏–Ω—Ç–æ–≤
    # –ò–Ω–∏—Ü–∏–∞–ª–∏–∑–∞—Ü–∏—è RPC_ENDPOINTS_JSON –∑–Ω–∞—á–µ–Ω–∏—è–º–∏ –ø–æ —É–º–æ–ª—á–∞–Ω–∏—é
    RPC_ENDPOINTS_JSON="$DEFAULT_RPC_ENDPOINTS_JSON"
    
    # –ï—Å–ª–∏ –≤—ã–±—Ä–∞–Ω Alchemy RPC, –¥–æ–±–∞–≤–ª—è–µ–º Alchemy —ç–Ω–¥–ø–æ–∏–Ω—Ç—ã
if [[ "$NODE_TYPE" == "alchemy-rpc" ]]; then
        info_message "–î–æ–±–∞–≤–ª–µ–Ω–∏–µ Alchemy RPC endpoints..."
        configure_rpc_endpoints
    fi
    
    # –ú–∏–Ω–∏—Ñ–∏–∫–∞—Ü–∏—è JSON –∏ —Å–æ—Ö—Ä–∞–Ω–µ–Ω–∏–µ –≤ —Ñ–∞–π–ª –∫–æ–Ω—Ñ–∏–≥—É—Ä–∞—Ü–∏–∏
    RPC_CONFIG_FILE="$HOME/t3rn/rpc_config.json"
    echo "$RPC_ENDPOINTS_JSON" > "$RPC_CONFIG_FILE"
    
    # –≠–∫—Å–ø–æ—Ä—Ç–∏—Ä—É–µ–º –ø–µ—Ä–µ–º–µ–Ω–Ω—É—é –æ–∫—Ä—É–∂–µ–Ω–∏—è –¥–ª—è executor
    export RPC_ENDPOINTS=$(echo "$RPC_ENDPOINTS_JSON" | jq -c .)
    success_message "–ù–∞—Å—Ç—Ä–æ–π–∫–∞ RPC —ç–Ω–¥–ø–æ–∏–Ω—Ç–æ–≤ –∑–∞–≤–µ—Ä—à–µ–Ω–∞"
    
    # –í—ã–≤–æ–¥ –Ω–∞—Å—Ç—Ä–æ–µ–∫
    info_message "–°–æ–±—Ä–∞–Ω–Ω—ã–µ –¥–∞–Ω–Ω—ã–µ –∏ –Ω–∞—Å—Ç—Ä–æ–π–∫–∏:"
    echo -e "${ORANGE}üè∑Ô∏è –¢–∏–ø —É–∑–ª–∞:${NC} ${BLUE}$NODE_TYPE${NC}"
    echo -e "${ORANGE}‚õΩ –ó–Ω–∞—á–µ–Ω–∏–µ –≥–∞–∑–∞:${NC} ${BLUE}$GAS_VALUE${NC}"
    echo -e "${ORANGE}üåê –ê–∫—Ç–∏–≤–Ω—ã–µ —Å–µ—Ç–∏:${NC} ${BLUE}$ENABLED_NETWORKS${NC}"
}

# –§—É–Ω–∫—Ü–∏—è –¥–ª—è —É—Å—Ç–∞–Ω–æ–≤–∫–∏ –ø–æ–ª–Ω–æ–π –Ω–æ–¥—ã —Å –ø–∞—Ä–∞–º–µ—Ç—Ä–∞–º–∏
setup_node() {
    # –ü–µ—Ä–µ–Ω–æ—Å–∏–º –æ—Ä–∏–≥–∏–Ω–∞–ª—å–Ω—É—é —Ñ—É–Ω–∫—Ü–∏–æ–Ω–∞–ª—å–Ω–æ—Å—Ç—å —Å–∫—Ä–∏–ø—Ç–∞ —Å—é–¥–∞
    echo -e "\n${BOLD}${BLUE}üõ†Ô∏è –£—Å—Ç–∞–Ω–æ–≤–∫–∞ –Ω–æ–¥—ã T3RN...${NC}\n"
    
    echo -e "${WHITE}[${CYAN}1/5${WHITE}] ${GREEN}‚ûú ${WHITE}üßπ –û—á–∏—Å—Ç–∫–∞ –ø—Ä–µ–¥—ã–¥—É—â–∏—Ö —É—Å—Ç–∞–Ω–æ–≤–æ–∫...${NC}"
    # –°–Ω–∞—á–∞–ª–∞ –ø—Ä–æ–≤–µ—Ä—è–µ–º –∏ –æ—Å—Ç–∞–Ω–∞–≤–ª–∏–≤–∞–µ–º –Ω–æ–¥—É, –µ—Å–ª–∏ –æ–Ω–∞ –∑–∞–ø—É—â–µ–Ω–∞
    kill_running_executor
    
    if [ -d "$HOME/t3rn" ]; then
        # –°–æ—Ö—Ä–∞–Ω—è–µ–º —Ñ–∞–π–ª—ã –ª–æ–≥–æ–≤, –µ—Å–ª–∏ –æ–Ω–∏ —Å—É—â–µ—Å—Ç–≤—É—é—Ç
        if [ -f "$HOME/t3rn/setup.log" ]; then
            cp "$HOME/t3rn/setup.log" "/tmp/t3rn_setup.log.backup"
        fi
        if [ -f "$HOME/t3rn/node.log" ]; then
            cp "$HOME/t3rn/node.log" "/tmp/t3rn_node.log.backup"
        fi
        # –°–æ—Ö—Ä–∞–Ω—è–µ–º –∫–æ–Ω—Ñ–∏–≥—É—Ä–∞—Ü–∏–æ–Ω–Ω—ã–π —Ñ–∞–π–ª –≥–∞–∑–∞, –µ—Å–ª–∏ –æ–Ω —Å—É—â–µ—Å—Ç–≤—É–µ—Ç
        if [ -f "$HOME/t3rn/gas_config.txt" ]; then
            cp "$HOME/t3rn/gas_config.txt" "/tmp/t3rn_gas_config.backup"
        fi
        # –°–æ—Ö—Ä–∞–Ω—è–µ–º –∫–æ–Ω—Ñ–∏–≥—É—Ä–∞—Ü–∏–æ–Ω–Ω—ã–π —Ñ–∞–π–ª RPC, –µ—Å–ª–∏ –æ–Ω —Å—É—â–µ—Å—Ç–≤—É–µ—Ç
        if [ -f "$HOME/t3rn/rpc_config.json" ]; then
            cp "$HOME/t3rn/rpc_config.json" "/tmp/t3rn_rpc_config.backup"
        fi
        
        rm -rf "$HOME/t3rn"
        
        # –°–æ–∑–¥–∞–µ–º –¥–∏—Ä–µ–∫—Ç–æ—Ä–∏—é –∑–∞–Ω–æ–≤–æ –∏ –≤–æ—Å—Å—Ç–∞–Ω–∞–≤–ª–∏–≤–∞–µ–º –ª–æ–≥–∏ –∏ –∫–æ–Ω—Ñ–∏–≥—É—Ä–∞—Ü–∏—é
        mkdir -p "$HOME/t3rn"
        if [ -f "/tmp/t3rn_setup.log.backup" ]; then
            cp "/tmp/t3rn_setup.log.backup" "$HOME/t3rn/setup.log"
        fi
        if [ -f "/tmp/t3rn_node.log.backup" ]; then
            cp "/tmp/t3rn_node.log.backup" "$HOME/t3rn/node.log"
        fi
        if [ -f "/tmp/t3rn_gas_config.backup" ]; then
            cp "/tmp/t3rn_gas_config.backup" "$HOME/t3rn/gas_config.txt"
        fi
        if [ -f "/tmp/t3rn_rpc_config.backup" ]; then
            cp "/tmp/t3rn_rpc_config.backup" "$HOME/t3rn/rpc_config.json"
        fi
    else
        mkdir -p "$HOME/t3rn"
    fi
    
    if [ -d "$HOME/executor" ]; then
        rm -rf "$HOME/executor"
    fi
    
    if ls executor-linux-*.tar.gz 1> /dev/null 2>&1; then
        rm -f executor-linux-*.tar.gz
    fi
    success_message "–ü—Ä–µ–¥—ã–¥—É—â–∏–µ —É—Å—Ç–∞–Ω–æ–≤–∫–∏ –æ—á–∏—â–µ–Ω—ã"
    
    echo -e "${WHITE}[${CYAN}2/5${WHITE}] ${GREEN}‚ûú ${WHITE}üì• –ó–∞–≥—Ä—É–∑–∫–∞ –ø–æ—Å–ª–µ–¥–Ω–µ–π –≤–µ—Ä—Å–∏–∏...${NC}"
    cd "$HOME/t3rn" || { 
        error_message "–ù–µ —É–¥–∞–ª–æ—Å—å –ø–µ—Ä–µ–π—Ç–∏ –≤ –¥–∏—Ä–µ–∫—Ç–æ—Ä–∏—é t3rn"
        return 1
    }
    
    LATEST_TAG=$(curl -s https://api.github.com/repos/t3rn/executor-release/releases/latest | grep -Po '"tag_name": "\K.*?(?=")')
    if [ -z "$LATEST_TAG" ]; then
        error_message "–ù–µ —É–¥–∞–ª–æ—Å—å –ø–æ–ª—É—á–∏—Ç—å –ø–æ—Å–ª–µ–¥–Ω–∏–π —Ç–µ–≥ —Ä–µ–ª–∏–∑–∞. –ü—Ä–æ–≤–µ—Ä—å—Ç–µ –ø–æ–¥–∫–ª—é—á–µ–Ω–∏–µ –∫ –∏–Ω—Ç–µ—Ä–Ω–µ—Ç—É."
        return 1
    fi
    
    DOWNLOAD_URL="https://github.com/t3rn/executor-release/releases/download/$LATEST_TAG/executor-linux-$LATEST_TAG.tar.gz"
    wget --progress=bar:force:noscroll "$DOWNLOAD_URL" -O "executor-linux-$LATEST_TAG.tar.gz"
    if [ $? -ne 0 ]; then
        error_message "–ù–µ —É–¥–∞–ª–æ—Å—å –∑–∞–≥—Ä—É–∑–∏—Ç—å –ø–æ—Å–ª–µ–¥–Ω–∏–π —Ä–µ–ª–∏–∑. –ü—Ä–æ–≤–µ—Ä—å—Ç–µ URL –∏ –ø–æ–ø—Ä–æ–±—É–π—Ç–µ —Å–Ω–æ–≤–∞."
        return 1
    fi
    success_message "–ó–∞–≥—Ä—É–∑–∫–∞ –∑–∞–≤–µ—Ä—à–µ–Ω–∞"
    
    echo -e "${WHITE}[${CYAN}3/5${WHITE}] ${GREEN}‚ûú ${WHITE}üì¶ –†–∞—Å–ø–∞–∫–æ–≤–∫–∞ –∞—Ä—Ö–∏–≤–∞...${NC}"
    tar -xvzf "executor-linux-$LATEST_TAG.tar.gz"
    if [ $? -ne 0 ]; then
        error_message "–ù–µ —É–¥–∞–ª–æ—Å—å –∏–∑–≤–ª–µ—á—å –∞—Ä—Ö–∏–≤. –ü—Ä–æ–≤–µ—Ä—å—Ç–µ —Ñ–∞–π–ª –∏ –ø–æ–ø—Ä–æ–±—É–π—Ç–µ —Å–Ω–æ–≤–∞."
        return 1
    fi
    success_message "–ê—Ä—Ö–∏–≤ —Ä–∞—Å–ø–∞–∫–æ–≤–∞–Ω"
    
    echo -e "${WHITE}[${CYAN}4/5${WHITE}] ${GREEN}‚ûú ${WHITE}‚öôÔ∏è –ù–∞—Å—Ç—Ä–æ–π–∫–∞ –Ω–æ–¥—ã...${NC}"
    mkdir -p executor/executor/bin
    cd executor/executor/bin || {
        error_message "–ù–µ —É–¥–∞–ª–æ—Å—å –ø–µ—Ä–µ–π—Ç–∏ –∫ —Ä–∞—Å–ø–æ–ª–æ–∂–µ–Ω–∏—é –±–∏–Ω–∞—Ä–Ω–æ–≥–æ —Ñ–∞–π–ª–∞ executor"
        return 1
    }
    chmod +x executor
    
    # –ó–¥–µ—Å—å –≤—ã–∑—ã–≤–∞–µ–º —Ñ—É–Ω–∫—Ü–∏—é –¥–ª—è –Ω–∞—Å—Ç—Ä–æ–π–∫–∏ –Ω–æ–¥—ã
    configure_node
    success_message "–ù–∞—Å—Ç—Ä–æ–π–∫–∞ –∑–∞–≤–µ—Ä—à–µ–Ω–∞"
    
    echo -e "${WHITE}[${CYAN}5/5${WHITE}] ${GREEN}‚ûú ${WHITE}‚ñ∂Ô∏è –ó–∞–ø—É—Å–∫ –Ω–æ–¥—ã...${NC}"
    
    # –ü—Ä–æ–≤–µ—Ä—è–µ–º –¥–æ—Å—Ç—É–ø–Ω–æ—Å—Ç—å –ø–æ—Ä—Ç–∞ 9090 –ø–µ—Ä–µ–¥ –∑–∞–ø—É—Å–∫–æ–º
    check_and_free_port
    if [ $? -ne 0 ]; then
        return 1
    fi
    
    # –°–æ–∑–¥–∞–µ–º —Ñ–∞–π–ª –¥–ª—è –ª–æ–≥–æ–≤ –Ω–æ–¥—ã, –µ—Å–ª–∏ –æ–Ω –Ω–µ —Å—É—â–µ—Å—Ç–≤—É–µ—Ç
    NODE_LOG="$HOME/t3rn/node.log"
    touch "$NODE_LOG"
    
    # –ó–∞–ø—É—Å–∫ –Ω–æ–¥—ã –≤ —Ñ–æ–Ω–æ–≤–æ–º —Ä–µ–∂–∏–º–µ —Å –ø–µ—Ä–µ–Ω–∞–ø—Ä–∞–≤–ª–µ–Ω–∏–µ–º –≤—ã–≤–æ–¥–∞ –≤ –ª–æ–≥-—Ñ–∞–π–ª
    ./executor > "$NODE_LOG" 2>&1 &
    local NODE_PID=$!
    
    # –ü—Ä–æ–≤–µ—Ä—è–µ–º, –∑–∞–ø—É—Å—Ç–∏–ª–∞—Å—å –ª–∏ –Ω–æ–¥–∞ —É—Å–ø–µ—à–Ω–æ
    sleep 3
    if ps -p $NODE_PID > /dev/null; then
        success_message "–ù–æ–¥–∞ –∑–∞–ø—É—â–µ–Ω–∞ –≤ —Ñ–æ–Ω–æ–≤–æ–º —Ä–µ–∂–∏–º–µ (PID: $NODE_PID)"
        success_message "–õ–æ–≥–∏ —Ä–∞–±–æ—Ç—ã –Ω–æ–¥—ã —Å–æ—Ö—Ä–∞–Ω—è—é—Ç—Å—è –≤: $NODE_LOG"
    else
        error_message "–í–æ–∑–Ω–∏–∫–ª–∞ –æ—à–∏–±–∫–∞ –ø—Ä–∏ –∑–∞–ø—É—Å–∫–µ –Ω–æ–¥—ã. –ü—Ä–æ–≤–µ—Ä—å—Ç–µ –ª–æ–≥–∏ –¥–ª—è –¥–æ–ø–æ–ª–Ω–∏—Ç–µ–ª—å–Ω–æ–π –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏–∏."
        return 1
    fi
    
    echo -e "\n${PURPLE}‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê${NC}"
    echo -e "${GREEN}‚ú® –ù–æ–¥–∞ T3RN —É—Å–ø–µ—à–Ω–æ —É—Å—Ç–∞–Ω–æ–≤–ª–µ–Ω–∞ –∏ –∑–∞–ø—É—â–µ–Ω–∞!${NC}"
    echo -e "${CYAN}–í–µ—Ä—Å–∏—è: ${LATEST_TAG}${NC}"
    echo -e "${PURPLE}‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê${NC}\n"
}

# –§—É–Ω–∫—Ü–∏—è –¥–ª—è –ø—Ä–æ–≤–µ—Ä–∫–∏ –∏ –æ—Å–≤–æ–±–æ–∂–¥–µ–Ω–∏—è –ø–æ—Ä—Ç–∞ 9090
check_and_free_port() {
    echo -e "${WHITE}[${CYAN}*${WHITE}] ${GREEN}‚ûú ${WHITE}üîç –ü—Ä–æ–≤–µ—Ä–∫–∞ –¥–æ—Å—Ç—É–ø–Ω–æ—Å—Ç–∏ –ø–æ—Ä—Ç–∞ 9090...${NC}"
    
    # –ü—Ä–æ–≤–µ—Ä—è–µ–º, –∑–∞–Ω—è—Ç –ª–∏ –ø–æ—Ä—Ç 9090
    local port_pid=$(lsof -ti:9090)
    
    if [ -n "$port_pid" ]; then
        warning_message "–ü–æ—Ä—Ç 9090 —É–∂–µ –∑–∞–Ω—è—Ç –ø—Ä–æ—Ü–µ—Å—Å–æ–º —Å PID: $port_pid"
        echo -e "${ORANGE}–≠—Ç–æ –º–æ–∂–µ—Ç –ø—Ä–æ–∏–∑–æ–π—Ç–∏, –µ—Å–ª–∏ –ø—Ä–µ–¥—ã–¥—É—â–∞—è –Ω–æ–¥–∞ –Ω–µ –±—ã–ª–∞ –∫–æ—Ä—Ä–µ–∫—Ç–Ω–æ –æ—Å—Ç–∞–Ω–æ–≤–ª–µ–Ω–∞.${NC}"
        echo -e "${YELLOW}–•–æ—Ç–∏—Ç–µ –æ—Å–≤–æ–±–æ–¥–∏—Ç—å –ø–æ—Ä—Ç 9090, –∑–∞–≤–µ—Ä—à–∏–≤ –ø—Ä–æ—Ü–µ—Å—Å? (y/n)${NC}"
        read -p "‚ûú " free_port
        
        if [[ "$free_port" =~ ^[Yy]$ ]]; then
            echo -e "${ORANGE}–ó–∞–≤–µ—Ä—à–µ–Ω–∏–µ –ø—Ä–æ—Ü–µ—Å—Å–∞ —Å PID: $port_pid...${NC}"
            kill -9 $port_pid
    sleep 2
            
            # –ü—Ä–æ–≤–µ—Ä—è–µ–º, –æ—Å–≤–æ–±–æ–¥–∏–ª—Å—è –ª–∏ –ø–æ—Ä—Ç
            if lsof -ti:9090 > /dev/null; then
                error_message "–ù–µ —É–¥–∞–ª–æ—Å—å –æ—Å–≤–æ–±–æ–¥–∏—Ç—å –ø–æ—Ä—Ç 9090. –ü–æ–∂–∞–ª—É–π—Å—Ç–∞, –ø–µ—Ä–µ–∑–∞–≥—Ä—É–∑–∏—Ç–µ —Å–µ—Ä–≤–µ—Ä –∏–ª–∏ –æ—Å–≤–æ–±–æ–¥–∏—Ç–µ –ø–æ—Ä—Ç –≤—Ä—É—á–Ω—É—é."
                return 1
            else
                success_message "–ü–æ—Ä—Ç 9090 —É—Å–ø–µ—à–Ω–æ –æ—Å–≤–æ–±–æ–∂–¥–µ–Ω"
            fi
        else
            error_message "–ü–æ—Ä—Ç 9090 –∑–∞–Ω—è—Ç. –ó–∞–ø—É—Å–∫ –Ω–æ–¥—ã –Ω–µ–≤–æ–∑–º–æ–∂–µ–Ω. –ü–µ—Ä–µ–∑–∞–≥—Ä—É–∑–∏—Ç–µ —Å–µ—Ä–≤–µ—Ä –∏–ª–∏ –æ—Å–≤–æ–±–æ–¥–∏—Ç–µ –ø–æ—Ä—Ç –≤—Ä—É—á–Ω—É—é."
            return 1
        fi
    else
        success_message "–ü–æ—Ä—Ç 9090 —Å–≤–æ–±–æ–¥–µ–Ω"
    fi
    
    return 0
}

# –§—É–Ω–∫—Ü–∏—è –¥–ª—è —É–ø—Ä–∞–≤–ª–µ–Ω–∏—è –≥–∞–∑–æ–º
manage_gas() {
    local return_to_main=false
    local gas_config_file="$HOME/t3rn/gas_config.txt"
    local current_gas_value
    
    while [ "$return_to_main" = false ]; do
        clear
        echo -e "\n${BOLD}${BLUE}‚õΩ –£–ø—Ä–∞–≤–ª–µ–Ω–∏–µ –≥–∞–∑–æ–º –¥–ª—è –Ω–æ–¥—ã T3RN...${NC}\n"
        
        # –ü—Ä–æ–≤–µ—Ä–∫–∞ –Ω–∞–ª–∏—á–∏—è —É—Å—Ç–∞–Ω–æ–≤–ª–µ–Ω–Ω–æ–π –Ω–æ–¥—ã
        if [ ! -f "$HOME/t3rn/executor/executor/bin/executor" ]; then
            error_message "–ù–æ–¥–∞ –Ω–µ —É—Å—Ç–∞–Ω–æ–≤–ª–µ–Ω–∞. –°–Ω–∞—á–∞–ª–∞ –≤—ã–ø–æ–ª–Ω–∏—Ç–µ —É—Å—Ç–∞–Ω–æ–≤–∫—É."
            return 1
        fi
        
        # –ü–æ–ª—É—á–∞–µ–º —Ç–µ–∫—É—â–µ–µ –∑–Ω–∞—á–µ–Ω–∏–µ –≥–∞–∑–∞ –∏–∑ –∫–æ–Ω—Ñ–∏–≥—É—Ä–∞—Ü–∏–æ–Ω–Ω–æ–≥–æ —Ñ–∞–π–ª–∞ –∏–ª–∏ –∏–∑ –∑–∞–ø—É—â–µ–Ω–Ω–æ–π –Ω–æ–¥—ã
        if [ -f "$gas_config_file" ]; then
            current_gas_value=$(cat "$gas_config_file")
        else
            # –ü—Ä–æ–≤–µ—Ä—è–µ–º, –∑–∞–ø—É—â–µ–Ω–∞ –ª–∏ –Ω–æ–¥–∞
            NODE_PID=$(pgrep -f "./executor")
            if [ -n "$NODE_PID" ]; then
                # –ü–æ–ø—ã—Ç–∫–∞ –æ–ø—Ä–µ–¥–µ–ª–∏—Ç—å –∑–Ω–∞—á–µ–Ω–∏–µ –≥–∞–∑–∞ –∏–∑ –ø–µ—Ä–µ–º–µ–Ω–Ω—ã—Ö –æ–∫—Ä—É–∂–µ–Ω–∏—è –ø—Ä–æ—Ü–µ—Å—Å–∞
                if command -v pgrep > /dev/null && command -v xargs > /dev/null && command -v grep > /dev/null; then
                    gas_from_env=$(pgrep -f "./executor" | xargs -I{} grep -z "MAX_L3_GAS_PRICE" /proc/{}/environ 2>/dev/null | tr '\0' '\n' | grep "EXECUTOR_MAX_L3_GAS_PRICE" | cut -d= -f2)
                    if [ -n "$gas_from_env" ]; then
                        current_gas_value=$gas_from_env
                    else
                        current_gas_value="–ù–µ —É–¥–∞–ª–æ—Å—å –æ–ø—Ä–µ–¥–µ–ª–∏—Ç—å"
                    fi
                else
                    current_gas_value="–ù–µ —É–¥–∞–ª–æ—Å—å –æ–ø—Ä–µ–¥–µ–ª–∏—Ç—å"
                fi
            else
                current_gas_value="–ù–æ–¥–∞ –Ω–µ –∑–∞–ø—É—â–µ–Ω–∞"
            fi
        fi
        
        # –û—Ç–æ–±—Ä–∞–∂–∞–µ–º –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏—é
        echo -e "${BOLD}${WHITE}‚ïî‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïó${NC}"
        echo -e "${BOLD}${WHITE}‚ïë           –¢–ï–ö–£–©–ï–ï –ó–ù–ê–ß–ï–ù–ò–ï –ì–ê–ó–ê          ‚ïë${NC}"
        echo -e "${BOLD}${WHITE}‚ïö‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïù${NC}"
        
        echo -e "${CYAN}–¢–µ–∫—É—â–µ–µ —É—Å—Ç–∞–Ω–æ–≤–ª–µ–Ω–Ω–æ–µ –∑–Ω–∞—á–µ–Ω–∏–µ –≥–∞–∑–∞:${NC} ${YELLOW}$current_gas_value${NC}\n"
        
        # –ü–æ–¥–º–µ–Ω—é –¥–ª—è —Ä–∞–±–æ—Ç—ã —Å –≥–∞–∑–æ–º
        echo -e "${BOLD}${BLUE}–í—ã–±–µ—Ä–∏—Ç–µ –¥–µ–π—Å—Ç–≤–∏–µ:${NC}\n"
        echo -e "${WHITE}[${CYAN}1${WHITE}] ${GREEN}‚ûú ${WHITE}üîÑ –ò–∑–º–µ–Ω–∏—Ç—å –∑–Ω–∞—á–µ–Ω–∏–µ –≥–∞–∑–∞${NC}"
        echo -e "${WHITE}[${CYAN}2${WHITE}] ${GREEN}‚ûú ${WHITE}üîô –í–µ—Ä–Ω—É—Ç—å—Å—è –≤ –≥–ª–∞–≤–Ω–æ–µ –º–µ–Ω—é${NC}\n"
        
        read -p "$(echo -e "${GREEN}–í–≤–µ–¥–∏—Ç–µ –Ω–æ–º–µ—Ä –¥–µ–π—Å—Ç–≤–∏—è [1-2]:${NC} ")" gas_choice
        
        case $gas_choice in
            1)
                echo -e "\n${BOLD}${BLUE}üîÑ –ò–∑–º–µ–Ω–µ–Ω–∏–µ –∑–Ω–∞—á–µ–Ω–∏—è –≥–∞–∑–∞${NC}\n"
                
                # –ü—Ä–µ–¥—É–ø—Ä–µ–∂–¥–µ–Ω–∏–µ –æ –ø–µ—Ä–µ–∑–∞–ø—É—Å–∫–µ –Ω–æ–¥—ã
                echo -e "${YELLOW}‚ö†Ô∏è –î–ª—è –ø—Ä–∏–º–µ–Ω–µ–Ω–∏—è –Ω–æ–≤–æ–≥–æ –∑–Ω–∞—á–µ–Ω–∏—è –≥–∞–∑–∞ –ø–æ—Ç—Ä–µ–±—É–µ—Ç—Å—è –ø–µ—Ä–µ–∑–∞–ø—É—Å–∫ –Ω–æ–¥—ã.${NC}\n"
                
                # –ó–∞–ø—Ä–∞—à–∏–≤–∞–µ–º –Ω–æ–≤–æ–µ –∑–Ω–∞—á–µ–Ω–∏–µ –≥–∞–∑–∞
                echo -e "${CYAN}–í–≤–µ–¥–∏—Ç–µ –Ω–æ–≤–æ–µ –∑–Ω–∞—á–µ–Ω–∏–µ –≥–∞–∑–∞ (—Ü–µ–ª–æ–µ —á–∏—Å–ª–æ –æ—Ç 100 –¥–æ 20000):${NC}"
while true; do
                    read -p "‚ûú " new_gas_value
                    if [[ "$new_gas_value" =~ ^[0-9]+$ ]] && (( new_gas_value >= 100 && new_gas_value <= 20000 )); then
                        # –°–æ—Ö—Ä–∞–Ω—è–µ–º –Ω–æ–≤–æ–µ –∑–Ω–∞—á–µ–Ω–∏–µ –≥–∞–∑–∞
                        echo "$new_gas_value" > "$gas_config_file"
                        success_message "–ó–Ω–∞—á–µ–Ω–∏–µ –≥–∞–∑–∞ —É—Å—Ç–∞–Ω–æ–≤–ª–µ–Ω–æ: $new_gas_value"
                        
                        # –°–ø—Ä–∞—à–∏–≤–∞–µ–º –æ –ø–µ—Ä–µ–∑–∞–ø—É—Å–∫–µ –Ω–æ–¥—ã
                        echo -e "\n${YELLOW}‚ö†Ô∏è –î–ª—è –ø—Ä–∏–º–µ–Ω–µ–Ω–∏—è –∏–∑–º–µ–Ω–µ–Ω–∏–π –Ω—É–∂–Ω–æ –ø–µ—Ä–µ–∑–∞–ø—É—Å—Ç–∏—Ç—å –Ω–æ–¥—É.${NC}"
                        echo -e "${GREEN}–•–æ—Ç–∏—Ç–µ –ø–µ—Ä–µ–∑–∞–ø—É—Å—Ç–∏—Ç—å –Ω–æ–¥—É —Å–µ–π—á–∞—Å? (y/n)${NC}"
                        read -p "‚ûú " restart_node
                        
                        if [[ "$restart_node" =~ ^[Yy]$ ]]; then
                            kill_running_executor
                            success_message "–ù–æ–¥–∞ –æ—Å—Ç–∞–Ω–æ–≤–ª–µ–Ω–∞. –ü–æ–¥–≥–æ—Ç–æ–≤–∫–∞ –∫ –∑–∞–ø—É—Å–∫—É —Å –Ω–æ–≤—ã–º –∑–Ω–∞—á–µ–Ω–∏–µ–º –≥–∞–∑–∞..."
                            
                            # –ü—Ä–æ–≤–µ—Ä—è–µ–º –¥–æ—Å—Ç—É–ø–Ω–æ—Å—Ç—å –ø–æ—Ä—Ç–∞ 9090
                            check_and_free_port
                            if [ $? -ne 0 ]; then
                                echo -e "\n${ORANGE}–ù–∞–∂–º–∏—Ç–µ Enter, —á—Ç–æ–±—ã –≤–µ—Ä–Ω—É—Ç—å—Å—è –≤ –º–µ–Ω—é –≥–∞–∑–∞...${NC}"
                                read -s
                                continue
                            fi
                            
                            # –≠–∫—Å–ø–æ—Ä—Ç–∏—Ä—É–µ–º –ø–µ—Ä–µ–º–µ–Ω–Ω—É—é –æ–∫—Ä—É–∂–µ–Ω–∏—è –¥–ª—è executor
                            export EXECUTOR_MAX_L3_GAS_PRICE=$new_gas_value
                            
                            # –ó–∞–ø—É—Å–∫–∞–µ–º –Ω–æ–¥—É —Å –Ω–æ–≤—ã–º–∏ –Ω–∞—Å—Ç—Ä–æ–π–∫–∞–º–∏
                            cd "$HOME/t3rn/executor/executor/bin"
                            ./executor > "$HOME/t3rn/node.log" 2>&1 &
                            local NODE_PID=$!
                            
                            # –ü—Ä–æ–≤–µ—Ä—è–µ–º, –∑–∞–ø—É—Å—Ç–∏–ª–∞—Å—å –ª–∏ –Ω–æ–¥–∞ —É—Å–ø–µ—à–Ω–æ
                            sleep 3
                            if ps -p $NODE_PID > /dev/null; then
                                success_message "–ù–æ–¥–∞ –ø–µ—Ä–µ–∑–∞–ø—É—â–µ–Ω–∞ —Å –Ω–æ–≤—ã–º –∑–Ω–∞—á–µ–Ω–∏–µ–º –≥–∞–∑–∞ (PID: $NODE_PID)"
                            else
                                error_message "–í–æ–∑–Ω–∏–∫–ª–∞ –æ—à–∏–±–∫–∞ –ø—Ä–∏ –∑–∞–ø—É—Å–∫–µ –Ω–æ–¥—ã. –ü—Ä–æ–≤–µ—Ä—å—Ç–µ –ª–æ–≥–∏ –¥–ª—è –¥–æ–ø–æ–ª–Ω–∏—Ç–µ–ª—å–Ω–æ–π –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏–∏."
                            fi
                        fi
                        
        break
    else
                        error_message "–û—à–∏–±–∫–∞: –ó–Ω–∞—á–µ–Ω–∏–µ –≥–∞–∑–∞ –¥–æ–ª–∂–Ω–æ –±—ã—Ç—å –æ—Ç 100 –¥–æ 20000."
    fi
done

                echo -e "\n${ORANGE}–ù–∞–∂–º–∏—Ç–µ Enter, —á—Ç–æ–±—ã –≤–µ—Ä–Ω—É—Ç—å—Å—è –≤ –º–µ–Ω—é –≥–∞–∑–∞...${NC}"
                read -s
                ;;
                
            2)
                info_message "–í–æ–∑–≤—Ä–∞—â–∞–µ–º—Å—è –≤ –≥–ª–∞–≤–Ω–æ–µ –º–µ–Ω—é"
                return_to_main=true
                ;;
                
            *)
                error_message "–ù–µ–≤–µ—Ä–Ω—ã–π –≤—ã–±–æ—Ä. –ü–æ–∂–∞–ª—É–π—Å—Ç–∞, –≤–≤–µ–¥–∏—Ç–µ 1 –∏–ª–∏ 2."
                sleep 2
                ;;
        esac
    done
    
    return 0
}

# –§—É–Ω–∫—Ü–∏—è –¥–ª—è –Ω–∞—Å—Ç—Ä–æ–π–∫–∏ RPC —ç–Ω–¥–ø–æ–∏–Ω—Ç–æ–≤
configure_rpc_endpoints() {
    case $NODE_TYPE in
        "alchemy-rpc")
            echo -e "${GREEN}‚öôÔ∏è –î–æ–±–∞–≤–ª–µ–Ω–∏–µ Alchemy endpoints...${NC}"
            RPC_ENDPOINTS_JSON=$(echo "$RPC_ENDPOINTS_JSON" | jq \
                --arg arbt "https://arb-sepolia.g.alchemy.com/v2/$ALCHEMY_API_KEY" \
                --arg bast "https://base-sepolia.g.alchemy.com/v2/$ALCHEMY_API_KEY" \
                --arg opst "https://opt-sepolia.g.alchemy.com/v2/$ALCHEMY_API_KEY" \
                --arg blst "https://blast-sepolia.g.alchemy.com/v2/$ALCHEMY_API_KEY" \
                '.arbt += [$arbt] | .bast += [$bast] | .opst += [$opst] | .blst += [$blst]')
            ;;

        "custom-rpc")
            echo -e "${GREEN}‚öôÔ∏è –ò—Å–ø–æ–ª—å–∑–æ–≤–∞–Ω–∏–µ —Ç–æ–ª—å–∫–æ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å—Å–∫–∏—Ö RPC endpoints...${NC}"
            RPC_ENDPOINTS_JSON=$(echo "$RPC_ENDPOINTS_JSON" | jq 'del(.arbt, .bast, .opst, .blst)')
            ;;
    esac
}

# –§—É–Ω–∫—Ü–∏—è –¥–ª—è –∑–∞–ø—É—Å–∫–∞ –Ω–æ–¥—ã
start_node() {
    echo -e "\n${BOLD}${BLUE}‚ñ∂Ô∏è –ó–∞–ø—É—Å–∫ –Ω–æ–¥—ã T3RN...${NC}\n"
    
    # –ü—Ä–æ–≤–µ—Ä—è–µ–º, —Å—É—â–µ—Å—Ç–≤—É–µ—Ç –ª–∏ –∏—Å–ø–æ–ª–Ω—è–µ–º—ã–π —Ñ–∞–π–ª
    if [ ! -f "$HOME/t3rn/executor/executor/bin/executor" ]; then
        error_message "–ò—Å–ø–æ–ª–Ω—è–µ–º—ã–π —Ñ–∞–π–ª –Ω–æ–¥—ã –Ω–µ –Ω–∞–π–¥–µ–Ω. –°–Ω–∞—á–∞–ª–∞ —É—Å—Ç–∞–Ω–æ–≤–∏—Ç–µ –Ω–æ–¥—É (–æ–ø—Ü–∏—è 1)."
        return 1
    fi
    
    # –ü—Ä–æ–≤–µ—Ä—è–µ–º, –Ω–µ –∑–∞–ø—É—â–µ–Ω–∞ –ª–∏ —É–∂–µ –Ω–æ–¥–∞
    NODE_PID=$(pgrep -f executor)
    if [ -n "$NODE_PID" ]; then
        echo -e "${YELLOW}‚ö†Ô∏è –ù–æ–¥–∞ —É–∂–µ –∑–∞–ø—É—â–µ–Ω–∞ —Å PID: $NODE_PID${NC}"
        echo -e "${CYAN}–•–æ—Ç–∏—Ç–µ –æ—Å—Ç–∞–Ω–æ–≤–∏—Ç—å —Ç–µ–∫—É—â—É—é –Ω–æ–¥—É –∏ –∑–∞–ø—É—Å—Ç–∏—Ç—å –∑–∞–Ω–æ–≤–æ? (y/n)${NC}"
        read -p "‚ûú " restart_choice
        
        if [[ "$restart_choice" =~ ^[Yy]$ ]]; then
            echo -e "${ORANGE}üõë –û—Å—Ç–∞–Ω–∞–≤–ª–∏–≤–∞–µ–º —Ç–µ–∫—É—â—É—é –Ω–æ–¥—É...${NC}"
            kill_running_executor
            sleep 2
        else
            info_message "–û–ø–µ—Ä–∞—Ü–∏—è –æ—Ç–º–µ–Ω–µ–Ω–∞. –ù–æ–¥–∞ –ø—Ä–æ–¥–æ–ª–∂–∞–µ—Ç —Ä–∞–±–æ—Ç—É."
            return 0
        fi
    fi
    
    # –ü–µ—Ä–µ—Ö–æ–¥–∏–º –≤ –¥–∏—Ä–µ–∫—Ç–æ—Ä–∏—é —Å –∏—Å–ø–æ–ª–Ω—è–µ–º—ã–º —Ñ–∞–π–ª–æ–º
    cd "$HOME/t3rn/executor/executor/bin" || {
        error_message "–ù–µ —É–¥–∞–ª–æ—Å—å –ø–µ—Ä–µ–π—Ç–∏ –≤ –¥–∏—Ä–µ–∫—Ç–æ—Ä–∏—é —Å –∏—Å–ø–æ–ª–Ω—è–µ–º—ã–º —Ñ–∞–π–ª–æ–º."
        return 1
    }
    
    # –ü—Ä–æ–≤–µ—Ä—è–µ–º –¥–æ—Å—Ç—É–ø–Ω–æ—Å—Ç—å –ø–æ—Ä—Ç–∞ 9090 –ø–µ—Ä–µ–¥ –∑–∞–ø—É—Å–∫–æ–º
    check_and_free_port
    if [ $? -ne 0 ]; then
        return 1
    fi
    
    # –°–æ–∑–¥–∞–µ–º —Ñ–∞–π–ª –¥–ª—è –ª–æ–≥–æ–≤ –Ω–æ–¥—ã, –µ—Å–ª–∏ –æ–Ω –Ω–µ —Å—É—â–µ—Å—Ç–≤—É–µ—Ç
    NODE_LOG="$HOME/t3rn/node.log"
    touch "$NODE_LOG"
    
    echo -e "${GREEN}üöÄ –ó–∞–ø—É—Å–∫–∞–µ–º –Ω–æ–¥—É T3RN...${NC}"
    
    # –°–æ–∑–¥–∞–µ–º –æ—Ç–¥–µ–ª—å–Ω—É—é –¥–∏—Ä–µ–∫—Ç–æ—Ä–∏—é –¥–ª—è –≤—ã–≤–æ–¥–∞ –∏ –ø–µ—Ä–µ–Ω–∞–ø—Ä–∞–≤–ª—è–µ–º stderr –≤ stdout –≤ —Ñ–æ–Ω–æ–≤–æ–º —Ä–µ–∂–∏–º–µ
    mkdir -p "$HOME/t3rn/logs"
    
    # –ó–∞–ø—É—Å–∫–∞–µ–º –Ω–æ–¥—É –≤ —Ñ–æ–Ω–æ–≤–æ–º —Ä–µ–∂–∏–º–µ —Å –ø–µ—Ä–µ–Ω–∞–ø—Ä–∞–≤–ª–µ–Ω–∏–µ–º –≤—ã–≤–æ–¥–∞ –≤ –ª–æ–≥-—Ñ–∞–π–ª
    # –∏ –æ—Ç–∫–ª—é—á–µ–Ω–∏–µ–º –≤—ã–≤–æ–¥–∞ –≤ —Ç–µ—Ä–º–∏–Ω–∞–ª
    ./executor > "$NODE_LOG" 2>&1 &
    NODE_PID=$!
    
    # –ü—Ä–æ–≤–µ—Ä—è–µ–º, –∑–∞–ø—É—Å—Ç–∏–ª–∞—Å—å –ª–∏ –Ω–æ–¥–∞ —É—Å–ø–µ—à–Ω–æ
    sleep 3
    if ps -p $NODE_PID > /dev/null; then
        success_message "–ù–æ–¥–∞ —É—Å–ø–µ—à–Ω–æ –∑–∞–ø—É—â–µ–Ω–∞ (PID: $NODE_PID)"
        success_message "–õ–æ–≥–∏ —Ä–∞–±–æ—Ç—ã –Ω–æ–¥—ã —Å–æ—Ö—Ä–∞–Ω—è—é—Ç—Å—è –≤: $NODE_LOG"
    else
        error_message "–í–æ–∑–Ω–∏–∫–ª–∞ –æ—à–∏–±–∫–∞ –ø—Ä–∏ –∑–∞–ø—É—Å–∫–µ –Ω–æ–¥—ã. –ü—Ä–æ–≤–µ—Ä—å—Ç–µ –ª–æ–≥–∏ –¥–ª—è –¥–æ–ø–æ–ª–Ω–∏—Ç–µ–ª—å–Ω–æ–π –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏–∏."
        return 1
    fi
    
    echo -e "\n${PURPLE}‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê${NC}"
    echo -e "${GREEN}‚ú® –ù–æ–¥–∞ T3RN —É—Å–ø–µ—à–Ω–æ –∑–∞–ø—É—â–µ–Ω–∞!${NC}"
    echo -e "${PURPLE}‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê${NC}\n"
}

# –§—É–Ω–∫—Ü–∏—è –¥–ª—è –ø—Ä–æ–≤–µ—Ä–∫–∏ —Å—Ç–∞—Ç—É—Å–∞ –Ω–æ–¥—ã
check_status() {
    echo -e "\n${BOLD}${BLUE}üîç –ü—Ä–æ–≤–µ—Ä–∫–∞ —Å—Ç–∞—Ç—É—Å–∞ –Ω–æ–¥—ã T3RN...${NC}\n"
    
    # –ü—Ä–æ–≤–µ—Ä–∫–∞ –Ω–∞–ª–∏—á–∏—è –∑–∞–ø—É—â–µ–Ω–Ω–æ–≥–æ –ø—Ä–æ—Ü–µ—Å—Å–∞
    PID=$(pgrep -f "./executor")
    
    if [ -n "$PID" ]; then
        success_message "–ù–æ–¥–∞ –∞–∫—Ç–∏–≤–Ω–∞ (PID: $PID)"
        echo -e "${CYAN}–í—Ä–µ–º—è —Ä–∞–±–æ—Ç—ã:${NC}"
        ps -p $PID -o etime=
    else
        warning_message "–ù–æ–¥–∞ –Ω–µ –∑–∞–ø—É—â–µ–Ω–∞"
    fi
    
    # –ü—Ä–æ–≤–µ—Ä–∫–∞ –Ω–∞–ª–∏—á–∏—è —É—Å—Ç–∞–Ω–æ–≤–ª–µ–Ω–Ω—ã—Ö —Ñ–∞–π–ª–æ–≤
    if [ -f "$HOME/t3rn/executor/executor/bin/executor" ]; then
        success_message "–ù–æ–¥–∞ —É—Å—Ç–∞–Ω–æ–≤–ª–µ–Ω–∞"
    else
        warning_message "–§–∞–π–ª—ã –Ω–æ–¥—ã –Ω–µ –Ω–∞–π–¥–µ–Ω—ã. –í–æ–∑–º–æ–∂–Ω–æ, –Ω–æ–¥–∞ –Ω–µ —É—Å—Ç–∞–Ω–æ–≤–ª–µ–Ω–∞."
    fi
    
    echo -e "\n${PURPLE}‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê${NC}"
    echo -e "${YELLOW}–î–ª—è –∑–∞–ø—É—Å–∫–∞ –Ω–æ–¥—ã –∏—Å–ø–æ–ª—å–∑—É–π—Ç–µ –æ–ø—Ü–∏—é 3 –≤ –≥–ª–∞–≤–Ω–æ–º –º–µ–Ω—é${NC}"
    echo -e "${PURPLE}‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê${NC}\n"
}

# –§—É–Ω–∫—Ü–∏—è –¥–ª—è –æ–±–Ω–æ–≤–ª–µ–Ω–∏—è –Ω–æ–¥—ã
update_node() {
    echo -e "\n${BOLD}${BLUE}‚¨ÜÔ∏è –û–±–Ω–æ–≤–ª–µ–Ω–∏–µ –Ω–æ–¥—ã T3RN...${NC}\n"
    
    echo -e "${WHITE}[${CYAN}1/5${WHITE}] ${GREEN}‚ûú ${WHITE}üõë –û—Å—Ç–∞–Ω–æ–≤–∫–∞ —Ä–∞–±–æ—Ç–∞—é—â–∏—Ö —ç–∫–∑–µ–º–ø–ª—è—Ä–æ–≤...${NC}"
    kill_running_executor
    success_message "–í—Å–µ —ç–∫–∑–µ–º–ø–ª—è—Ä—ã –æ—Å—Ç–∞–Ω–æ–≤–ª–µ–Ω—ã"
    
    echo -e "${WHITE}[${CYAN}2/5${WHITE}] ${GREEN}‚ûú ${WHITE}üßπ –û—á–∏—Å—Ç–∫–∞ –ø—Ä–µ–¥—ã–¥—É—â–µ–π —É—Å—Ç–∞–Ω–æ–≤–∫–∏...${NC}"
    if [ -d "$HOME/t3rn" ]; then
        # –°–æ—Ö—Ä–∞–Ω—è–µ–º —Ñ–∞–π–ª—ã –ª–æ–≥–æ–≤, –µ—Å–ª–∏ –æ–Ω–∏ —Å—É—â–µ—Å—Ç–≤—É—é—Ç
        if [ -f "$HOME/t3rn/setup.log" ]; then
            cp "$HOME/t3rn/setup.log" "/tmp/t3rn_setup.log.backup"
        fi
        if [ -f "$HOME/t3rn/node.log" ]; then
            cp "$HOME/t3rn/node.log" "/tmp/t3rn_node.log.backup"
        fi
        # –°–æ—Ö—Ä–∞–Ω—è–µ–º –∫–æ–Ω—Ñ–∏–≥—É—Ä–∞—Ü–∏–æ–Ω–Ω—ã–π —Ñ–∞–π–ª –≥–∞–∑–∞, –µ—Å–ª–∏ –æ–Ω —Å—É—â–µ—Å—Ç–≤—É–µ—Ç
        if [ -f "$HOME/t3rn/gas_config.txt" ]; then
            cp "$HOME/t3rn/gas_config.txt" "/tmp/t3rn_gas_config.backup"
        fi
        # –°–æ—Ö—Ä–∞–Ω—è–µ–º –∫–æ–Ω—Ñ–∏–≥—É—Ä–∞—Ü–∏–æ–Ω–Ω—ã–π —Ñ–∞–π–ª RPC, –µ—Å–ª–∏ –æ–Ω —Å—É—â–µ—Å—Ç–≤—É–µ—Ç
        if [ -f "$HOME/t3rn/rpc_config.json" ]; then
            cp "$HOME/t3rn/rpc_config.json" "/tmp/t3rn_rpc_config.backup"
        fi
        
        rm -rf "$HOME/t3rn"
        
        # –°–æ–∑–¥–∞–µ–º –¥–∏—Ä–µ–∫—Ç–æ—Ä–∏—é –∑–∞–Ω–æ–≤–æ –∏ –≤–æ—Å—Å—Ç–∞–Ω–∞–≤–ª–∏–≤–∞–µ–º –ª–æ–≥–∏ –∏ –∫–æ–Ω—Ñ–∏–≥—É—Ä–∞—Ü–∏—é
        mkdir -p "$HOME/t3rn"
        if [ -f "/tmp/t3rn_setup.log.backup" ]; then
            cp "/tmp/t3rn_setup.log.backup" "$HOME/t3rn/setup.log"
        fi
        if [ -f "/tmp/t3rn_node.log.backup" ]; then
            cp "/tmp/t3rn_node.log.backup" "$HOME/t3rn/node.log"
        fi
        if [ -f "/tmp/t3rn_gas_config.backup" ]; then
            cp "/tmp/t3rn_gas_config.backup" "$HOME/t3rn/gas_config.txt"
        fi
        if [ -f "/tmp/t3rn_rpc_config.backup" ]; then
            cp "/tmp/t3rn_rpc_config.backup" "$HOME/t3rn/rpc_config.json"
        fi
        
        success_message "–ü—Ä–µ–¥—ã–¥—É—â–∞—è —É—Å—Ç–∞–Ω–æ–≤–∫–∞ —É–¥–∞–ª–µ–Ω–∞"
    else
        info_message "–ü—Ä–µ–¥—ã–¥—É—â–∞—è —É—Å—Ç–∞–Ω–æ–≤–∫–∞ –Ω–µ –Ω–∞–π–¥–µ–Ω–∞"
    fi
    
    echo -e "${WHITE}[${CYAN}3/5${WHITE}] ${GREEN}‚ûú ${WHITE}üì• –ó–∞–≥—Ä—É–∑–∫–∞ –ø–æ—Å–ª–µ–¥–Ω–µ–π –≤–µ—Ä—Å–∏–∏...${NC}"
    mkdir -p "$HOME/t3rn"
    cd "$HOME/t3rn"
    LATEST_TAG=$(curl -s https://api.github.com/repos/t3rn/executor-release/releases/latest | grep -Po '"tag_name": "\K.*?(?=")')
    if [ -z "$LATEST_TAG" ]; then
        error_message "–ù–µ —É–¥–∞–ª–æ—Å—å –ø–æ–ª—É—á–∏—Ç—å –ø–æ—Å–ª–µ–¥–Ω–∏–π —Ç–µ–≥ —Ä–µ–ª–∏–∑–∞. –ü—Ä–æ–≤–µ—Ä—å—Ç–µ –ø–æ–¥–∫–ª—é—á–µ–Ω–∏–µ –∫ –∏–Ω—Ç–µ—Ä–Ω–µ—Ç—É."
        return 1
    fi
    
    DOWNLOAD_URL="https://github.com/t3rn/executor-release/releases/download/$LATEST_TAG/executor-linux-$LATEST_TAG.tar.gz"
    wget --progress=bar:force:noscroll "$DOWNLOAD_URL" -O "executor-linux-$LATEST_TAG.tar.gz"
    if [ $? -ne 0 ]; then
        error_message "–ù–µ —É–¥–∞–ª–æ—Å—å –∑–∞–≥—Ä—É–∑–∏—Ç—å –ø–æ—Å–ª–µ–¥–Ω–∏–π —Ä–µ–ª–∏–∑. –ü—Ä–æ–≤–µ—Ä—å—Ç–µ URL –∏ –ø–æ–ø—Ä–æ–±—É–π—Ç–µ —Å–Ω–æ–≤–∞."
        return 1
    fi
    success_message "–ó–∞–≥—Ä—É–∑–∫–∞ –∑–∞–≤–µ—Ä—à–µ–Ω–∞"
    
    echo -e "${WHITE}[${CYAN}4/5${WHITE}] ${GREEN}‚ûú ${WHITE}üì¶ –†–∞—Å–ø–∞–∫–æ–≤–∫–∞ –∞—Ä—Ö–∏–≤–∞...${NC}"
    tar -xvzf "executor-linux-$LATEST_TAG.tar.gz"
    if [ $? -ne 0 ]; then
        error_message "–ù–µ —É–¥–∞–ª–æ—Å—å –∏–∑–≤–ª–µ—á—å –∞—Ä—Ö–∏–≤. –ü—Ä–æ–≤–µ—Ä—å—Ç–µ —Ñ–∞–π–ª –∏ –ø–æ–ø—Ä–æ–±—É–π—Ç–µ —Å–Ω–æ–≤–∞."
        return 1
    fi
    success_message "–ê—Ä—Ö–∏–≤ —Ä–∞—Å–ø–∞–∫–æ–≤–∞–Ω"
    
    echo -e "${WHITE}[${CYAN}5/5${WHITE}] ${GREEN}‚ûú ${WHITE}‚úÖ –ó–∞–≤–µ—Ä—à–µ–Ω–∏–µ –æ–±–Ω–æ–≤–ª–µ–Ω–∏—è...${NC}"
    mkdir -p executor/executor/bin
    cd executor/executor/bin
    chmod +x executor
    success_message "–ò—Å–ø–æ–ª–Ω—è–µ–º—ã–π —Ñ–∞–π–ª –Ω–∞—Å—Ç—Ä–æ–µ–Ω"
    
    echo -e "\n${PURPLE}‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê${NC}"
    echo -e "${GREEN}‚ú® –ù–æ–¥–∞ T3RN —É—Å–ø–µ—à–Ω–æ –æ–±–Ω–æ–≤–ª–µ–Ω–∞ –¥–æ –≤–µ—Ä—Å–∏–∏ $LATEST_TAG!${NC}"
    echo -e "${PURPLE}‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê${NC}\n"
}

# –§—É–Ω–∫—Ü–∏—è –¥–ª—è —É–¥–∞–ª–µ–Ω–∏—è –Ω–æ–¥—ã
remove_node() {
    local return_to_main=false
    
    while [ "$return_to_main" = false ]; do
        clear
        echo -e "\n${BOLD}${RED}‚ö†Ô∏è –£–¥–∞–ª–µ–Ω–∏–µ –Ω–æ–¥—ã T3RN...${NC}\n"
        
        # –ü—Ä–æ–≤–µ—Ä–∫–∞ –Ω–∞–ª–∏—á–∏—è —É—Å—Ç–∞–Ω–æ–≤–ª–µ–Ω–Ω–æ–π –Ω–æ–¥—ã
        if [ ! -d "$HOME/t3rn" ] && [ ! -d "$HOME/executor" ]; then
            error_message "–ù–æ–¥–∞ –Ω–µ —É—Å—Ç–∞–Ω–æ–≤–ª–µ–Ω–∞. –ù–µ—á–µ–≥–æ —É–¥–∞–ª—è—Ç—å."
            sleep 2
            return 1
        fi
        
        echo -e "${BOLD}${RED}–í—ã —É–≤–µ—Ä–µ–Ω—ã, —á—Ç–æ —Ö–æ—Ç–∏—Ç–µ —É–¥–∞–ª–∏—Ç—å –Ω–æ–¥—É T3RN –∏ –≤—Å–µ —Å–≤—è–∑–∞–Ω–Ω—ã–µ —Å –Ω–µ–π —Ñ–∞–π–ª—ã?${NC}"
        echo -e "${YELLOW}–≠—Ç–æ –¥–µ–π—Å—Ç–≤–∏–µ –Ω–µ–≤–æ–∑–º–æ–∂–Ω–æ –æ—Ç–º–µ–Ω–∏—Ç—å.${NC}\n"
        
        echo -e "${BOLD}${BLUE}–í—ã–±–µ—Ä–∏—Ç–µ –¥–µ–π—Å—Ç–≤–∏–µ:${NC}\n"
        echo -e "${WHITE}[${CYAN}1${WHITE}] ${RED}‚ûú ${WHITE}üóëÔ∏è –£–¥–∞–ª–∏—Ç—å –Ω–æ–¥—É –∏ –≤—Å–µ —Ñ–∞–π–ª—ã${NC}"
        echo -e "${WHITE}[${CYAN}2${WHITE}] ${GREEN}‚ûú ${WHITE}üîô –í–µ—Ä–Ω—É—Ç—å—Å—è –≤ –≥–ª–∞–≤–Ω–æ–µ –º–µ–Ω—é${NC}\n"
        
        read -p "$(echo -e "${GREEN}–í–≤–µ–¥–∏—Ç–µ –Ω–æ–º–µ—Ä –¥–µ–π—Å—Ç–≤–∏—è [1-2]:${NC} ")" confirm
        
        case $confirm in
            1)
                echo -e "\n${WHITE}[${CYAN}1/3${WHITE}] ${GREEN}‚ûú ${WHITE}üõë –û—Å—Ç–∞–Ω–æ–≤–∫–∞ –∏ —É–¥–∞–ª–µ–Ω–∏–µ –≤—Å–µ—Ö –ø—Ä–æ—Ü–µ—Å—Å–æ–≤ –Ω–æ–¥—ã...${NC}"
                
                # –ù–∞—Ö–æ–¥–∏–º –≤—Å–µ –ø—Ä–æ—Ü–µ—Å—Å—ã, —Å–≤—è–∑–∞–Ω–Ω—ã–µ —Å –Ω–æ–¥–æ–π –∏ –∑–∞–≤–µ—Ä—à–∞–µ–º –∏—Ö
                NODE_PIDS=$(pgrep -f "executor")
                if [ -n "$NODE_PIDS" ]; then
                    for pid in $NODE_PIDS; do
                        echo -e "${ORANGE}–ó–∞–≤–µ—Ä—à–µ–Ω–∏–µ –ø—Ä–æ—Ü–µ—Å—Å–∞ —Å PID: $pid...${NC}"
                        kill -9 $pid 2>/dev/null
                    done
                    sleep 2
                    
                    # –ü—Ä–æ–≤–µ—Ä–∫–∞ –Ω–∞ –Ω–∞–ª–∏—á–∏–µ –æ—Å—Ç–∞–≤—à–∏—Ö—Å—è –ø—Ä–æ—Ü–µ—Å—Å–æ–≤
                    REMAINING_PIDS=$(pgrep -f "executor")
                    if [ -n "$REMAINING_PIDS" ]; then
                        warning_message "–ù–µ–∫–æ—Ç–æ—Ä—ã–µ –ø—Ä–æ—Ü–µ—Å—Å—ã –Ω–æ–¥—ã –Ω–µ —É–¥–∞–ª–æ—Å—å –∑–∞–≤–µ—Ä—à–∏—Ç—å. –ú–æ–∂–µ—Ç –ø–æ—Ç—Ä–µ–±–æ–≤–∞—Ç—å—Å—è –ø–µ—Ä–µ–∑–∞–≥—Ä—É–∑–∫–∞ —Å–∏—Å—Ç–µ–º—ã."
                    else
                        success_message "–í—Å–µ –ø—Ä–æ—Ü–µ—Å—Å—ã –Ω–æ–¥—ã —É—Å–ø–µ—à–Ω–æ –æ—Å—Ç–∞–Ω–æ–≤–ª–µ–Ω—ã"
                    fi
                else
                    info_message "–ê–∫—Ç–∏–≤–Ω—ã—Ö –ø—Ä–æ—Ü–µ—Å—Å–æ–≤ –Ω–æ–¥—ã –Ω–µ –æ–±–Ω–∞—Ä—É–∂–µ–Ω–æ"
                fi
                
                echo -e "\n${WHITE}[${CYAN}2/3${WHITE}] ${GREEN}‚ûú ${WHITE}üóëÔ∏è –£–¥–∞–ª–µ–Ω–∏–µ —Ñ–∞–π–ª–æ–≤ –∏ –¥–∏—Ä–µ–∫—Ç–æ—Ä–∏–π...${NC}"
                # –£–¥–∞–ª—è–µ–º –æ—Å–Ω–æ–≤–Ω—É—é –¥–∏—Ä–µ–∫—Ç–æ—Ä–∏—é –Ω–æ–¥—ã
                if [ -d "$HOME/t3rn" ]; then
                    rm -rf "$HOME/t3rn"
                    success_message "–î–∏—Ä–µ–∫—Ç–æ—Ä–∏—è $HOME/t3rn —É–¥–∞–ª–µ–Ω–∞"
                else
                    info_message "–î–∏—Ä–µ–∫—Ç–æ—Ä–∏—è $HOME/t3rn –Ω–µ –Ω–∞–π–¥–µ–Ω–∞"
                fi
                
                # –£–¥–∞–ª—è–µ–º –¥–æ–ø–æ–ª–Ω–∏—Ç–µ–ª—å–Ω—ã–µ —Ñ–∞–π–ª—ã, –µ—Å–ª–∏ –æ–Ω–∏ —Å—É—â–µ—Å—Ç–≤—É—é—Ç
                if [ -d "$HOME/executor" ]; then
                    rm -rf "$HOME/executor"
                    success_message "–î–∏—Ä–µ–∫—Ç–æ—Ä–∏—è $HOME/executor —É–¥–∞–ª–µ–Ω–∞"
                else
                    info_message "–î–∏—Ä–µ–∫—Ç–æ—Ä–∏—è $HOME/executor –Ω–µ –Ω–∞–π–¥–µ–Ω–∞"
                fi
                
                # –£–¥–∞–ª—è–µ–º –∞—Ä—Ö–∏–≤—ã, –µ—Å–ª–∏ –æ–Ω–∏ –µ—Å—Ç—å
                if ls "$HOME"/executor-linux-*.tar.gz 1> /dev/null 2>&1; then
                    rm -f "$HOME"/executor-linux-*.tar.gz
                    success_message "–ê—Ä—Ö–∏–≤—ã executor-linux-*.tar.gz —É–¥–∞–ª–µ–Ω—ã"
                fi
                
                echo -e "\n${WHITE}[${CYAN}3/3${WHITE}] ${GREEN}‚ûú ${WHITE}‚úÖ –ü—Ä–æ–≤–µ—Ä–∫–∞ –∑–∞–≤–µ—Ä—à–µ–Ω–∏—è —É–¥–∞–ª–µ–Ω–∏—è...${NC}"
                # –§–∏–Ω–∞–ª—å–Ω–∞—è –ø—Ä–æ–≤–µ—Ä–∫–∞
                if [ ! -d "$HOME/t3rn" ] && [ ! -d "$HOME/executor" ] && ! pgrep -f "executor" > /dev/null; then
                    echo -e "\n${GREEN}‚úÖ –ù–æ–¥–∞ T3RN –∏ –≤—Å–µ —Å–≤—è–∑–∞–Ω–Ω—ã–µ —Å –Ω–µ–π —Ñ–∞–π–ª—ã —É—Å–ø–µ—à–Ω–æ —É–¥–∞–ª–µ–Ω—ã!${NC}"
                else
                    warning_message "–ù–µ–∫–æ—Ç–æ—Ä—ã–µ –∫–æ–º–ø–æ–Ω–µ–Ω—Ç—ã –Ω–æ–¥—ã –º–æ–≥–ª–∏ –æ—Å—Ç–∞—Ç—å—Å—è –≤ —Å–∏—Å—Ç–µ–º–µ. –†–µ–∫–æ–º–µ–Ω–¥—É–µ—Ç—Å—è –ø–µ—Ä–µ–∑–∞–≥—Ä—É–∑–∫–∞."
                fi
                
                echo -e "\n${ORANGE}–ù–∞–∂–º–∏—Ç–µ Enter, —á—Ç–æ–±—ã –≤–µ—Ä–Ω—É—Ç—å—Å—è –≤ –≥–ª–∞–≤–Ω–æ–µ –º–µ–Ω—é...${NC}"
                read -s
                return_to_main=true
                ;;
                
            2)
                info_message "–í–æ–∑–≤—Ä–∞—â–∞–µ–º—Å—è –≤ –≥–ª–∞–≤–Ω–æ–µ –º–µ–Ω—é"
                return_to_main=true
                ;;
                
            *)
                error_message "–ù–µ–≤–µ—Ä–Ω—ã–π –≤—ã–±–æ—Ä. –ü–æ–∂–∞–ª—É–π—Å—Ç–∞, –≤–≤–µ–¥–∏—Ç–µ 1 –∏–ª–∏ 2."
                sleep 2
                    ;;
            esac
        done
    
    return 0
}

# –§—É–Ω–∫—Ü–∏—è –¥–ª—è –ø—Ä–æ–≤–µ—Ä–∫–∏ –ª–æ–≥–æ–≤
check_logs() {
    # –°–±—Ä–∞—Å—ã–≤–∞–µ–º –≤—Å–µ –ø—Ä–µ–¥—ã–¥—É—â–∏–µ –ª–æ–≤—É—à–∫–∏
    trap - INT
    
    local return_to_main=false
    
    while [ "$return_to_main" = false ]; do
        clear
        echo -e "\n${BOLD}${BLUE}üìã –ü—Ä–æ—Å–º–æ—Ç—Ä –ª–æ–≥–æ–≤ –Ω–æ–¥—ã T3RN...${NC}\n"
        
        # –ü—Ä–æ–≤–µ—Ä–∫–∞ –Ω–∞–ª–∏—á–∏—è —É—Å—Ç–∞–Ω–æ–≤–ª–µ–Ω–Ω–æ–π –Ω–æ–¥—ã
        if [ ! -f "$HOME/t3rn/executor/executor/bin/executor" ]; then
            error_message "–ù–æ–¥–∞ –Ω–µ —É—Å—Ç–∞–Ω–æ–≤–ª–µ–Ω–∞. –°–Ω–∞—á–∞–ª–∞ –≤—ã–ø–æ–ª–Ω–∏—Ç–µ —É—Å—Ç–∞–Ω–æ–≤–∫—É."
            sleep 2
            return 1
        fi
        
        # –£—Å—Ç–∞–Ω–∞–≤–ª–∏–≤–∞–µ–º –ø—É—Ç–∏ –∫ –ª–æ–≥-—Ñ–∞–π–ª–∞–º
        SETUP_LOG="$HOME/t3rn/setup.log"
        NODE_LOG="$HOME/t3rn/node.log"
        
        # –ü—Ä–æ–≤–µ—Ä—è–µ–º —Å—É—â–µ—Å—Ç–≤–æ–≤–∞–Ω–∏–µ –ª–æ–≥-—Ñ–∞–π–ª–æ–≤
        if [ ! -f "$SETUP_LOG" ] && [ ! -f "$NODE_LOG" ]; then
            error_message "–§–∞–π–ª—ã –ª–æ–≥–æ–≤ –Ω–µ –Ω–∞–π–¥–µ–Ω—ã"
            sleep 2
            return 1
        fi
    
        # –ü–æ–¥–º–µ–Ω—é –¥–ª—è —Ä–∞–±–æ—Ç—ã —Å –ª–æ–≥–∞–º–∏
        echo -e "${BOLD}${BLUE}–í—ã–±–µ—Ä–∏—Ç–µ –¥–µ–π—Å—Ç–≤–∏–µ:${NC}\n"
        echo -e "${WHITE}[${CYAN}1${WHITE}] ${GREEN}‚ûú ${WHITE}üìÑ –ü—Ä–æ—Å–º–æ—Ç—Ä –ª–æ–≥–æ–≤ —É—Å—Ç–∞–Ω–æ–≤–∫–∏ –∏ –Ω–∞—Å—Ç—Ä–æ–π–∫–∏${NC}"
        echo -e "${WHITE}[${CYAN}2${WHITE}] ${GREEN}‚ûú ${WHITE}üìÉ –ü—Ä–æ—Å–º–æ—Ç—Ä –ª–æ–≥–æ–≤ —Ä–∞–±–æ—Ç—ã –Ω–æ–¥—ã${NC}"
        echo -e "${WHITE}[${CYAN}3${WHITE}] ${GREEN}‚ûú ${WHITE}üîô –í–µ—Ä–Ω—É—Ç—å—Å—è –≤ –≥–ª–∞–≤–Ω–æ–µ –º–µ–Ω—é${NC}\n"
        
        read -p "$(echo -e "${GREEN}–í–≤–µ–¥–∏—Ç–µ –Ω–æ–º–µ—Ä –¥–µ–π—Å—Ç–≤–∏—è [1-3]:${NC} ")" log_choice
        
        case $log_choice in
            1)
                if [ ! -f "$SETUP_LOG" ]; then
                    error_message "–§–∞–π–ª –ª–æ–≥–æ–≤ —É—Å—Ç–∞–Ω–æ–≤–∫–∏ –Ω–µ –Ω–∞–π–¥–µ–Ω"
                    sleep 2
                    continue
                fi
                
                # –ò–Ω—Ñ–æ—Ä–º–∞—Ü–∏—è –æ –≤–æ–∑–≤—Ä–∞—Ç–µ –≤ –º–µ–Ω—é
                echo -e "\n${PURPLE}‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê${NC}"
                echo -e "${YELLOW}‚ÑπÔ∏è –ß—Ç–æ–±—ã –≤–µ—Ä–Ω—É—Ç—å—Å—è –≤ –º–µ–Ω—é, –Ω–∞–∂–º–∏—Ç–µ CTRL+C${NC}"
                echo -e "${PURPLE}‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê${NC}\n"
                
                # –ü–∞—É–∑–∞ –ø–µ—Ä–µ–¥ –ø–æ–∫–∞–∑–æ–º –ª–æ–≥–æ–≤
                echo -e "${CYAN}–ù–∞—á–∏–Ω–∞–µ–º –ø—Ä–æ—Å–º–æ—Ç—Ä –ª–æ–≥–æ–≤ —É—Å—Ç–∞–Ω–æ–≤–∫–∏ —á–µ—Ä–µ–∑ 5 —Å–µ–∫—É–Ω–¥...${NC}"
                for i in {5..1}; do
                    echo -ne "${ORANGE}$i...${NC}"
                    sleep 1
                done
                echo -e "\n"
                
                echo -e "${CYAN}–ü–æ—Å–ª–µ–¥–Ω–∏–µ 25 —Å—Ç—Ä–æ–∫ –ª–æ–≥–∞ —É—Å—Ç–∞–Ω–æ–≤–∫–∏:${NC}\n"
                tail -n 25 "$SETUP_LOG"
                
                echo -e "\n${PURPLE}‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê${NC}"
                echo -e "${YELLOW}–î–ª—è –ø—Ä–æ—Å–º–æ—Ç—Ä–∞ –ø–æ–ª–Ω–æ–≥–æ –ª–æ–≥–∞ –∏—Å–ø–æ–ª—å–∑—É–π—Ç–µ:${NC}"
                echo -e "${CYAN}cat $SETUP_LOG${NC}"
                echo -e "${PURPLE}‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê${NC}\n"
                
                # –°–ø—Ä–∞—à–∏–≤–∞–µ–º, —Ö–æ—á–µ—Ç –ª–∏ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å –ø—Ä–æ–¥–æ–ª–∂–∏—Ç—å –º–æ–Ω–∏—Ç–æ—Ä–∏–Ω–≥
                echo -e "${ORANGE}–•–æ—Ç–∏—Ç–µ —Å–ª–µ–¥–∏—Ç—å –∑–∞ –æ–±–Ω–æ–≤–ª–µ–Ω–∏–µ–º –ª–æ–≥–æ–≤ —É—Å—Ç–∞–Ω–æ–≤–∫–∏? (y/n)${NC}"
                read -p "‚ûú " monitor_choice
                
                if [[ "$monitor_choice" =~ ^[Yy]$ ]]; then
                    echo -e "${ORANGE}–°–ª–µ–¥–∏–º –∑–∞ –æ–±–Ω–æ–≤–ª–µ–Ω–∏–µ–º –ª–æ–≥–æ–≤. –î–ª—è –≤—ã—Ö–æ–¥–∞ –Ω–∞–∂–º–∏—Ç–µ CTRL+C...${NC}\n"
                    # –£—Å—Ç–∞–Ω–∞–≤–ª–∏–≤–∞–µ–º –ª–æ–≤—É—à–∫—É –¥–ª—è –≤–æ–∑–≤—Ä–∞—Ç–∞ –≤ –º–µ–Ω—é –ª–æ–≥–æ–≤ –ø—Ä–∏ –Ω–∞–∂–∞—Ç–∏–∏ CTRL+C
                    watch_logs=true
                    trap 'watch_logs=false' INT
                    
                    # –ò—Å–ø–æ–ª—å–∑—É–µ–º —Ü–∏–∫–ª –≤–º–µ—Å—Ç–æ –ø—Ä–æ—Å—Ç–æ–≥–æ tail -f –¥–ª—è –≤–æ–∑–º–æ–∂–Ω–æ—Å—Ç–∏ –≤—ã—Ö–æ–¥–∞
                    while $watch_logs; do
                        # –ß–∏—Ç–∞–µ–º –ø–æ—Å–ª–µ–¥–Ω–∏–µ 10 —Å—Ç—Ä–æ–∫ —Å –∏–Ω—Ç–µ—Ä–≤–∞–ª–æ–º –≤ 1 —Å–µ–∫—É–Ω–¥—É
                        tail -n 10 "$SETUP_LOG"
                        sleep 1
                        # –û—á–∏—â–∞–µ–º —ç–∫—Ä–∞–Ω —Ç–æ–ª—å–∫–æ –µ—Å–ª–∏ –≤—Å–µ –µ—â–µ —Å–ª–µ–¥–∏–º –∑–∞ –ª–æ–≥–∞–º–∏
                        if $watch_logs; then
                            echo -e "\n${CYAN}--- –û–±–Ω–æ–≤–ª–µ–Ω–∏–µ –ª–æ–≥–æ–≤ (–ù–∞–∂–º–∏—Ç–µ CTRL+C –¥–ª—è –≤—ã—Ö–æ–¥–∞) ---${NC}\n"
                        fi
                    done
                    # –°–±—Ä–∞—Å—ã–≤–∞–µ–º –ª–æ–≤—É—à–∫—É –∏ –ø–æ–∫–∞–∑—ã–≤–∞–µ–º —Å–æ–æ–±—â–µ–Ω–∏–µ
                    trap - INT
                    echo -e "\n${GREEN}–í–æ–∑–≤—Ä–∞—â–∞–µ–º—Å—è –≤ –º–µ–Ω—é –ª–æ–≥–æ–≤...${NC}"
                    sleep 2
                fi
                ;;
                
            2)
                if [ ! -f "$NODE_LOG" ]; then
                    error_message "–§–∞–π–ª –ª–æ–≥–æ–≤ —Ä–∞–±–æ—Ç—ã –Ω–æ–¥—ã –Ω–µ –Ω–∞–π–¥–µ–Ω"
                    sleep 2
                    continue
                fi
                
                # –ò–Ω—Ñ–æ—Ä–º–∞—Ü–∏—è –æ –≤–æ–∑–≤—Ä–∞—Ç–µ –≤ –º–µ–Ω—é
                echo -e "\n${PURPLE}‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê${NC}"
                echo -e "${YELLOW}‚ÑπÔ∏è –ß—Ç–æ–±—ã –≤–µ—Ä–Ω—É—Ç—å—Å—è –≤ –º–µ–Ω—é, –Ω–∞–∂–º–∏—Ç–µ CTRL+C${NC}"
                echo -e "${PURPLE}‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê${NC}\n"
                
                # –ü–∞—É–∑–∞ –ø–µ—Ä–µ–¥ –ø–æ–∫–∞–∑–æ–º –ª–æ–≥–æ–≤
                echo -e "${CYAN}–ù–∞—á–∏–Ω–∞–µ–º –ø—Ä–æ—Å–º–æ—Ç—Ä –ª–æ–≥–æ–≤ —Ä–∞–±–æ—Ç—ã –Ω–æ–¥—ã —á–µ—Ä–µ–∑ 5 —Å–µ–∫—É–Ω–¥...${NC}"
                for i in {5..1}; do
                    echo -ne "${ORANGE}$i...${NC}"
                    sleep 1
                done
                echo -e "\n"
                
                echo -e "${CYAN}–ü–æ—Å–ª–µ–¥–Ω–∏–µ 25 —Å—Ç—Ä–æ–∫ –ª–æ–≥–∞ —Ä–∞–±–æ—Ç—ã –Ω–æ–¥—ã:${NC}\n"
                tail -n 25 "$NODE_LOG"
                
                echo -e "\n${PURPLE}‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê${NC}"
                echo -e "${YELLOW}–î–ª—è –ø—Ä–æ—Å–º–æ—Ç—Ä–∞ –ø–æ–ª–Ω–æ–≥–æ –ª–æ–≥–∞ –∏—Å–ø–æ–ª—å–∑—É–π—Ç–µ:${NC}"
                echo -e "${CYAN}cat $NODE_LOG${NC}"
                echo -e "${PURPLE}‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê${NC}\n"
                
                # –°–ø—Ä–∞—à–∏–≤–∞–µ–º, —Ö–æ—á–µ—Ç –ª–∏ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å –ø—Ä–æ–¥–æ–ª–∂–∏—Ç—å –º–æ–Ω–∏—Ç–æ—Ä–∏–Ω–≥
                echo -e "${ORANGE}–•–æ—Ç–∏—Ç–µ —Å–ª–µ–¥–∏—Ç—å –∑–∞ –æ–±–Ω–æ–≤–ª–µ–Ω–∏–µ–º –ª–æ–≥–æ–≤ —Ä–∞–±–æ—Ç—ã –Ω–æ–¥—ã? (y/n)${NC}"
                read -p "‚ûú " monitor_choice
                
                if [[ "$monitor_choice" =~ ^[Yy]$ ]]; then
                    echo -e "${ORANGE}–°–ª–µ–¥–∏–º –∑–∞ –æ–±–Ω–æ–≤–ª–µ–Ω–∏–µ–º –ª–æ–≥–æ–≤. –î–ª—è –≤—ã—Ö–æ–¥–∞ –Ω–∞–∂–º–∏—Ç–µ CTRL+C...${NC}\n"
                    # –£—Å—Ç–∞–Ω–∞–≤–ª–∏–≤–∞–µ–º –ª–æ–≤—É—à–∫—É –¥–ª—è –≤–æ–∑–≤—Ä–∞—Ç–∞ –≤ –º–µ–Ω—é –ª–æ–≥–æ–≤ –ø—Ä–∏ –Ω–∞–∂–∞—Ç–∏–∏ CTRL+C
                    watch_logs=true
                    trap 'watch_logs=false' INT
                    
                    # –ò—Å–ø–æ–ª—å–∑—É–µ–º —Ü–∏–∫–ª –≤–º–µ—Å—Ç–æ –ø—Ä–æ—Å—Ç–æ–≥–æ tail -f –¥–ª—è –≤–æ–∑–º–æ–∂–Ω–æ—Å—Ç–∏ –≤—ã—Ö–æ–¥–∞
                    while $watch_logs; do
                        # –ß–∏—Ç–∞–µ–º –ø–æ—Å–ª–µ–¥–Ω–∏–µ 10 —Å—Ç—Ä–æ–∫ —Å –∏–Ω—Ç–µ—Ä–≤–∞–ª–æ–º –≤ 1 —Å–µ–∫—É–Ω–¥—É
                        tail -n 10 "$NODE_LOG"
                        sleep 1
                        # –û—á–∏—â–∞–µ–º —ç–∫—Ä–∞–Ω —Ç–æ–ª—å–∫–æ –µ—Å–ª–∏ –≤—Å–µ –µ—â–µ —Å–ª–µ–¥–∏–º –∑–∞ –ª–æ–≥–∞–º–∏
                        if $watch_logs; then
                            echo -e "\n${CYAN}--- –û–±–Ω–æ–≤–ª–µ–Ω–∏–µ –ª–æ–≥–æ–≤ (–ù–∞–∂–º–∏—Ç–µ CTRL+C –¥–ª—è –≤—ã—Ö–æ–¥–∞) ---${NC}\n"
                        fi
                    done
                    # –°–±—Ä–∞—Å—ã–≤–∞–µ–º –ª–æ–≤—É—à–∫—É –∏ –ø–æ–∫–∞–∑—ã–≤–∞–µ–º —Å–æ–æ–±—â–µ–Ω–∏–µ
                    trap - INT
                    echo -e "\n${GREEN}–í–æ–∑–≤—Ä–∞—â–∞–µ–º—Å—è –≤ –º–µ–Ω—é –ª–æ–≥–æ–≤...${NC}"
                    sleep 2
                fi
                ;;
                
            3)
                return_to_main=true
                ;;
                
            *)
                error_message "–ù–µ–≤–µ—Ä–Ω—ã–π –≤—ã–±–æ—Ä. –ü–æ–∂–∞–ª—É–π—Å—Ç–∞, –≤–≤–µ–¥–∏—Ç–µ –Ω–æ–º–µ—Ä –æ—Ç 1 –¥–æ 3."
                sleep 2
                ;;
        esac
    done
    
    return 0
}

# –û—Å–Ω–æ–≤–Ω–æ–π —Ü–∏–∫–ª –ø—Ä–æ–≥—Ä–∞–º–º—ã
main() {
    echo -e "${BLUE}${BOLD}T3RN Node Installer${NC}"
    echo -e "${ORANGE}================${NC}"
    
    while true; do
        clear
        display_logo
        print_menu
        
        read -p "‚ûú " choice
        
        case $choice in
            1)
                setup_node
                ;;
            2)
                install_specific_version
                ;;
            3)
                check_logs
                ;;
            4)
                manage_rpc
                ;;
            5)
                manage_gas
                ;;
            6)
                update_node
                ;;
            7)
                remove_node
                ;;
            8)
                echo -e "${GREEN}–í—ã—Ö–æ–¥ –∏–∑ –ø—Ä–æ–≥—Ä–∞–º–º—ã. –î–æ —Å–≤–∏–¥–∞–Ω–∏—è!${NC}"
                break
                ;;
            *)
                error_message "–ù–µ–≤–µ—Ä–Ω—ã–π –≤—ã–±–æ—Ä. –ü–æ–∂–∞–ª—É–π—Å—Ç–∞, –≤—ã–±–µ—Ä–∏—Ç–µ –æ–ø—Ü–∏—é –æ—Ç 1 –¥–æ 8."
                ;;
        esac
        
        echo -e "\n${ORANGE}–ù–∞–∂–º–∏—Ç–µ Enter, —á—Ç–æ–±—ã –≤–µ—Ä–Ω—É—Ç—å—Å—è –≤ –º–µ–Ω—é...${NC}"
        read -s
    done
}

# –ó–∞–ø—É—Å–∫ –æ—Å–Ω–æ–≤–Ω–æ–≥–æ —Ü–∏–∫–ª–∞, –µ—Å–ª–∏ —Å–∫—Ä–∏–ø—Ç –∑–∞–ø—É—â–µ–Ω –Ω–∞–ø—Ä—è–º—É—é
# –∏–ª–∏ –≤—ã–ø–æ–ª–Ω–µ–Ω–∏–µ —Ñ—É–Ω–∫—Ü–∏–π –∏–∑ –∫–æ–º–∞–Ω–¥–Ω–æ–π —Å—Ç—Ä–æ–∫–∏, –µ—Å–ª–∏ –ø–µ—Ä–µ–¥–∞–Ω—ã –∞—Ä–≥—É–º–µ–Ω—Ç—ã
if [[ $# -eq 0 ]]; then
    main
else
    # –†–∞–∑–±–æ—Ä –∞—Ä–≥—É–º–µ–Ω—Ç–æ–≤ –∫–æ–º–∞–Ω–¥–Ω–æ–π —Å—Ç—Ä–æ–∫–∏
    VERBOSE=false
    DRY_RUN=false
    for arg in "$@"; do
        case "$arg" in
            --verbose)
                VERBOSE=true
                ;;
            --dry-run)
                DRY_RUN=true
                ;;
            --help)
                usage
                ;;
            *)
                echo -e "${RED}–ù–µ–∏–∑–≤–µ—Å—Ç–Ω—ã–π –∞—Ä–≥—É–º–µ–Ω—Ç: $arg${NC}"
                usage
                ;;
        esac
    done
    
    # –£—Å—Ç–∞–Ω–æ–≤–∫–∞ jq
    install_jq_if_needed
    
    # –í–∫–ª—é—á–µ–Ω–∏–µ –ø–æ–¥—Ä–æ–±–Ω–æ–≥–æ —Ä–µ–∂–∏–º–∞, –µ—Å–ª–∏ –∑–∞–ø—Ä–æ—à–µ–Ω–æ
    if $VERBOSE; then
        set -x
    fi
    
    # –°–æ–æ–±—â–µ–Ω–∏–µ –æ —Ä–µ–∂–∏–º–µ dry-run
if $DRY_RUN; then
        echo -e "${ORANGE}–†–µ–∂–∏–º dry-run –≤–∫–ª—é—á–µ–Ω. –ò–∑–º–µ–Ω–µ–Ω–∏—è –Ω–µ –±—É–¥—É—Ç –≤–Ω–µ—Å–µ–Ω—ã.${NC}"
    fi
    
    # –ó–∞–ø—É—Å–∫ —É—Å—Ç–∞–Ω–æ–≤–∫–∏
    setup_node
fi
