#!/bin/bash

# –¶–≤–µ—Ç–æ–≤—ã–µ –∫–æ–¥—ã –¥–ª—è –≤—ã–≤–æ–¥–∞ –≤ —Ç–µ—Ä–º–∏–Ω–∞–ª
COLOR_RED='\033[0;31m'
COLOR_GREEN='\033[0;32m'
COLOR_YELLOW='\033[1;33m'
COLOR_BLUE='\033[0;34m'
NC='\033[0m'

# –§—É–Ω–∫—Ü–∏—è –¥–ª—è –ø–µ—á–∞—Ç–∏ —Ü–≤–µ—Ç–Ω–æ–≥–æ —Ç–µ–∫—Å—Ç–∞
print_color() {
    local color=$1
    local text=$2
    echo -e "${color}${text}${NC}"
}

# –§—É–Ω–∫—Ü–∏—è –¥–ª—è –æ—Ç–æ–±—Ä–∞–∂–µ–Ω–∏—è –ª–æ–≥–æ—Ç–∏–ø–∞
display_logo() {
    curl -s https://raw.githubusercontent.com/Mozgiii9/NodeRunnerScripts/refs/heads/main/logo.sh | bash
}

# –§—É–Ω–∫—Ü–∏—è –¥–ª—è –∏–∑–º–µ–Ω–µ–Ω–∏—è Chain ID –≤ –∫–æ–Ω—Ñ–∏–≥—É—Ä–∞—Ü–∏–æ–Ω–Ω–æ–º —Ñ–∞–π–ª–µ mainnet
update_mainnet_chain_ids() {
    local config_path="$HOME/abstract-node/external-node/mainnet-external-node.yml"
    print_color "$COLOR_BLUE" "üîß –û–±–Ω–æ–≤–ª—è–µ–º Chain ID –≤ –∫–æ–Ω—Ñ–∏–≥—É—Ä–∞—Ü–∏–∏ mainnet..."
    
    # –ü—Ä–æ–≤–µ—Ä—è–µ–º —Å—É—â–µ—Å—Ç–≤–æ–≤–∞–Ω–∏–µ —Ñ–∞–π–ª–∞
    if [ ! -f "$config_path" ]; then
        print_color "$COLOR_RED" "‚ùå –§–∞–π–ª –∫–æ–Ω—Ñ–∏–≥—É—Ä–∞—Ü–∏–∏ –Ω–µ –Ω–∞–π–¥–µ–Ω: $config_path"
        return 1
    fi
    
    # –°–æ–∑–¥–∞–µ–º –≤—Ä–µ–º–µ–Ω–Ω—ã–π —Ñ–∞–π–ª
    local temp_file="${config_path}.tmp"
    
    # –ó–∞–º–µ–Ω—è–µ–º –∑–Ω–∞—á–µ–Ω–∏—è Chain ID
    sed -e 's/l1_chain_id: .*/l1_chain_id: 1/' \
        -e 's/l2_chain_id: .*/l2_chain_id: 2741/' \
        "$config_path" > "$temp_file"
    
    # –ü—Ä–æ–≤–µ—Ä—è–µ–º —É—Å–ø–µ—à–Ω–æ—Å—Ç—å –æ–ø–µ—Ä–∞—Ü–∏–∏
    if [ $? -eq 0 ]; then
        mv "$temp_file" "$config_path"
        print_color "$COLOR_GREEN" "‚úÖ Chain ID —É—Å–ø–µ—à–Ω–æ –æ–±–Ω–æ–≤–ª–µ–Ω—ã –≤ mainnet –∫–æ–Ω—Ñ–∏–≥—É—Ä–∞—Ü–∏–∏"
    else
        print_color "$COLOR_RED" "‚ùå –û—à–∏–±–∫–∞ –ø—Ä–∏ –æ–±–Ω–æ–≤–ª–µ–Ω–∏–∏ Chain ID"
        rm -f "$temp_file"
        return 1
    fi
}

# –§—É–Ω–∫—Ü–∏—è –ø—Ä–æ–≤–µ—Ä–∫–∏ —É—Å—Ç–∞–Ω–æ–≤–∫–∏ Docker
check_docker() {
    if ! command -v docker &> /dev/null; then
        print_color "$COLOR_RED" "üîç Docker –Ω–µ —É—Å—Ç–∞–Ω–æ–≤–ª–µ–Ω. –£—Å—Ç–∞–Ω–∞–≤–ª–∏–≤–∞–µ–º Docker..."
        curl -fsSL https://get.docker.com -o get-docker.sh
        sudo sh get-docker.sh
        sudo systemctl enable docker
        sudo systemctl start docker
    else
        print_color "$COLOR_GREEN" "‚úÖ Docker —É–∂–µ —É—Å—Ç–∞–Ω–æ–≤–ª–µ–Ω"
    fi
}

# –§—É–Ω–∫—Ü–∏—è –ø—Ä–æ–≤–µ—Ä–∫–∏ —É—Å—Ç–∞–Ω–æ–≤–∫–∏ Docker Compose
check_docker_compose() {
    if ! command -v docker compose &> /dev/null; then
        print_color "$COLOR_RED" "üîç Docker Compose –Ω–µ —É—Å—Ç–∞–Ω–æ–≤–ª–µ–Ω. –£—Å—Ç–∞–Ω–∞–≤–ª–∏–≤–∞–µ–º Docker Compose..."
        sudo apt update
        sudo apt install -y docker-compose-plugin
    else
        print_color "$COLOR_GREEN" "‚úÖ Docker Compose —É–∂–µ —É—Å—Ç–∞–Ω–æ–≤–ª–µ–Ω"
    fi
}

# –§—É–Ω–∫—Ü–∏—è —É—Å—Ç–∞–Ω–æ–≤–∫–∏ –Ω–æ–¥—ã Abstract
install_node() {
    local network=$1
    
    print_color "$COLOR_BLUE" "üì• –ö–ª–æ–Ω–∏—Ä—É–µ–º —Ä–µ–ø–æ–∑–∏—Ç–æ—Ä–∏–π..."
    git clone https://github.com/Abstract-Foundation/abstract-node
    cd abstract-node/external-node
    
    if [ "$network" == "testnet" ]; then
        print_color "$COLOR_BLUE" "üöÄ –ó–∞–ø—É—Å–∫–∞–µ–º testnet –Ω–æ–¥—É..."
        docker compose -f testnet-external-node.yml up -d
    else
        update_mainnet_chain_ids
        print_color "$COLOR_BLUE" "üöÄ –ó–∞–ø—É—Å–∫–∞–µ–º mainnet –Ω–æ–¥—É..."
        docker compose -f mainnet-external-node.yml up -d
    fi
    
    print_color "$COLOR_GREEN" "‚úÖ –£—Å—Ç–∞–Ω–æ–≤–∫–∞ –Ω–æ–¥—ã –∑–∞–≤–µ—Ä—à–µ–Ω–∞!"
}

# –§—É–Ω–∫—Ü–∏—è –ø—Ä–æ—Å–º–æ—Ç—Ä–∞ –ª–æ–≥–æ–≤ –∫–æ–Ω—Ç–µ–π–Ω–µ—Ä–∞
check_logs() {
    echo "üìã –î–æ—Å—Ç—É–ø–Ω—ã–µ –∫–æ–Ω—Ç–µ–π–Ω–µ—Ä—ã:"
    docker ps --format "{{.Names}}"
    echo
    read -p "–í–≤–µ–¥–∏—Ç–µ –∏–º—è –∫–æ–Ω—Ç–µ–π–Ω–µ—Ä–∞ –¥–ª—è –ø—Ä–æ—Å–º–æ—Ç—Ä–∞ –ª–æ–≥–æ–≤: " container_name
    
    if [ -n "$container_name" ]; then
        docker logs -f --tail=100 "$container_name"
    else
        print_color "$COLOR_RED" "‚ùå –ò–º—è –∫–æ–Ω—Ç–µ–π–Ω–µ—Ä–∞ –Ω–µ —É–∫–∞–∑–∞–Ω–æ"
    fi
}

# –§—É–Ω–∫—Ü–∏—è —Å–±—Ä–æ—Å–∞ —Å–æ—Å—Ç–æ—è–Ω–∏—è –Ω–æ–¥—ã
reset_node() {
    local network=$1
    
    print_color "$COLOR_YELLOW" "üîÑ –°–±—Ä–∞—Å—ã–≤–∞–µ–º —Å–æ—Å—Ç–æ—è–Ω–∏–µ –Ω–æ–¥—ã..."
    cd ~/abstract-node/external-node
    if [ "$network" == "testnet" ]; then
        docker compose -f testnet-external-node.yml down --volumes
    else
        docker compose -f mainnet-external-node.yml down --volumes
    fi
    
    print_color "$COLOR_GREEN" "‚úÖ –°–±—Ä–æ—Å –Ω–æ–¥—ã –∑–∞–≤–µ—Ä—à–µ–Ω!"
}

# –§—É–Ω–∫—Ü–∏—è –ø–µ—Ä–µ–∑–∞–ø—É—Å–∫–∞ –∫–æ–Ω—Ç–µ–π–Ω–µ—Ä–∞
restart_container() {
    echo "üìã –î–æ—Å—Ç—É–ø–Ω—ã–µ –∫–æ–Ω—Ç–µ–π–Ω–µ—Ä—ã:"
    docker ps --format "{{.Names}}"
    echo
    read -p "–í–≤–µ–¥–∏—Ç–µ –∏–º—è –∫–æ–Ω—Ç–µ–π–Ω–µ—Ä–∞ –¥–ª—è –ø–µ—Ä–µ–∑–∞–ø—É—Å–∫–∞: " container_name
    
    if [ -n "$container_name" ]; then
        print_color "$COLOR_YELLOW" "üîÑ –ü–µ—Ä–µ–∑–∞–ø—É—Å–∫–∞–µ–º –∫–æ–Ω—Ç–µ–π–Ω–µ—Ä $container_name..."
        docker restart "$container_name"
        print_color "$COLOR_GREEN" "‚úÖ –ö–æ–Ω—Ç–µ–π–Ω–µ—Ä —É—Å–ø–µ—à–Ω–æ –ø–µ—Ä–µ–∑–∞–ø—É—â–µ–Ω!"
    else
        print_color "$COLOR_RED" "‚ùå –ò–º—è –∫–æ–Ω—Ç–µ–π–Ω–µ—Ä–∞ –Ω–µ —É–∫–∞–∑–∞–Ω–æ"
    fi
}

# –§—É–Ω–∫—Ü–∏—è –ø–æ–ª–Ω–æ–≥–æ —É–¥–∞–ª–µ–Ω–∏—è –Ω–æ–¥—ã
remove_node() {
    print_color "$COLOR_YELLOW" "‚ö†Ô∏è –í–Ω–∏–º–∞–Ω–∏–µ! –≠—Ç–æ –¥–µ–π—Å—Ç–≤–∏–µ —É–¥–∞–ª–∏—Ç –≤—Å–µ –∫–æ–Ω—Ç–µ–π–Ω–µ—Ä—ã –∏ –¥–∞–Ω–Ω—ã–µ –Ω–æ–¥—ã!"
    read -p "–í—ã —É–≤–µ—Ä–µ–Ω—ã, —á—Ç–æ —Ö–æ—Ç–∏—Ç–µ –ø—Ä–æ–¥–æ–ª–∂–∏—Ç—å? (y/n): " confirm
    
    if [ "$confirm" == "y" ] || [ "$confirm" == "Y" ]; then
        print_color "$COLOR_BLUE" "üóëÔ∏è –£–¥–∞–ª—è–µ–º –∫–æ–Ω—Ç–µ–π–Ω–µ—Ä—ã..."
        cd ~/abstract-node/external-node
        docker compose -f testnet-external-node.yml down --volumes
        docker compose -f mainnet-external-node.yml down --volumes
        
        print_color "$COLOR_BLUE" "üóëÔ∏è –£–¥–∞–ª—è–µ–º —Ñ–∞–π–ª—ã –Ω–æ–¥—ã..."
        cd ~/
        rm -rf abstract-node
        
        print_color "$COLOR_GREEN" "‚úÖ –ù–æ–¥–∞ —É—Å–ø–µ—à–Ω–æ —É–¥–∞–ª–µ–Ω–∞!"
    else
        print_color "$COLOR_YELLOW" "üõë –û–ø–µ—Ä–∞—Ü–∏—è –æ—Ç–º–µ–Ω–µ–Ω–∞"
    fi
}

# –ì–ª–∞–≤–Ω–æ–µ –º–µ–Ω—é —Å–∫—Ä–∏–ø—Ç–∞
main_menu() {
    while true; do
        clear
        display_logo
        echo
        print_color "$COLOR_BLUE" "=== üåü –ú–µ–Ω—é —É—Å—Ç–∞–Ω–æ–≤–∫–∏ –Ω–æ–¥—ã Abstract === "
        echo "1. üõ†Ô∏è  –£—Å—Ç–∞–Ω–æ–≤–∏—Ç—å –Ω–µ–æ–±—Ö–æ–¥–∏–º—ã–µ –∫–æ–º–ø–æ–Ω–µ–Ω—Ç—ã (Docker –∏ Docker Compose)"
        echo "2. üåê –£—Å—Ç–∞–Ω–æ–≤–∏—Ç—å Testnet –Ω–æ–¥—É"
        echo "3. üåç –£—Å—Ç–∞–Ω–æ–≤–∏—Ç—å Mainnet –Ω–æ–¥—É"
        echo "4. üìã –ü—Ä–æ—Å–º–æ—Ç—Ä –ª–æ–≥–æ–≤ –∫–æ–Ω—Ç–µ–π–Ω–µ—Ä–∞"
        echo "5. üîÑ –°–±—Ä–æ—Å–∏—Ç—å Testnet –Ω–æ–¥—É"
        echo "6. üîÑ –°–±—Ä–æ—Å–∏—Ç—å Mainnet –Ω–æ–¥—É"
        echo "7. üîÉ –ü–µ—Ä–µ–∑–∞–ø—É—Å—Ç–∏—Ç—å –∫–æ–Ω—Ç–µ–π–Ω–µ—Ä"
        echo "8. üóëÔ∏è  –£–¥–∞–ª–∏—Ç—å –Ω–æ–¥—É"
        echo "9. üö™ –í—ã—Ö–æ–¥"
        echo
        read -p "–í—ã–±–µ—Ä–∏—Ç–µ –æ–ø—Ü–∏—é (1-9): " choice
        
        case $choice in
            1)
                check_docker
                check_docker_compose
                read -p "–ù–∞–∂–º–∏—Ç–µ Enter –¥–ª—è –ø—Ä–æ–¥–æ–ª–∂–µ–Ω–∏—è..."
                ;;
            2)
                install_node "testnet"
                read -p "–ù–∞–∂–º–∏—Ç–µ Enter –¥–ª—è –ø—Ä–æ–¥–æ–ª–∂–µ–Ω–∏—è..."
                ;;
            3)
                install_node "mainnet"
                read -p "–ù–∞–∂–º–∏—Ç–µ Enter –¥–ª—è –ø—Ä–æ–¥–æ–ª–∂–µ–Ω–∏—è..."
                ;;
            4)
                check_logs
                read -p "–ù–∞–∂–º–∏—Ç–µ Enter –¥–ª—è –ø—Ä–æ–¥–æ–ª–∂–µ–Ω–∏—è..."
                ;;
            5)
                reset_node "testnet"
                read -p "–ù–∞–∂–º–∏—Ç–µ Enter –¥–ª—è –ø—Ä–æ–¥–æ–ª–∂–µ–Ω–∏—è..."
                ;;
            6)
                reset_node "mainnet"
                read -p "–ù–∞–∂–º–∏—Ç–µ Enter –¥–ª—è –ø—Ä–æ–¥–æ–ª–∂–µ–Ω–∏—è..."
                ;;
            7)
                restart_container
                read -p "–ù–∞–∂–º–∏—Ç–µ Enter –¥–ª—è –ø—Ä–æ–¥–æ–ª–∂–µ–Ω–∏—è..."
                ;;
            8)
                remove_node
                read -p "–ù–∞–∂–º–∏—Ç–µ Enter –¥–ª—è –ø—Ä–æ–¥–æ–ª–∂–µ–Ω–∏—è..."
                ;;
            9)
                print_color "$COLOR_GREEN" "üëã –°–ø–∞—Å–∏–±–æ –∑–∞ –∏—Å–ø–æ–ª—å–∑–æ–≤–∞–Ω–∏–µ —É—Å—Ç–∞–Ω–æ–≤—â–∏–∫–∞ Abstract Node!"
                exit 0
                ;;
            *)
                print_color "$COLOR_RED" "‚ùå –ù–µ–≤–µ—Ä–Ω–∞—è –æ–ø—Ü–∏—è. –ü–æ–ø—Ä–æ–±—É–π—Ç–µ —Å–Ω–æ–≤–∞."
                read -p "–ù–∞–∂–º–∏—Ç–µ Enter –¥–ª—è –ø—Ä–æ–¥–æ–ª–∂–µ–Ω–∏—è..."
                ;;
        esac
    done
}

# –ó–∞–ø—É—Å–∫ –≥–ª–∞–≤–Ω–æ–≥–æ –º–µ–Ω—é
main_menu
