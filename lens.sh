#!/bin/bash

# –û–ø—Ä–µ–¥–µ–ª–µ–Ω–∏–µ —Ü–≤–µ—Ç–æ–≤ –∏ –∏–∫–æ–Ω–æ–∫
GREEN='\033[0;32m'
RED='\033[0;31m'
YELLOW='\033[1;33m'
BLUE='\033[0;34m'
PURPLE='\033[0;35m'
CYAN='\033[0;36m'
MAGENTA='\033[0;35m'
NC='\033[0m'

# –ò–∫–æ–Ω–∫–∏
CHECKMARK="‚úÖ"
ERROR="‚ùå"
PROGRESS="‚è≥"
INSTALL="üì¶"
SUCCESS="üéâ"
WARNING="‚ö†Ô∏è"
NODE="üñ•Ô∏è"
INFO="‚ÑπÔ∏è"
TELEGRAM="üöÄ"
TOOL="üõ†Ô∏è"
TRASH="üóëÔ∏è"
UPDATE="üîÑ"
LOGS="üìÑ"
CONFIG="‚öôÔ∏è"
EXIT="üö™"

# –û–ø—Ä–µ–¥–µ–ª–µ–Ω–∏–µ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è –∏ –¥–∏—Ä–µ–∫—Ç–æ—Ä–∏–∏
CURRENT_USER=$(whoami)
HOME_DIR=$(eval echo "~$CURRENT_USER")
LENS_DIR="$HOME_DIR/lens-node"

# ASCII –∞—Ä—Ç –∏ –∑–∞–≥–æ–ª–æ–≤–æ–∫
display_ascii() {
    # –ü—Ä–æ–≤–µ—Ä–∫–∞ –Ω–∞–ª–∏—á–∏—è curl
    if ! command -v curl &> /dev/null; then
        echo -e "${ORANGE}–£—Å—Ç–∞–Ω–æ–≤–∫–∞ curl...${NC}"
        sudo apt update
        sudo apt install curl -y
    fi
    sleep 1

    # –ó–∞–≥—Ä—É–∑–∫–∞ –∏ –æ—Ç–æ–±—Ä–∞–∂–µ–Ω–∏–µ –ª–æ–≥–æ—Ç–∏–ø–∞
    curl -s https://raw.githubusercontent.com/Mozgiii9/NodeRunnerScripts/refs/heads/main/logo.sh | bash
}

# –§—É–Ω–∫—Ü–∏–∏ –æ—Ç—Ä–∏—Å–æ–≤–∫–∏ –≥—Ä–∞–Ω–∏—Ü –º–µ–Ω—é
draw_top_border() {
    echo -e "${BLUE}‚ïî‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïó${NC}"
}

draw_middle_border() {
    echo -e "${BLUE}‚ï†‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ï£${NC}"
}

draw_bottom_border() {
    echo -e "${BLUE}‚ïö‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïù${NC}"
}

# –§—É–Ω–∫—Ü–∏—è —É—Å—Ç–∞–Ω–æ–≤–∫–∏ Docker
install_docker() {
    echo -e "\n${INFO} –ü—Ä–æ–≤–µ—Ä–∫–∞ –Ω–∞–ª–∏—á–∏—è Docker..."
    if ! command -v docker &> /dev/null; then
        echo -e "${INSTALL} Docker –Ω–µ –Ω–∞–π–¥–µ–Ω. –£—Å—Ç–∞–Ω–æ–≤–∫–∞ Docker..."
        sudo apt-get update
        sudo apt-get install -y apt-transport-https ca-certificates curl software-properties-common
        curl -fsSL https://get.docker.com -o get-docker.sh
        sudo sh get-docker.sh
        sudo usermod -aG docker $CURRENT_USER
        echo -e "${CHECKMARK} Docker —É—Å—Ç–∞–Ω–æ–≤–ª–µ–Ω"
        echo -e "${WARNING} –¢—Ä–µ–±—É–µ—Ç—Å—è –ø–µ—Ä–µ–∑–∞–π—Ç–∏ –≤ —Å–∏—Å—Ç–µ–º—É –¥–ª—è –ø—Ä–∏–º–µ–Ω–µ–Ω–∏—è –∏–∑–º–µ–Ω–µ–Ω–∏–π –≥—Ä—É–ø–ø—ã docker"
        read -p "–ù–∞–∂–º–∏—Ç–µ Enter –¥–ª—è –ø—Ä–æ–¥–æ–ª–∂–µ–Ω–∏—è..."
        exec su -l $CURRENT_USER
    else
        echo -e "${CHECKMARK} Docker —É–∂–µ —É—Å—Ç–∞–Ω–æ–≤–ª–µ–Ω"
    fi

    echo -e "\n${INFO} –ù–∞—Å—Ç—Ä–æ–π–∫–∞ Docker Compose..."
    
    # –£–¥–∞–ª–µ–Ω–∏–µ —Å—Ç–∞—Ä—ã—Ö –≤–µ—Ä—Å–∏–π Docker Compose
    sudo rm -f /usr/local/bin/docker-compose
    sudo rm -f /usr/bin/docker-compose
    
    # –£—Å—Ç–∞–Ω–æ–≤–∫–∞ –Ω–æ–≤–æ–π –≤–µ—Ä—Å–∏–∏ Docker Compose
    echo -e "${INSTALL} –£—Å—Ç–∞–Ω–æ–≤–∫–∞ Docker Compose..."
    sudo apt-get update
    sudo apt-get remove -y docker-compose docker-compose-plugin
    sudo apt-get install -y docker-compose-plugin
    
    # –ü—Ä–æ–≤–µ—Ä–∫–∞ —É—Å—Ç–∞–Ω–æ–≤–∫–∏
    if docker compose version &>/dev/null; then
        echo -e "${CHECKMARK} Docker Compose —É—Å–ø–µ—à–Ω–æ –Ω–∞—Å—Ç—Ä–æ–µ–Ω"
    else
        echo -e "${ERROR} –û—à–∏–±–∫–∞ –Ω–∞—Å—Ç—Ä–æ–π–∫–∏ Docker Compose"
        exit 1
    fi
}

# –§—É–Ω–∫—Ü–∏—è –∫–ª–æ–Ω–∏—Ä–æ–≤–∞–Ω–∏—è —Ä–µ–ø–æ–∑–∏—Ç–æ—Ä–∏—è
clone_lens_node() {
    echo -e "\n${PROGRESS} –ö–ª–æ–Ω–∏—Ä–æ–≤–∞–Ω–∏–µ —Ä–µ–ø–æ–∑–∏—Ç–æ—Ä–∏—è Lens Node..."
    if [ -d "$LENS_DIR" ]; then
        echo -e "${WARNING} –î–∏—Ä–µ–∫—Ç–æ—Ä–∏—è lens-node —É–∂–µ —Å—É—â–µ—Å—Ç–≤—É–µ—Ç"
    else
        git clone https://github.com/lens-network/lens-node "$LENS_DIR" && cd "$LENS_DIR"
        echo -e "${CHECKMARK} –†–µ–ø–æ–∑–∏—Ç–æ—Ä–∏–π Lens Node —É—Å–ø–µ—à–Ω–æ –∫–ª–æ–Ω–∏—Ä–æ–≤–∞–Ω"
    fi
}

# –§—É–Ω–∫—Ü–∏—è –ø—Ä–æ–≤–µ—Ä–∫–∏ Docker Compose
check_docker_compose() {
    if ! docker compose version &>/dev/null; then
        echo -e "${ERROR} Docker Compose –Ω–µ –Ω–∞–π–¥–µ–Ω –∏–ª–∏ –Ω–µ–ø—Ä–∞–≤–∏–ª—å–Ω–æ –Ω–∞—Å—Ç—Ä–æ–µ–Ω"
        return 1
    fi
    return 0
}

# –§—É–Ω–∫—Ü–∏—è –∑–∞–ø—É—Å–∫–∞ –Ω–æ–¥—ã
start_lens_node() {
    echo -e "\n${PROGRESS} –ó–∞–ø—É—Å–∫ Lens Node..."
    
    # –ü—Ä–æ–≤–µ—Ä—è–µ–º Docker Compose
    if ! check_docker_compose; then
        echo -e "${ERROR} –ù–µ–≤–æ–∑–º–æ–∂–Ω–æ –∑–∞–ø—É—Å—Ç–∏—Ç—å –Ω–æ–¥—É –±–µ–∑ Docker Compose"
        return 1
    fi
    
    if [ -d "$LENS_DIR" ]; then
        cd "$LENS_DIR"
        echo -e "${INFO} –ó–∞–ø—É—Å–∫ –∫–æ–Ω—Ç–µ–π–Ω–µ—Ä–æ–≤..."
        if sudo docker compose -f testnet-external-node.yml up -d; then
            echo -e "${SUCCESS} Lens Node —É—Å–ø–µ—à–Ω–æ –∑–∞–ø—É—â–µ–Ω–∞"
        else
            echo -e "${ERROR} –û—à–∏–±–∫–∞ –ø—Ä–∏ –∑–∞–ø—É—Å–∫–µ Lens Node"
            return 1
        fi
    else
        echo -e "${ERROR} –î–∏—Ä–µ–∫—Ç–æ—Ä–∏—è lens-node –Ω–µ –Ω–∞–π–¥–µ–Ω–∞"
        return 1
    fi
}

# –§—É–Ω–∫—Ü–∏—è –æ—Å—Ç–∞–Ω–æ–≤–∫–∏ –Ω–æ–¥—ã
stop_lens_node() {
    echo -e "\n${PROGRESS} –û—Å—Ç–∞–Ω–æ–≤–∫–∞ Lens Node..."
    
    # –ü—Ä–æ–≤–µ—Ä—è–µ–º Docker Compose
    if ! check_docker_compose; then
        echo -e "${ERROR} –ù–µ–≤–æ–∑–º–æ–∂–Ω–æ –æ—Å—Ç–∞–Ω–æ–≤–∏—Ç—å –Ω–æ–¥—É –±–µ–∑ Docker Compose"
        return 1
    fi
    
    if [ -d "$LENS_DIR" ]; then
        cd "$LENS_DIR"
        echo -e "${INFO} –û—Å—Ç–∞–Ω–æ–≤–∫–∞ –∫–æ–Ω—Ç–µ–π–Ω–µ—Ä–æ–≤..."
        if sudo docker compose -f testnet-external-node.yml down; then
            echo -e "${SUCCESS} Lens Node —É—Å–ø–µ—à–Ω–æ –æ—Å—Ç–∞–Ω–æ–≤–ª–µ–Ω–∞"
        else
            echo -e "${ERROR} –û—à–∏–±–∫–∞ –ø—Ä–∏ –æ—Å—Ç–∞–Ω–æ–≤–∫–µ Lens Node"
            return 1
        fi
    else
        echo -e "${ERROR} –î–∏—Ä–µ–∫—Ç–æ—Ä–∏—è lens-node –Ω–µ –Ω–∞–π–¥–µ–Ω–∞"
        return 1
    fi
}

# –§—É–Ω–∫—Ü–∏—è –ø—Ä–æ—Å–º–æ—Ç—Ä–∞ –ª–æ–≥–æ–≤
view_lens_node_logs() {
    echo -e "\n${LOGS} –ü–æ—Å–ª–µ–¥–Ω–∏–µ 100 —Å—Ç—Ä–æ–∫ –ª–æ–≥–æ–≤ Lens Node..."
    docker logs -f --tail=100 lens-node-external-node-1
    echo -e "\n${INFO} –õ–æ–≥–∏ –≤—ã–≤–µ–¥–µ–Ω—ã"
}

# –§—É–Ω–∫—Ü–∏—è –ø—Ä–æ–≤–µ—Ä–∫–∏ —Å–æ—Å—Ç–æ—è–Ω–∏—è –Ω–æ–¥—ã
check_lens_node_health() {
    echo -e "\n${INFO} –ü—Ä–æ–≤–µ—Ä–∫–∞ —Å–æ—Å—Ç–æ—è–Ω–∏—è Lens Node..."
    if ! command -v jq &> /dev/null; then
        echo -e "${INSTALL} –£—Å—Ç–∞–Ω–æ–≤–∫–∞ jq..."
        sudo apt-get install -y jq
    fi
    
    response=$(curl -s http://localhost:3081/health)
    if [ $? -eq 0 ]; then
        echo "$response" | jq .
        echo -e "${CHECKMARK} Lens Node —Ä–∞–±–æ—Ç–∞–µ—Ç –Ω–æ—Ä–º–∞–ª—å–Ω–æ"
    else
        echo -e "${ERROR} Lens Node –Ω–µ –æ—Ç–≤–µ—á–∞–µ—Ç –∏–ª–∏ –Ω–µ–¥–æ—Å—Ç—É–ø–Ω–∞"
    fi
}

# –û—Å–Ω–æ–≤–Ω–æ–µ –º–µ–Ω—é
main_menu() {
    while true; do
        display_ascii
        draw_top_border
        echo -e "  ${SUCCESS}  ${GREEN}–î–æ–±—Ä–æ –ø–æ–∂–∞–ª–æ–≤–∞—Ç—å –≤ –º–∞—Å—Ç–µ—Ä —É—Å—Ç–∞–Ω–æ–≤–∫–∏ Lens Node!${NC}"
        echo -e "  ${INFO} –¢–µ–∫—É—â–∏–π –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å: ${CYAN}$CURRENT_USER${NC}"
        echo -e "  ${INFO} –†–∞–±–æ—á–∞—è –¥–∏—Ä–µ–∫—Ç–æ—Ä–∏—è: ${CYAN}$LENS_DIR${NC}"
        draw_middle_border
        echo -e "${CYAN}  1) –£—Å—Ç–∞–Ω–æ–≤–∏—Ç—å –∏ –∑–∞–ø—É—Å—Ç–∏—Ç—å –Ω–æ–¥—É ${INSTALL}${NC}"
        echo -e "${CYAN}  2) –û—Å—Ç–∞–Ω–æ–≤–∏—Ç—å –Ω–æ–¥—É ${TRASH}${NC}"
        echo -e "${CYAN}  3) –ü—Ä–æ—Å–º–æ—Ç—Ä –ª–æ–≥–æ–≤ ${LOGS}${NC}"
        echo -e "${CYAN}  4) –ü—Ä–æ–≤–µ—Ä–∏—Ç—å —Å–æ—Å—Ç–æ—è–Ω–∏–µ –Ω–æ–¥—ã ${CONFIG}${NC}"
        echo -e "${CYAN}  5) –í—ã—Ö–æ–¥ ${EXIT}${NC}"
        draw_bottom_border
        
        read -p "$(echo -e ${GREEN}–í—ã–±–µ—Ä–∏—Ç–µ –¥–µ–π—Å—Ç–≤–∏–µ:${NC} )" action

        case $action in
            1)
                install_docker
                clone_lens_node
                start_lens_node
                read -p "–ù–∞–∂–º–∏—Ç–µ Enter –¥–ª—è –≤–æ–∑–≤—Ä–∞—Ç–∞ –≤ –º–µ–Ω—é..." ;;
            2)
                stop_lens_node
                read -p "–ù–∞–∂–º–∏—Ç–µ Enter –¥–ª—è –≤–æ–∑–≤—Ä–∞—Ç–∞ –≤ –º–µ–Ω—é..." ;;
            3)
                view_lens_node_logs
                read -p "–ù–∞–∂–º–∏—Ç–µ Enter –¥–ª—è –≤–æ–∑–≤—Ä–∞—Ç–∞ –≤ –º–µ–Ω—é..." ;;
            4)
                check_lens_node_health
                read -p "–ù–∞–∂–º–∏—Ç–µ Enter –¥–ª—è –≤–æ–∑–≤—Ä–∞—Ç–∞ –≤ –º–µ–Ω—é..." ;;
            5)
                echo -e "${SUCCESS} –í—ã—Ö–æ–¥ –∏–∑ –ø—Ä–æ–≥—Ä–∞–º–º—ã..."
                exit 0
                ;;
            *)
                echo -e "${ERROR} –ù–µ–≤–µ—Ä–Ω—ã–π –≤—ã–±–æ—Ä. –ü–æ–ø—Ä–æ–±—É–π—Ç–µ —Å–Ω–æ–≤–∞."
                read -p "–ù–∞–∂–º–∏—Ç–µ Enter –¥–ª—è –≤–æ–∑–≤—Ä–∞—Ç–∞ –≤ –º–µ–Ω—é..." ;;
        esac
    done
}

# –ó–∞–ø—É—Å–∫ –æ—Å–Ω–æ–≤–Ω–æ–≥–æ –º–µ–Ω—é
main_menu
