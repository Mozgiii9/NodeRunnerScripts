import os
import sys
import inquirer

from inquirer.themes import GreenPassion
from art import text2art
from colorama import Fore
from loader import config

from rich.console import Console as RichConsole
from rich.panel import Panel
from rich.table import Table
from rich import box
from rich.text import Text
from rich.layout import Layout
from datetime import datetime

sys.path.append(os.path.realpath("."))


class Console:
    MODULES = (
        "üîê –†–µ–≥–∏—Å—Ç—Ä–∞—Ü–∏—è",
        "üå± –§–∞—Ä–º–∏–Ω–≥",
        "‚úÖ –í—ã–ø–æ–ª–Ω–µ–Ω–∏–µ –∑–∞–¥–∞–Ω–∏–π",
        "üîÑ –ü–æ–≤—Ç–æ—Ä–Ω–∞—è –≤–µ—Ä–∏—Ñ–∏–∫–∞—Ü–∏—è –∞–∫–∫–∞—É–Ω—Ç–æ–≤",
        "üìä –≠–∫—Å–ø–æ—Ä—Ç —Å—Ç–∞—Ç–∏—Å—Ç–∏–∫–∏",
        "üö™ –í—ã—Ö–æ–¥",
    )
    MODULES_DATA = {
        "üîê –†–µ–≥–∏—Å—Ç—Ä–∞—Ü–∏—è": "register",
        "üå± –§–∞—Ä–º–∏–Ω–≥": "farm",
        "üö™ –í—ã—Ö–æ–¥": "exit",
        "üìä –≠–∫—Å–ø–æ—Ä—Ç —Å—Ç–∞—Ç–∏—Å—Ç–∏–∫–∏": "export_stats",
        "‚úÖ –í—ã–ø–æ–ª–Ω–µ–Ω–∏–µ –∑–∞–¥–∞–Ω–∏–π": "complete_tasks",
        "üîÑ –ü–æ–≤—Ç–æ—Ä–Ω–∞—è –≤–µ—Ä–∏—Ñ–∏–∫–∞—Ü–∏—è –∞–∫–∫–∞—É–Ω—Ç–æ–≤": "re_verify_accounts",
    }

    def __init__(self):
        self.rich_console = RichConsole()
        self.layout = Layout()

    def show_dev_info(self):
        os.system("cls" if os.name == "nt" else "clear")

        title = text2art("NodeRunner", font="small")
        styled_title = Text(title, style="bold cyan")

        current_time = datetime.now().strftime("%H:%M:%S")
        status_text = Text.assemble(
            ("üïí ", "bold yellow"),
            (f"–í—Ä–µ–º—è: {current_time}\n", "bold white"),
            ("ü§ñ ", "bold blue"),
            ("–°—Ç–∞—Ç—É—Å: ", "bold white"),
            ("–ê–∫—Ç–∏–≤–µ–Ω", "bold green"),
        )

        dev_panel = Panel(
            Text.assemble(
                styled_title,
                "\n\n",
                status_text,
            ),
            border_style="cyan",
            expand=False,
            title="[bold green]üöÄ –î–æ–±—Ä–æ –ø–æ–∂–∞–ª–æ–≤–∞—Ç—å[/bold green]",
            subtitle="[bold blue]–í–µ—Ä—Å–∏—è 1.0[/bold blue]"
        )

        self.rich_console.print(dev_panel)
        print()

    @staticmethod
    def prompt(data: list):
        answers = inquirer.prompt(data, theme=GreenPassion())
        return answers

    def get_module(self):
        questions = [
            inquirer.List(
                "module",
                message=Fore.LIGHTBLACK_EX + "üìå –í—ã–±–µ—Ä–∏—Ç–µ –º–æ–¥—É–ª—å",
                choices=self.MODULES,
            ),
        ]

        answers = self.prompt(questions)
        return answers.get("module")

    def display_info(self):
        stats_table = Table(
            title="üìà –°—Ç–∞—Ç–∏—Å—Ç–∏–∫–∞",
            box=box.ROUNDED,
            border_style="cyan",
            header_style="bold magenta",
        )
        stats_table.add_column("üìä –ü–∞—Ä–∞–º–µ—Ç—Ä", style="cyan", justify="right")
        stats_table.add_column("üìã –ó–Ω–∞—á–µ–Ω–∏–µ", style="green")

        if config.redirect_settings.enabled:
            stats_table.add_row("üìß –†–µ–∂–∏–º –ø–µ—Ä–µ–Ω–∞–ø—Ä–∞–≤–ª–µ–Ω–∏—è", "‚úÖ –í–∫–ª—é—á–µ–Ω")
            stats_table.add_row("üì® Email –¥–ª—è –ø–µ—Ä–µ–Ω–∞–ø—Ä–∞–≤–ª–µ–Ω–∏—è", config.redirect_settings.email)

        stats_table.add_row("üë• –ê–∫–∫–∞—É–Ω—Ç–æ–≤ –¥–ª—è —Ä–µ–≥–∏—Å—Ç—Ä–∞—Ü–∏–∏", f"[bold blue]{str(len(config.accounts_to_register))}[/bold blue]")
        stats_table.add_row("üå± –ê–∫–∫–∞—É–Ω—Ç–æ–≤ –¥–ª—è —Ñ–∞—Ä–º–∏–Ω–≥–∞", f"[bold green]{str(len(config.accounts_to_farm))}[/bold green]")
        stats_table.add_row("üîÑ –ê–∫–∫–∞—É–Ω—Ç–æ–≤ –¥–ª—è –≤–µ—Ä–∏—Ñ–∏–∫–∞—Ü–∏–∏", f"[bold yellow]{str(len(config.accounts_to_reverify))}[/bold yellow]")
        stats_table.add_row("‚ö° –ü–æ—Ç–æ–∫–æ–≤", f"[bold cyan]{str(config.threads)}[/bold cyan]")
        stats_table.add_row(
            "‚è±Ô∏è –ó–∞–¥–µ—Ä–∂–∫–∞ –ø–µ—Ä–µ–¥ —Å—Ç–∞—Ä—Ç–æ–º",
            f"[bold red]{config.delay_before_start.min}[/bold red] - [bold red]{config.delay_before_start.max}[/bold red] —Å–µ–∫",
        )

        system_panel = Panel(
            stats_table,
            expand=False,
            border_style="green",
            title="[bold yellow]‚öôÔ∏è –°–∏—Å—Ç–µ–º–Ω–∞—è –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏—è[/bold yellow]",
            subtitle="[bold cyan]‚Üë‚Üì –ò—Å–ø–æ–ª—å–∑—É–π—Ç–µ —Å—Ç—Ä–µ–ª–∫–∏ –¥–ª—è –Ω–∞–≤–∏–≥–∞—Ü–∏–∏[/bold cyan]",
        )
        
        self.rich_console.print(system_panel)

    def build(self) -> None:
        self.show_dev_info()
        self.display_info()

        module = self.get_module()
        config.module = self.MODULES_DATA[module]

        if config.module == "exit":
            self.rich_console.print("[bold red]üëã –î–æ —Å–≤–∏–¥–∞–Ω–∏—è![/bold red]")
            exit(0)
