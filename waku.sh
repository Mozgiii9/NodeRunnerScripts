#!/bin/bash

# –û–ø—Ä–µ–¥–µ–ª–µ–Ω–∏–µ —Ü–≤–µ—Ç–æ–≤ –¥–ª—è —Ç–µ–∫—Å—Ç–∞
ORANGE='\033[0;33m'
TEAL='\033[0;36m'
LIME='\033[1;32m'
INDIGO='\033[0;34m'
MAGENTA='\033[0;35m'
WHITE='\033[1;37m'
CRIMSON='\033[0;31m'
RESET='\033[0m'

# –ü—Ä–æ–≤–µ—Ä–∫–∞ –Ω–∞–ª–∏—á–∏—è curl
if ! command -v curl &> /dev/null; then
    echo -e "${ORANGE}–£—Å—Ç–∞–Ω–æ–≤–∫–∞ curl...${RESET}"
    sudo apt update
    sudo apt install curl -y
fi
sleep 1

# –ó–∞–≥—Ä—É–∑–∫–∞ –∏ –æ—Ç–æ–±—Ä–∞–∂–µ–Ω–∏–µ –ª–æ–≥–æ—Ç–∏–ø–∞
curl -s https://raw.githubusercontent.com/Mozgiii9/NodeRunnerScripts/refs/heads/main/logo.sh | bash

# –ì–ª–∞–≤–Ω–æ–µ –º–µ–Ω—é
echo -e "\n${WHITE}‚ïî‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïó${RESET}"
echo -e "${WHITE}‚ïë        –ú–ï–ù–Æ –£–ü–†–ê–í–õ–ï–ù–ò–Ø         ‚ïë${RESET}"
echo -e "${WHITE}‚ïö‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïù${RESET}\n"

echo -e "${TEAL}[1]${RESET} ‚ûú –£—Å—Ç–∞–Ω–æ–≤–∫–∞ –Ω–æ–¥—ã"
echo -e "${TEAL}[2]${RESET} ‚ûú –û–±–Ω–æ–≤–ª–µ–Ω–∏–µ –Ω–æ–¥—ã"
echo -e "${TEAL}[3]${RESET} ‚ûú –ü—Ä–æ–≤–µ—Ä–∫–∞ –ª–æ–≥–æ–≤"
echo -e "${TEAL}[4]${RESET} ‚ûú –ó–∞–º–µ–Ω–∞ –ø–æ—Ä—Ç–æ–≤"
echo -e "${TEAL}[5]${RESET} ‚ûú –£–¥–∞–ª–µ–Ω–∏–µ –Ω–æ–¥—ã\n"

echo -e "${LIME}–í—ã–±–µ—Ä–∏—Ç–µ –æ–ø—Ü–∏—é (1-5):${RESET} "
read choice

case $choice in
    1)
        echo -e "\n${INDIGO}‚ñ∂Ô∏è –ù–∞—á–∏–Ω–∞–µ–º —É—Å—Ç–∞–Ω–æ–≤–∫—É Waku...${RESET}"

        # –û–±–Ω–æ–≤–ª–µ–Ω–∏–µ —Å–∏—Å—Ç–µ–º—ã
        echo -e "${TEAL}üì¶ –û–±–Ω–æ–≤–ª–µ–Ω–∏–µ —Å–∏—Å—Ç–µ–º–Ω—ã—Ö –ø–∞–∫–µ—Ç–æ–≤...${RESET}"
        sudo apt update -y
        sudo apt upgrade -y
        sudo apt install -y curl iptables build-essential git wget jq make gcc nano tmux htop nvme-cli \
                            pkg-config libssl-dev libleveldb-dev tar clang bsdmainutils ncdu unzip

        # –£—Å—Ç–∞–Ω–æ–≤–∫–∞ Docker
        if ! command -v docker &> /dev/null; then
            echo -e "${TEAL}üêã –£—Å—Ç–∞–Ω–æ–≤–∫–∞ Docker 24.0.7...${RESET}"
            curl -fsSL https://get.docker.com | sh
        else
            DOCKER_VERSION=$(docker --version | grep -oP '\d+\.\d+\.\d+')
            MIN_DOCKER_VERSION="24.0.7"
            if [[ "$(printf '%s\n' "$MIN_DOCKER_VERSION" "$DOCKER_VERSION" | sort -V | head -n1)" != "$MIN_DOCKER_VERSION" ]]; then
                echo -e "${TEAL}üîÑ –û–±–Ω–æ–≤–ª–µ–Ω–∏–µ Docker –¥–æ –≤–µ—Ä—Å–∏–∏ 24.0.7...${RESET}"
                curl -fsSL https://get.docker.com | sh
            fi
        fi

        # –£—Å—Ç–∞–Ω–æ–≤–∫–∞ Docker Compose
        if ! command -v docker-compose &> /dev/null; then
            echo -e "${TEAL}üîß –£—Å—Ç–∞–Ω–æ–≤–∫–∞ Docker Compose 1.29.2...${RESET}"
            sudo curl -L "https://github.com/docker/compose/releases/download/1.29.2/docker-compose-$(uname -s)-$(uname -m)" -o /usr/local/bin/docker-compose
            sudo chmod +x /usr/local/bin/docker-compose
        else
            DOCKER_COMPOSE_VERSION=$(docker-compose --version | grep -oP '\d+\.\d+\.\d+')
            MIN_COMPOSE_VERSION="1.29.2"
            if [[ "$(printf '%s\n' "$MIN_COMPOSE_VERSION" "$DOCKER_COMPOSE_VERSION" | sort -V | head -n1)" != "$MIN_COMPOSE_VERSION" ]]; then
                echo -e "${TEAL}üîÑ –û–±–Ω–æ–≤–ª–µ–Ω–∏–µ Docker Compose –¥–æ –≤–µ—Ä—Å–∏–∏ 1.29.2...${RESET}"
                sudo curl -L "https://github.com/docker/compose/releases/download/1.29.2/docker-compose-$(uname -s)-$(uname -m)" -o /usr/local/bin/docker-compose
                sudo chmod +x /usr/local/bin/docker-compose
            fi
        fi

        # –ù–∞—Å—Ç—Ä–æ–π–∫–∞ —Ä–µ–ø–æ–∑–∏—Ç–æ—Ä–∏—è
        echo -e "${TEAL}üì• –ö–ª–æ–Ω–∏—Ä–æ–≤–∞–Ω–∏–µ —Ä–µ–ø–æ–∑–∏—Ç–æ—Ä–∏—è...${RESET}"
        cd $HOME
        git clone https://github.com/waku-org/nwaku-compose
        cd $HOME/nwaku-compose
        cp .env.example .env

        # –°–±–æ—Ä –¥–∞–Ω–Ω—ã—Ö
        echo -e "\n${LIME}üåê –í–≤–µ–¥–∏—Ç–µ RPC URL –¥–ª—è –¥–æ—Å—Ç—É–ø–∞ –∫ —Ç–µ—Å—Ç–Ω–µ—Ç—É:${RESET}"
        read RPC_URL
        echo -e "${LIME}üîë –í–≤–µ–¥–∏—Ç–µ –ø—Ä–∏–≤–∞—Ç–Ω—ã–π –∫–ª—é—á EVM –∫–æ—à–µ–ª—å–∫–∞:${RESET}"
        read ETH_KEY
        echo -e "${LIME}üîí –í–≤–µ–¥–∏—Ç–µ –ø–∞—Ä–æ–ª—å –¥–ª—è RLN Membership:${RESET}"
        read RLN_PASSWORD

        # –û–±–Ω–æ–≤–ª–µ–Ω–∏–µ –∫–æ–Ω—Ñ–∏–≥—É—Ä–∞—Ü–∏–∏
        echo -e "${TEAL}‚öôÔ∏è –ù–∞—Å—Ç—Ä–æ–π–∫–∞ –∫–æ–Ω—Ñ–∏–≥—É—Ä–∞—Ü–∏–∏...${RESET}"
        sed -i "s|RLN_RELAY_ETH_CLIENT_ADDRESS=.*|RLN_RELAY_ETH_CLIENT_ADDRESS=$RPC_URL|" .env
        sed -i "s|ETH_TESTNET_KEY=.*|ETH_TESTNET_KEY=$ETH_KEY|" .env
        sed -i "s|RLN_RELAY_CRED_PASSWORD=.*|RLN_RELAY_CRED_PASSWORD=$RLN_PASSWORD|" .env

        # –†–µ–≥–∏—Å—Ç—Ä–∞—Ü–∏—è –∏ –∑–∞–ø—É—Å–∫
        echo -e "${TEAL}üìù –†–µ–≥–∏—Å—Ç—Ä–∞—Ü–∏—è –Ω–æ–¥—ã...${RESET}"
        ./register_rln.sh

        echo -e "${TEAL}üöÄ –ó–∞–ø—É—Å–∫ —Å–µ—Ä–≤–∏—Å–æ–≤...${RESET}"
        docker-compose up -d

        echo -e "\n${LIME}‚úÖ –£—Å—Ç–∞–Ω–æ–≤–∫–∞ —É—Å–ø–µ—à–Ω–æ –∑–∞–≤–µ—Ä—à–µ–Ω–∞!${RESET}"
        echo -e "\n${WHITE}–î–ª—è –ø—Ä–æ–≤–µ—Ä–∫–∏ –ª–æ–≥–æ–≤ –∏—Å–ø–æ–ª—å–∑—É–π—Ç–µ:${RESET}"
        echo -e "${TEAL}cd $HOME/nwaku-compose && docker-compose logs -f${RESET}\n"
        ;;

    2)
        echo -e "\n${INDIGO}üîÑ –û–±–Ω–æ–≤–ª–µ–Ω–∏–µ –Ω–æ–¥—ã Waku...${RESET}"
        cd $HOME/nwaku-compose

        echo -e "${TEAL}‚è≥ –û—Å—Ç–∞–Ω–æ–≤–∫–∞ —Å–µ—Ä–≤–∏—Å–æ–≤...${RESET}"
        docker-compose down

        echo -e "${TEAL}üßπ –û—á–∏—Å—Ç–∫–∞ –¥–∞–Ω–Ω—ã—Ö...${RESET}"
        sudo rm -r keystore rln_tree

        echo -e "${TEAL}üì• –û–±–Ω–æ–≤–ª–µ–Ω–∏–µ —Ä–µ–ø–æ–∑–∏—Ç–æ—Ä–∏—è...${RESET}"
        git pull origin master

        echo -e "${TEAL}üìù –ü–æ–≤—Ç–æ—Ä–Ω–∞—è —Ä–µ–≥–∏—Å—Ç—Ä–∞—Ü–∏—è...${RESET}"
        ./register_rln.sh

        echo -e "${TEAL}üöÄ –ü–µ—Ä–µ–∑–∞–ø—É—Å–∫ —Å–µ—Ä–≤–∏—Å–æ–≤...${RESET}"
        docker-compose up -d

        echo -e "\n${LIME}‚úÖ –û–±–Ω–æ–≤–ª–µ–Ω–∏–µ —É—Å–ø–µ—à–Ω–æ –∑–∞–≤–µ—Ä—à–µ–Ω–æ!${RESET}\n"
        ;;

    3)
        echo -e "\n${INDIGO}üìä –ü—Ä–æ–≤–µ—Ä–∫–∞ –ª–æ–≥–æ–≤...${RESET}"
        cd $HOME/nwaku-compose
        docker-compose logs -f
        ;;

    4)
        COMPOSE_FILE="$HOME/nwaku-compose/docker-compose.yml"
        
        if [[ ! -f "$COMPOSE_FILE" ]]; then
            echo -e "${CRIMSON}‚ö†Ô∏è –§–∞–π–ª docker-compose.yml –Ω–µ –Ω–∞–π–¥–µ–Ω${RESET}"
            exit 1
        fi

        # –§—É–Ω–∫—Ü–∏—è –∑–∞–º–µ–Ω—ã –ø–æ—Ä—Ç–∞
        replace_port() {
            local OLD_PORT="$1"
            local NEW_PORT="$2"
        
            if ! grep -qE "(:|[[:space:]])${OLD_PORT}:([0-9]+)" "$COMPOSE_FILE"; then
                echo -e "${CRIMSON}‚ö†Ô∏è –ü–æ—Ä—Ç ${OLD_PORT} –Ω–µ –Ω–∞–π–¥–µ–Ω –≤ —Ñ–∞–π–ª–µ${RESET}"
                return 1
            fi
        
            sed -i -E "s/(:|[[:space:]])(${OLD_PORT}):([0-9]+)/\1${NEW_PORT}:\3/g" "$COMPOSE_FILE"
        
            if grep -qE "(:|[[:space:]])${NEW_PORT}:([0-9]+)" "$COMPOSE_FILE"; then
                echo -e "${LIME}‚úì –ü–æ—Ä—Ç ${OLD_PORT} –∑–∞–º–µ–Ω–µ–Ω –Ω–∞ ${NEW_PORT}${RESET}"
            else
                echo -e "${CRIMSON}‚ö†Ô∏è –û—à–∏–±–∫–∞ –∑–∞–º–µ–Ω—ã –ø–æ—Ä—Ç–∞${RESET}"
                return 1
            fi
        }

        echo -e "\n${LIME}üîß –í–≤–µ–¥–∏—Ç–µ —Ç–µ–∫—É—â–∏–π –≤–Ω–µ—à–Ω–∏–π –ø–æ—Ä—Ç:${RESET}"
        read OLD_PORT
        
        if ! [[ "$OLD_PORT" =~ ^[0-9]+$ ]]; then
            echo -e "${CRIMSON}‚ö†Ô∏è –ü–æ—Ä—Ç –¥–æ–ª–∂–µ–Ω –±—ã—Ç—å —á–∏—Å–ª–æ–º${RESET}"
            exit 1
        fi
        
        echo -e "${LIME}üîß –í–≤–µ–¥–∏—Ç–µ –Ω–æ–≤—ã–π –≤–Ω–µ—à–Ω–∏–π –ø–æ—Ä—Ç:${RESET}"
        read NEW_PORT
        
        if ! [[ "$NEW_PORT" =~ ^[0-9]+$ ]]; then
            echo -e "${CRIMSON}‚ö†Ô∏è –ü–æ—Ä—Ç –¥–æ–ª–∂–µ–Ω –±—ã—Ç—å —á–∏—Å–ª–æ–º${RESET}"
            exit 1
        fi
        
        echo -e "${ORANGE}‚ùì –ó–∞–º–µ–Ω–∏—Ç—å –ø–æ—Ä—Ç ${OLD_PORT} –Ω–∞ ${NEW_PORT}? (y/n):${RESET}"
        read CONFIRM
        if [[ "$CONFIRM" != "y" ]]; then
            echo -e "${TEAL}‚ÑπÔ∏è –û–ø–µ—Ä–∞—Ü–∏—è –æ—Ç–º–µ–Ω–µ–Ω–∞${RESET}"
            exit 0
        fi
        
        echo -e "${TEAL}‚è≥ –û—Å—Ç–∞–Ω–∞–≤–ª–∏–≤–∞–µ–º —Å–µ—Ä–≤–∏—Å—ã...${RESET}"
        cd "$HOME/nwaku-compose" || exit
        docker-compose down
        
        echo -e "${TEAL}üîß –ó–∞–º–µ–Ω—è–µ–º –ø–æ—Ä—Ç—ã...${RESET}"
        replace_port "$OLD_PORT" "$NEW_PORT"
        
        echo -e "${TEAL}üöÄ –ü–µ—Ä–µ–∑–∞–ø—É—Å–∫–∞–µ–º —Å–µ—Ä–≤–∏—Å—ã...${RESET}"
        docker-compose up -d
        
        echo -e "\n${LIME}‚úÖ –ü–æ—Ä—Ç—ã —É—Å–ø–µ—à–Ω–æ –æ–±–Ω–æ–≤–ª–µ–Ω—ã!${RESET}\n"
        ;;

    5)
        echo -e "\n${INDIGO}üóëÔ∏è –£–¥–∞–ª–µ–Ω–∏–µ –Ω–æ–¥—ã Waku...${RESET}"

        echo -e "${TEAL}‚è≥ –û—Å—Ç–∞–Ω–æ–≤–∫–∞ —Å–µ—Ä–≤–∏—Å–æ–≤...${RESET}"
        cd $HOME/nwaku-compose
        docker-compose down

        echo -e "${TEAL}üßπ –£–¥–∞–ª–µ–Ω–∏–µ —Ñ–∞–π–ª–æ–≤...${RESET}"
        cd $HOME
        rm -rf nwaku-compose

        echo -e "${LIME}‚úÖ –ù–æ–¥–∞ —É—Å–ø–µ—à–Ω–æ —É–¥–∞–ª–µ–Ω–∞!${RESET}\n"
        ;;

    *)
        echo -e "${ORANGE}‚ö†Ô∏è –û—à–∏–±–∫–∞: –≤—ã–±–µ—Ä–∏—Ç–µ —á–∏—Å–ª–æ –æ—Ç 1 –¥–æ 5${RESET}"
        ;;
esac
