#!/bin/bash

# –¶–≤–µ—Ç–∞ —Ç–µ–∫—Å—Ç–∞
RED='\033[0;31m'
GREEN='\033[0;32m'
YELLOW='\033[0;33m'
BLUE='\033[0;34m'
PURPLE='\033[0;35m'
CYAN='\033[0;36m'
WHITE='\033[1;37m'
BOLD='\033[1m'
NC='\033[0m' # –ù–µ—Ç —Ü–≤–µ—Ç–∞

# –ü—Ä–æ–≤–µ—Ä–∫–∞ –Ω–∞–ª–∏—á–∏—è curl –∏ —É—Å—Ç–∞–Ω–æ–≤–∫–∞, –µ—Å–ª–∏ –Ω–µ —É—Å—Ç–∞–Ω–æ–≤–ª–µ–Ω
if ! command -v curl &> /dev/null; then
    sudo apt update
    sudo apt install curl -y
fi
sleep 1

# –§—É–Ω–∫—Ü–∏—è –¥–ª—è –æ—Ç–æ–±—Ä–∞–∂–µ–Ω–∏—è —É—Å–ø–µ—à–Ω—ã—Ö —Å–æ–æ–±—â–µ–Ω–∏–π
success_message() {
    echo -e "${GREEN}[‚úÖ] $1${NC}"
}

# –§—É–Ω–∫—Ü–∏—è –¥–ª—è –æ—Ç–æ–±—Ä–∞–∂–µ–Ω–∏—è –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏–æ–Ω–Ω—ã—Ö —Å–æ–æ–±—â–µ–Ω–∏–π
info_message() {
    echo -e "${CYAN}[‚ÑπÔ∏è] $1${NC}"
}

# –§—É–Ω–∫—Ü–∏—è –¥–ª—è –æ—Ç–æ–±—Ä–∞–∂–µ–Ω–∏—è –æ—à–∏–±–æ–∫
error_message() {
    echo -e "${RED}[‚ùå] $1${NC}"
}

# –§—É–Ω–∫—Ü–∏—è –¥–ª—è –æ—Ç–æ–±—Ä–∞–∂–µ–Ω–∏—è –ø—Ä–µ–¥—É–ø—Ä–µ–∂–¥–µ–Ω–∏–π
warning_message() {
    echo -e "${YELLOW}[‚ö†Ô∏è] $1${NC}"
}

# –û—á–∏—Å—Ç–∫–∞ —ç–∫—Ä–∞–Ω–∞
clear

# –§—É–Ω–∫—Ü–∏—è –æ—Ç–æ–±—Ä–∞–∂–µ–Ω–∏—è –ª–æ–≥–æ—Ç–∏–ø–∞
display_logo() {
    clear
    # –ó–∞–≥—Ä—É–∑–∫–∞ –ª–æ–≥–æ—Ç–∏–ø–∞ –∏–∑ —Ä–µ–ø–æ–∑–∏—Ç–æ—Ä–∏—è
    curl -s https://raw.githubusercontent.com/Mozgiii9/NodeRunnerScripts/refs/heads/main/logo.sh | bash || {
        # –ï—Å–ª–∏ –∑–∞–≥—Ä—É–∑–∫–∞ –Ω–µ —É–¥–∞–ª–∞—Å—å, –æ—Ç–æ–±—Ä–∞–∂–∞–µ–º —Å—Ç–∞–Ω–¥–∞—Ä—Ç–Ω—ã–π –ª–æ–≥–æ—Ç–∏–ø
        echo -e "${BOLD}${PURPLE}"
        echo -e "‚ïî‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïó"
        echo -e "‚ïë                 LAYER EDGE                    ‚ïë"
        echo -e "‚ïë               LIGHT NODE (CLI)                ‚ïë"
        echo -e "‚ïö‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïù${NC}"
    }
    
    # –î–æ–ø–æ–ª–Ω–∏—Ç–µ–ª—å–Ω–∞—è –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏—è –æ –Ω–æ–¥–µ
    echo -e "\n${BOLD}${CYAN}‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê${NC}"
    echo -e "${BOLD}${CYAN}       –ò–Ω—Å—Ç—Ä—É–º–µ–Ω—Ç —É–ø—Ä–∞–≤–ª–µ–Ω–∏—è Layer Edge         ${NC}"
    echo -e "${BOLD}${CYAN}‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê${NC}\n"
}

# –û—Ç–æ–±—Ä–∞–∂–∞–µ–º –ª–æ–≥–æ—Ç–∏–ø
display_logo

# –§—É–Ω–∫—Ü–∏—è —É—Å—Ç–∞–Ω–æ–≤–∫–∏ –∑–∞–≤–∏—Å–∏–º–æ—Å—Ç–µ–π
install_dependencies() {
    info_message "–£—Å—Ç–∞–Ω–æ–≤–∫–∞ –Ω–µ–æ–±—Ö–æ–¥–∏–º—ã—Ö –ø–∞–∫–µ—Ç–æ–≤..."
    sudo apt update && sudo apt install -y curl iptables build-essential git wget jq make gcc nano automake autoconf tmux htop nvme-cli pkg-config libssl-dev libleveldb-dev tar clang bsdmainutils ncdu unzip screen
    success_message "–ó–∞–≤–∏—Å–∏–º–æ—Å—Ç–∏ —É—Å—Ç–∞–Ω–æ–≤–ª–µ–Ω—ã"
}

# –§—É–Ω–∫—Ü–∏—è –¥–ª—è –æ—Ç–æ–±—Ä–∞–∂–µ–Ω–∏—è –º–µ–Ω—é
print_menu() {
    echo -e "\n${BOLD}${WHITE}‚ïî‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïó${NC}"
    echo -e "${BOLD}${WHITE}‚ïë        üöÄ LAYER EDGE MANAGER           ‚ïë${NC}"
    echo -e "${BOLD}${WHITE}‚ïö‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïù${NC}\n"
    
    echo -e "${BOLD}${BLUE}üîß –î–æ—Å—Ç—É–ø–Ω—ã–µ –¥–µ–π—Å—Ç–≤–∏—è:${NC}\n"
    echo -e "${WHITE}[${CYAN}1${WHITE}] ${GREEN}‚ûú ${WHITE}üõ†Ô∏è  –£—Å—Ç–∞–Ω–æ–≤–∫–∞ –∑–∞–≤–∏—Å–∏–º–æ—Å—Ç–µ–π${NC}"
    echo -e "${WHITE}[${CYAN}2${WHITE}] ${GREEN}‚ûú ${WHITE}üìã –ó–∞–ø—É—Å–∫ Merkle-—Å–µ—Ä–≤–∏—Å–∞${NC}"
    echo -e "${WHITE}[${CYAN}3${WHITE}] ${GREEN}‚ûú ${WHITE}üöÄ –ó–∞–ø—É—Å–∫ –Ω–æ–¥—ã${NC}"
    echo -e "${WHITE}[${CYAN}4${WHITE}] ${GREEN}‚ûú ${WHITE}üìä –ü—Ä–æ–≤–µ—Ä–∫–∞ –ª–æ–≥–æ–≤ –Ω–æ–¥—ã${NC}"
    echo -e "${WHITE}[${CYAN}5${WHITE}] ${GREEN}‚ûú ${WHITE}üîÑ –ü–µ—Ä–µ–∑–∞–ø—É—Å–∫ –Ω–æ–¥—ã${NC}"
    echo -e "${WHITE}[${CYAN}6${WHITE}] ${GREEN}‚ûú ${WHITE}‚ö° –û–±–Ω–æ–≤–ª–µ–Ω–∏–µ –Ω–æ–¥—ã${NC}"
    echo -e "${WHITE}[${CYAN}7${WHITE}] ${GREEN}‚ûú ${WHITE}üóëÔ∏è –£–¥–∞–ª–µ–Ω–∏–µ –Ω–æ–¥—ã${NC}"
    echo -e "${WHITE}[${CYAN}8${WHITE}] ${GREEN}‚ûú ${WHITE}üö™ –í—ã—Ö–æ–¥${NC}\n"
}

# –ì–ª–∞–≤–Ω—ã–π —Ü–∏–∫–ª
while true; do
    display_logo
    print_menu
    echo -e "${BOLD}${BLUE}üìù –í–≤–µ–¥–∏—Ç–µ –Ω–æ–º–µ—Ä –¥–µ–π—Å—Ç–≤–∏—è [1-8]:${NC} "
    read -p "‚ûú " choice

    case $choice in
        1)
            echo -e "${WHITE}[${CYAN}1/1${WHITE}] ${GREEN}‚ûú ${WHITE}üîÑ –£—Å—Ç–∞–Ω–æ–≤–∫–∞ –∑–∞–≤–∏—Å–∏–º–æ—Å—Ç–µ–π...${NC}"
            install_dependencies

            # –û–±–Ω–æ–≤–ª–µ–Ω–∏–µ –∏ —É—Å—Ç–∞–Ω–æ–≤–∫–∞ –∑–∞–≤–∏—Å–∏–º–æ—Å—Ç–µ–π
            sudo apt update && sudo apt-get upgrade -y

            git clone https://github.com/Layer-Edge/light-node.git
            cd light-node

            VER="1.21.3"
            wget "https://golang.org/dl/go$VER.linux-amd64.tar.gz"
            sudo rm -rf /usr/local/go
            sudo tar -C /usr/local -xzf "go$VER.linux-amd64.tar.gz"
            rm "go$VER.linux-amd64.tar.gz"
            [ ! -f ~/.bash_profile ] && touch ~/.bash_profile
            echo "export PATH=$PATH:/usr/local/go/bin:~/go/bin" >> ~/.bash_profile
            source $HOME/.bash_profile
            [ ! -d ~/go/bin ] && mkdir -p ~/go/bin

            if ! command -v rustc &> /dev/null; then
                info_message "Rust –Ω–µ —É—Å—Ç–∞–Ω–æ–≤–ª–µ–Ω. –£—Å—Ç–∞–Ω–∞–≤–ª–∏–≤–∞–µ–º Rust —á–µ—Ä–µ–∑ rustup..."
                curl --proto '=https' --tlsv1.2 -sSf https://sh.rustup.rs | sh -s -- -y
                source $HOME/.cargo/env
                success_message "Rust —É—Å–ø–µ—à–Ω–æ —É—Å—Ç–∞–Ω–æ–≤–ª–µ–Ω."
            else
                info_message "Rust —É–∂–µ —É—Å—Ç–∞–Ω–æ–≤–ª–µ–Ω. –û–±–Ω–æ–≤–ª—è–µ–º –µ–≥–æ —á–µ—Ä–µ–∑ rustup update..."
                rustup update
                source $HOME/.cargo/env
                success_message "Rust —É—Å–ø–µ—à–Ω–æ –æ–±–Ω–æ–≤–ª—ë–Ω."
            fi

            curl -L https://risczero.com/install | bash
            source "$HOME/.bashrc"
            sleep 5
            rzup install

            # –ó–∞–ø—Ä–∞—à–∏–≤–∞–µ–º –ø—Ä–∏–≤–∞—Ç–Ω—ã–π –∫–ª—é—á —É –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è
            echo -e "${YELLOW}üíº –í–≤–µ–¥–∏—Ç–µ –≤–∞—à –ø—Ä–∏–≤–∞—Ç–Ω—ã–π –∫–ª—é—á –±–µ–∑ 0x:${NC} "
            read -p "‚ûú " PRIV_KEY
            
            # –°–æ–∑–¥–∞–µ–º —Ñ–∞–π–ª .env —Å –Ω—É–∂–Ω—ã–º —Å–æ–¥–µ—Ä–∂–∏–º—ã–º
            echo "GRPC_URL=grpc.testnet.layeredge.io:9090" > .env
            echo "CONTRACT_ADDR=cosmos1ufs3tlq4umljk0qfe8k5ya0x6hpavn897u2cnf9k0en9jr7qarqqt56709" >> .env
            echo "ZK_PROVER_URL=http://127.0.0.1:3001" >> .env
            echo "ZK_PROVER_URL=https://layeredge.mintair.xyz/" >> .env
            echo "API_REQUEST_TIMEOUT=300" >> .env
            echo "POINTS_API=https://light-node.layeredge.io" >> .env
            echo "PRIVATE_KEY='$PRIV_KEY'" >> .env

            cd ~
            
            success_message "–ó–∞–≤–∏—Å–∏–º–æ—Å—Ç–∏ —É—Å–ø–µ—à–Ω–æ —É—Å—Ç–∞–Ω–æ–≤–ª–µ–Ω—ã –∏ –Ω–∞—Å—Ç—Ä–æ–µ–Ω—ã!"
            ;;
        2)
            echo -e "${WHITE}[${CYAN}1/1${WHITE}] ${GREEN}‚ûú ${WHITE}üöÄ –ó–∞–ø—É—Å–∫–∞–µ–º Merkle-—Å–µ—Ä–≤–∏—Å...${NC}"

            # –û–ø—Ä–µ–¥–µ–ª—è–µ–º –∏–º—è —Ç–µ–∫—É—â–µ–≥–æ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è –∏ –µ–≥–æ –¥–æ–º–∞—à–Ω—é—é –¥–∏—Ä–µ–∫—Ç–æ—Ä–∏—é
            USERNAME=$(whoami)
            HOME_DIR=$(eval echo ~$USERNAME)

            sudo bash -c "cat <<EOT > /etc/systemd/system/merkle.service
[Unit]
Description=Merkle Service for Light Node
After=network.target

[Service]
User=$USERNAME
Environment=PATH=$HOME/.cargo/bin:/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin
WorkingDirectory=$HOME_DIR/light-node/risc0-merkle-service
ExecStart=/usr/bin/env bash -c \"cargo build && cargo run --release\"
Restart=always
RestartSec=10

[Install]
WantedBy=multi-user.target
EOT"

            sudo systemctl daemon-reload
            sleep 2
            sudo systemctl enable merkle.service
            sudo systemctl start merkle.service
            # –ü—Ä–æ–≤–µ—Ä–∫–∞ –ª–æ–≥–æ–≤
            success_message "Merkle-—Å–µ—Ä–≤–∏—Å —É—Å–ø–µ—à–Ω–æ –∑–∞–ø—É—â–µ–Ω!"
            echo -e "${YELLOW}–ü–æ–∫–∞–∑–∞—Ç—å –ª–æ–≥–∏ —Å–µ—Ä–≤–∏—Å–∞? (y/n)${NC}"
            read -p "‚ûú " show_logs
            if [[ "$show_logs" == "y" || "$show_logs" == "Y" ]]; then
                sudo journalctl -u merkle.service -f
            fi
            ;;
        3)
            echo -e "${WHITE}[${CYAN}1/1${WHITE}] ${GREEN}‚ûú ${WHITE}üöÄ –ó–∞–ø—É—Å–∫–∞–µ–º –Ω–æ–¥—É...${NC}"
            USERNAME=$(whoami)
            HOME_DIR=$(eval echo ~$USERNAME)

            # –û–ø—Ä–µ–¥–µ–ª—è–µ–º –ø—É—Ç—å –∫ Go
            GO_PATH=$(which go)
            
            # –ü—Ä–æ–≤–µ—Ä—è–µ–º, —á—Ç–æ GO_PATH –Ω–µ –ø—É—Å—Ç–æ–π
            if [ -z "$GO_PATH" ]; then
                error_message "Go –Ω–µ –Ω–∞–π–¥–µ–Ω –≤ PATH. –ü—Ä–æ–≤–µ—Ä—å—Ç–µ —É—Å—Ç–∞–Ω–æ–≤–∫—É Go."
                continue
            fi

            sudo bash -c "cat <<EOT > /etc/systemd/system/light-node.service
[Unit]
Description=LayerEdge Light Node Service
After=network.target

[Service]
User=$USERNAME
WorkingDirectory=$HOME_DIR/light-node
ExecStartPre=$GO_PATH build
ExecStart=$HOME_DIR/light-node/light-node
Restart=always
RestartSec=10
TimeoutStartSec=200

[Install]
WantedBy=multi-user.target
EOT"

            sudo systemctl daemon-reload
            sleep 2
            sudo systemctl enable light-node.service
            sudo systemctl start light-node.service

            # –ó–∞–∫–ª—é—á–∏—Ç–µ–ª—å–Ω—ã–π –≤—ã–≤–æ–¥
            echo -e "${PURPLE}-----------------------------------------------------------------------${NC}"
            echo -e "${YELLOW}–ö–æ–º–∞–Ω–¥–∞ –¥–ª—è –ø—Ä–æ–≤–µ—Ä–∫–∏ –ª–æ–≥–æ–≤:${NC}"
            echo "sudo journalctl -u light-node.service -f"
            echo -e "${PURPLE}-----------------------------------------------------------------------${NC}"
            success_message "–ù–æ–¥–∞ —É—Å–ø–µ—à–Ω–æ –∑–∞–ø—É—â–µ–Ω–∞!"
            echo -e "${YELLOW}–ü–æ–∫–∞–∑–∞—Ç—å –ª–æ–≥–∏ –Ω–æ–¥—ã? (y/n)${NC}"
            read -p "‚ûú " show_logs
            if [[ "$show_logs" == "y" || "$show_logs" == "Y" ]]; then
                sudo journalctl -u light-node.service -f
            fi
            ;;
        4)
            echo -e "${WHITE}[${CYAN}1/1${WHITE}] ${GREEN}‚ûú ${WHITE}üìä –ü—Ä–æ–≤–µ—Ä—è–µ–º –ª–æ–≥–∏ –Ω–æ–¥—ã...${NC}"
            sudo journalctl -u light-node.service -f
            ;;
        5)
            echo -e "${WHITE}[${CYAN}1/1${WHITE}] ${GREEN}‚ûú ${WHITE}üîÑ –ü–µ—Ä–µ–∑–∞–ø—É—Å–∫–∞–µ–º –Ω–æ–¥—É...${NC}"
            sudo systemctl restart light-node.service
            success_message "–ù–æ–¥–∞ —É—Å–ø–µ—à–Ω–æ –ø–µ—Ä–µ–∑–∞–ø—É—â–µ–Ω–∞!"
            echo -e "${YELLOW}–ü–æ–∫–∞–∑–∞—Ç—å –ª–æ–≥–∏ –Ω–æ–¥—ã? (y/n)${NC}"
            read -p "‚ûú " show_logs
            if [[ "$show_logs" == "y" || "$show_logs" == "Y" ]]; then
                sudo journalctl -u light-node.service -f
            fi
            ;;
        6)
            echo -e "${WHITE}[${CYAN}1/3${WHITE}] ${GREEN}‚ûú ${WHITE}‚ö° –û–±–Ω–æ–≤–ª—è–µ–º –Ω–æ–¥—É...${NC}"
            cd light-node
            sudo systemctl stop light-node.service
            success_message "–ù–æ–¥–∞ –æ—Å—Ç–∞–Ω–æ–≤–ª–µ–Ω–∞"

            echo -e "${WHITE}[${CYAN}2/3${WHITE}] ${GREEN}‚ûú ${WHITE}üîÑ –û–±–Ω–æ–≤–ª–µ–Ω–∏–µ –∫–æ–Ω—Ñ–∏–≥—É—Ä–∞—Ü–∏–∏...${NC}"
            rm -f .env

            # –ó–∞–ø—Ä–∞—à–∏–≤–∞–µ–º –ø—Ä–∏–≤–∞—Ç–Ω—ã–π –∫–ª—é—á —É –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è
            echo -e "${YELLOW}üíº –í–≤–µ–¥–∏—Ç–µ –≤–∞—à –ø—Ä–∏–≤–∞—Ç–Ω—ã–π –∫–ª—é—á –±–µ–∑ 0x:${NC} "
            read -p "‚ûú " PRIV_KEY
            
            # –°–æ–∑–¥–∞–µ–º —Ñ–∞–π–ª .env —Å –Ω—É–∂–Ω—ã–º —Å–æ–¥–µ—Ä–∂–∏–º—ã–º
            echo "GRPC_URL=grpc.testnet.layeredge.io:9090" > .env
            echo "CONTRACT_ADDR=cosmos1ufs3tlq4umljk0qfe8k5ya0x6hpavn897u2cnf9k0en9jr7qarqqt56709" >> .env
            echo "ZK_PROVER_URL=http://127.0.0.1:3001" >> .env
            echo "ZK_PROVER_URL=https://layeredge.mintair.xyz/" >> .env
            echo "API_REQUEST_TIMEOUT=300" >> .env
            echo "POINTS_API=https://light-node.layeredge.io" >> .env
            echo "PRIVATE_KEY='$PRIV_KEY'" >> .env

            cd ~
            
            echo -e "${WHITE}[${CYAN}3/3${WHITE}] ${GREEN}‚ûú ${WHITE}üöÄ –ó–∞–ø—É—Å–∫ –æ–±–Ω–æ–≤–ª–µ–Ω–Ω–æ–π –Ω–æ–¥—ã...${NC}"
            sudo systemctl restart light-node.service
            success_message "–ù–æ–¥–∞ —É—Å–ø–µ—à–Ω–æ –æ–±–Ω–æ–≤–ª–µ–Ω–∞ –∏ –∑–∞–ø—É—â–µ–Ω–∞!"
            echo -e "${YELLOW}–ü–æ–∫–∞–∑–∞—Ç—å –ª–æ–≥–∏ –Ω–æ–¥—ã? (y/n)${NC}"
            read -p "‚ûú " show_logs
            if [[ "$show_logs" == "y" || "$show_logs" == "Y" ]]; then
                sudo journalctl -u light-node.service -f
            fi
            ;;
        7)
            echo -e "${WHITE}[${CYAN}1/2${WHITE}] ${GREEN}‚ûú ${WHITE}üóëÔ∏è –£–¥–∞–ª–µ–Ω–∏–µ –Ω–æ–¥—ã...${NC}"
            echo -e "${BOLD}${RED}‚ö†Ô∏è –í–ù–ò–ú–ê–ù–ò–ï: –í—Å–µ –¥–∞–Ω–Ω—ã–µ –Ω–æ–¥—ã –±—É–¥—É—Ç —É–¥–∞–ª–µ–Ω—ã! ‚ö†Ô∏è${NC}"
            echo -e "${YELLOW}–í—ã —É–≤–µ—Ä–µ–Ω—ã, —á—Ç–æ —Ö–æ—Ç–∏—Ç–µ –ø—Ä–æ–¥–æ–ª–∂–∏—Ç—å? (y/n)${NC}"
            read -p "‚ûú " confirm
            
            if [[ "$confirm" == "y" || "$confirm" == "Y" ]]; then
                echo -e "${WHITE}[${CYAN}2/2${WHITE}] ${GREEN}‚ûú ${WHITE}üßπ –û—á–∏—Å—Ç–∫–∞ —Å–∏—Å—Ç–µ–º—ã...${NC}"
                sudo systemctl stop light-node.service
                sudo systemctl disable light-node.service
                sudo systemctl stop merkle.service
                sudo systemctl disable merkle.service

                sudo rm /etc/systemd/system/light-node.service
                sudo rm /etc/systemd/system/merkle.service
                sudo systemctl daemon-reload

                rm -rf ~/light-node

                success_message "–ù–æ–¥–∞ —É—Å–ø–µ—à–Ω–æ —É–¥–∞–ª–µ–Ω–∞!"
            else
                info_message "–û–ø–µ—Ä–∞—Ü–∏—è –æ—Ç–º–µ–Ω–µ–Ω–∞."
            fi
            ;;
        8)
            echo -e "\n${GREEN}üëã –î–æ —Å–≤–∏–¥–∞–Ω–∏—è!${NC}\n"
            exit 0
            ;;
        *)
            error_message "–û—à–∏–±–∫–∞: –ù–µ–≤–µ—Ä–Ω—ã–π –≤—ã–±–æ—Ä! –ü–æ–∂–∞–ª—É–π—Å—Ç–∞, –≤–≤–µ–¥–∏—Ç–µ –Ω–æ–º–µ—Ä –æ—Ç 1 –¥–æ 8."
            ;;
    esac
    
    echo -e "\n–ù–∞–∂–º–∏—Ç–µ Enter, —á—Ç–æ–±—ã –≤–µ—Ä–Ω—É—Ç—å—Å—è –≤ –º–µ–Ω—é..."
    read
done
