#!/bin/bash

# –¶–≤–µ—Ç–æ–≤—ã–µ –∫–æ–¥—ã
RED='\033[0;31m'
GREEN='\033[0;32m'
YELLOW='\033[1;33m'
BLUE='\033[0;34m'
NC='\033[0m' # –°–±—Ä–æ—Å —Ü–≤–µ—Ç–∞

# –§—É–Ω–∫—Ü–∏—è –ª–æ–≥–∏—Ä–æ–≤–∞–Ω–∏—è
log() {
    echo -e "${BLUE}[$(date +'%Y-%m-%d %H:%M:%S')]${NC} $1"
}

# –§—É–Ω–∫—Ü–∏—è –æ—Ç–æ–±—Ä–∞–∂–µ–Ω–∏—è —É—Å–ø–µ—Ö–∞
success() {
    echo -e "${GREEN}‚úÖ $1${NC}"
}

# –§—É–Ω–∫—Ü–∏—è –æ—Ç–æ–±—Ä–∞–∂–µ–Ω–∏—è –æ—à–∏–±–∫–∏
error() {
    echo -e "${RED}‚ùå $1${NC}"
    exit 1
}

# –§—É–Ω–∫—Ü–∏—è –æ—Ç–æ–±—Ä–∞–∂–µ–Ω–∏—è –ø—Ä–µ–¥—É–ø—Ä–µ–∂–¥–µ–Ω–∏—è
warning() {
    echo -e "${YELLOW}‚ö†Ô∏è $1${NC}"
}

# –§—É–Ω–∫—Ü–∏—è –æ—Ç–æ–±—Ä–∞–∂–µ–Ω–∏—è –ª–æ–≥–æ—Ç–∏–ø–∞
show_logo() {
    curl -s https://raw.githubusercontent.com/Mozgiii9/NodeRunnerScripts/refs/heads/main/logo.sh | bash
    echo
}

# –£—Å—Ç–∞–Ω–æ–≤–∫–∞ –Ω–µ–æ–±—Ö–æ–¥–∏–º—ã—Ö –ø–∞–∫–µ—Ç–æ–≤
echo -e "${BLUE}üîß –£—Å—Ç–∞–Ω–æ–≤–∫–∞ –Ω–µ–æ–±—Ö–æ–¥–∏–º—ã—Ö –ø–∞–∫–µ—Ç–æ–≤...${NC}"
sudo apt install curl docker.io docker-compose jq -y

echo -e "${BLUE}üöÄ –ó–∞–ø—É—Å–∫ —Å–µ—Ä–≤–∏—Å–∞ Docker...${NC}"
sudo systemctl start docker
sudo systemctl enable docker

if ! sudo systemctl is-active --quiet docker; then
    error "Docker —Å–µ—Ä–≤–∏—Å –Ω–µ –∑–∞–ø—É—â–µ–Ω. –ü—Ä–æ–≤–µ—Ä—å—Ç–µ —Å—Ç–∞—Ç—É—Å –∫–æ–º–∞–Ω–¥–æ–π: 'systemctl status docker'"
fi

sudo usermod -aG docker $USER

BASE_DIR="$HOME/citrea-node"
INITIAL_DIR=$(pwd)

add_watchtower() {
    awk '/volumes:/{print "  watchtower:\n    image: containrrr/watchtower\n    container_name: watchtower\n    volumes:\n      - /var/run/docker.sock:/var/run/docker.sock\n    command: --interval 3600 bitcoin-testnet4 full-node\n    environment:\n      - WATCHTOWER_CLEANUP=true\n    restart: unless-stopped\n    networks:\n      - citrea-testnet-network\n"}1' docker-compose.yml > temp.yml
    mv temp.yml docker-compose.yml
}

install_default() {
    if [ -d "$BASE_DIR" ]; then
        warning "–ù–æ–¥–∞ Citrea —É–∂–µ —É—Å—Ç–∞–Ω–æ–≤–ª–µ–Ω–∞! –°–Ω–∞—á–∞–ª–∞ —É–¥–∞–ª–∏—Ç–µ –µ—ë."
        return
    }

    log "üöÄ –£—Å—Ç–∞–Ω–æ–≤–∫–∞ –Ω–æ–¥—ã Citrea —Å–æ —Å—Ç–∞–Ω–¥–∞—Ä—Ç–Ω—ã–º–∏ –Ω–∞—Å—Ç—Ä–æ–π–∫–∞–º–∏..."
    mkdir -p $BASE_DIR && cd $BASE_DIR
    curl https://raw.githubusercontent.com/chainwayxyz/citrea/refs/heads/nightly/docker/docker-compose.yml --output docker-compose.yml
    add_watchtower
    docker-compose up -d
    success "–£—Å—Ç–∞–Ω–æ–≤–∫–∞ —Å–æ —Å—Ç–∞–Ω–¥–∞—Ä—Ç–Ω—ã–º–∏ –Ω–∞—Å—Ç—Ä–æ–π–∫–∞–º–∏ –∑–∞–≤–µ—Ä—à–µ–Ω–∞!"
    cd $INITIAL_DIR
}

install_custom() {
    if [ -d "$BASE_DIR" ]; then
        warning "–ù–æ–¥–∞ Citrea —É–∂–µ —É—Å—Ç–∞–Ω–æ–≤–ª–µ–Ω–∞! –°–Ω–∞—á–∞–ª–∞ —É–¥–∞–ª–∏—Ç–µ –µ—ë."
        return
    }

    log "‚öôÔ∏è –£—Å—Ç–∞–Ω–æ–≤–∫–∞ –Ω–æ–¥—ã Citrea —Å –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å—Å–∫–∏–º–∏ –Ω–∞—Å—Ç—Ä–æ–π–∫–∞–º–∏..."
    
    echo -e "${YELLOW}‚å®Ô∏è  –í–≤–µ–¥–∏—Ç–µ –Ω–æ–≤–æ–µ –∏–º—è –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è RPC (–ø–æ —É–º–æ–ª—á–∞–Ω–∏—é: citrea):${NC}"
    read rpc_user
    rpc_user=${rpc_user:-citrea}
    
    echo -e "${YELLOW}‚å®Ô∏è  –í–≤–µ–¥–∏—Ç–µ –Ω–æ–≤—ã–π –ø–∞—Ä–æ–ª—å RPC (–ø–æ —É–º–æ–ª—á–∞–Ω–∏—é: citrea):${NC}"
    read rpc_password
    rpc_password=${rpc_password:-citrea}
    
    echo -e "${YELLOW}‚å®Ô∏è  –í–≤–µ–¥–∏—Ç–µ –Ω–æ–≤—ã–π –ø–æ—Ä—Ç RPC (–ø–æ —É–º–æ–ª—á–∞–Ω–∏—é: 8080):${NC}"
    read rpc_port
    rpc_port=${rpc_port:-8080}
    
    mkdir -p $BASE_DIR && cd $BASE_DIR
    
    curl https://raw.githubusercontent.com/chainwayxyz/citrea/refs/heads/nightly/docker/docker-compose.yml --output docker-compose.yml
    
    sed -i "s/-rpcuser=citrea/-rpcuser=$rpc_user/" docker-compose.yml
    sed -i "s/-rpcpassword=citrea/-rpcpassword=$rpc_password/" docker-compose.yml
    sed -i "s/ROLLUP__DA__NODE_USERNAME=citrea/ROLLUP__DA__NODE_USERNAME=$rpc_user/" docker-compose.yml
    sed -i "s/ROLLUP__DA__NODE_PASSWORD=citrea/ROLLUP__DA__NODE_PASSWORD=$rpc_password/" docker-compose.yml
    sed -i "s/ROLLUP__RPC__BIND_PORT=8080/ROLLUP__RPC__BIND_PORT=$rpc_port/" docker-compose.yml
    sed -i "s/- \"8080:8080\"/- \"$rpc_port:$rpc_port\"/" docker-compose.yml
    
    add_watchtower
    docker-compose up -d
    success "–£—Å—Ç–∞–Ω–æ–≤–∫–∞ —Å –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å—Å–∫–∏–º–∏ –Ω–∞—Å—Ç—Ä–æ–π–∫–∞–º–∏ –∑–∞–≤–µ—Ä—à–µ–Ω–∞!"
    cd $INITIAL_DIR
}

uninstall_node() {
    log "üóëÔ∏è –£–¥–∞–ª–µ–Ω–∏–µ –Ω–æ–¥—ã Citrea..."
    
    if [ ! -d "$BASE_DIR" ]; then
        error "–î–∏—Ä–µ–∫—Ç–æ—Ä–∏—è citrea-node –Ω–µ –Ω–∞–π–¥–µ–Ω–∞!"
    fi
    
    cd $BASE_DIR
    log "üì• –û—Å—Ç–∞–Ω–æ–≤–∫–∞ –∏ —É–¥–∞–ª–µ–Ω–∏–µ –∫–æ–Ω—Ç–µ–π–Ω–µ—Ä–æ–≤ —Å —Ç–æ–º–∞–º–∏..."
    docker-compose down -v || true
    
    log "üßπ –£–¥–∞–ª–µ–Ω–∏–µ Docker –æ–±—Ä–∞–∑–æ–≤..."
    docker rmi -f bitcoin/bitcoin:28.0rc1 chainwayxyz/citrea-full-node:testnet containrrr/watchtower || true
    
    cd $INITIAL_DIR
    log "üóëÔ∏è –£–¥–∞–ª–µ–Ω–∏–µ –¥–∏—Ä–µ–∫—Ç–æ—Ä–∏–∏ citrea-node..."
    rm -rf $BASE_DIR
    
    success "–ù–æ–¥–∞ Citrea —É—Å–ø–µ—à–Ω–æ —É–¥–∞–ª–µ–Ω–∞!"
    success "–í—Å–µ –∫–æ–Ω—Ç–µ–π–Ω–µ—Ä—ã, —Ç–æ–º–∞, —Å–µ—Ç–∏ –∏ –æ–±—Ä–∞–∑—ã –±—ã–ª–∏ —É–¥–∞–ª–µ–Ω—ã."
}

view_logs() {
    if [ ! -d "$BASE_DIR" ]; then
        error "–ù–æ–¥–∞ –Ω–µ —É—Å—Ç–∞–Ω–æ–≤–ª–µ–Ω–∞! –î–∏—Ä–µ–∫—Ç–æ—Ä–∏—è citrea-node –Ω–µ –Ω–∞–π–¥–µ–Ω–∞."
    }
    
    log "üìã –ü—Ä–æ—Å–º–æ—Ç—Ä –ª–æ–≥–æ–≤..."
    cd $BASE_DIR && docker-compose logs
    cd $INITIAL_DIR
}

check_sync() {
    if [ ! -d "$BASE_DIR" ]; then
        error "–ù–æ–¥–∞ –Ω–µ —É—Å—Ç–∞–Ω–æ–≤–ª–µ–Ω–∞! –î–∏—Ä–µ–∫—Ç–æ—Ä–∏—è citrea-node –Ω–µ –Ω–∞–π–¥–µ–Ω–∞."
    }
    
    local current_port=$(grep "ROLLUP__RPC__BIND_PORT=" $BASE_DIR/docker-compose.yml | cut -d'=' -f2)
    if [ -z "$current_port" ]; then
        current_port="8080"
    fi
    
    log "üîÑ –ü—Ä–æ–≤–µ—Ä–∫–∞ —Å—Ç–∞—Ç—É—Å–∞ —Å–∏–Ω—Ö—Ä–æ–Ω–∏–∑–∞—Ü–∏–∏..."
    curl -X POST --header "Content-Type: application/json" \
        --data '{"jsonrpc":"2.0","method":"citrea_syncStatus","params":[], "id":31}' \
        "http://0.0.0.0:$current_port" | jq
}

show_menu() {
    clear
    show_logo
    echo -e "${BLUE}‚ï≠‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚ïÆ${NC}"
    echo -e "${BLUE}‚îÇ    üåü –£–ø—Ä–∞–≤–ª–µ–Ω–∏–µ –Ω–æ–¥–æ–π Citrea    ‚îÇ${NC}"
    echo -e "${BLUE}‚ï∞‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚ïØ${NC}"
    echo -e "1. üì¶ –£—Å—Ç–∞–Ω–æ–≤–∏—Ç—å –Ω–æ–¥—É (—Å—Ç–∞–Ω–¥–∞—Ä—Ç–Ω—ã–µ –Ω–∞—Å—Ç—Ä–æ–π–∫–∏)"
    echo -e "2. ‚öôÔ∏è –£—Å—Ç–∞–Ω–æ–≤–∏—Ç—å –Ω–æ–¥—É (—Å–≤–æ–∏ –Ω–∞—Å—Ç—Ä–æ–π–∫–∏)"
    echo -e "3. üóëÔ∏è –£–¥–∞–ª–∏—Ç—å –Ω–æ–¥—É"
    echo -e "4. üìã –ü—Ä–æ—Å–º–æ—Ç—Ä –ª–æ–≥–æ–≤"
    echo -e "5. üîÑ –ü—Ä–æ–≤–µ—Ä–∏—Ç—å —Å—Ç–∞—Ç—É—Å —Å–∏–Ω—Ö—Ä–æ–Ω–∏–∑–∞—Ü–∏–∏"
    echo -e "6. üö™ –í—ã—Ö–æ–¥"
    echo
    echo -e "${YELLOW}‚å®Ô∏è  –í—ã–±–µ—Ä–∏—Ç–µ –æ–ø—Ü–∏—é (1-6):${NC}"
}

while true; do
    show_menu
    read choice
    
    case $choice in
        1) install_default ;;
        2) install_custom ;;
        3) uninstall_node ;;
        4) view_logs ;;
        5) check_sync ;;
        6)
            log "üëã –í—ã—Ö–æ–¥ –∏–∑ —É—Å—Ç–∞–Ω–æ–≤—â–∏–∫–∞..."
            exit 0
            ;;
        *)
            warning "–ù–µ–≤–µ—Ä–Ω—ã–π –≤—ã–±–æ—Ä. –ü–æ–∂–∞–ª—É–π—Å—Ç–∞, –≤—ã–±–µ—Ä–∏—Ç–µ 1-6"
            ;;
    esac
    
    echo
    echo -e "${YELLOW}‚å®Ô∏è  –ù–∞–∂–º–∏—Ç–µ Enter –¥–ª—è –ø—Ä–æ–¥–æ–ª–∂–µ–Ω–∏—è...${NC}"
    read
done
